ACCOUNT_SETTINGS android.accounts.AbstractAccountAuthenticator$Transport.updateCredentials(Landroid/accounts/IAccountAuthenticatorResponse;Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)V
ACCOUNT_SETTINGS android.accounts.AccountAuthenticatorActivity.sendBroadcast(Landroid/content/Intent;Ljava/lang/String;)V android.permission.BROADCAST_STICKY android.permission.MANAGE_APP_TOKENS 
ACCOUNT_SETTINGS android.accounts.AccountAuthenticatorActivity.sendOrderedBroadcast(Landroid/content/Intent;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V android.permission.BROADCAST_STICKY android.permission.MANAGE_APP_TOKENS 
ACCOUNT_SETTINGS android.accounts.AccountAuthenticatorActivity.setRequestedOrientation(I)V android.permission.BROADCAST_STICKY android.permission.MANAGE_APP_TOKENS android.permission.UPDATE_DEVICE_STATS android.permission.DEVICE_POWER android.permission.WAKE_LOCK 
ACCOUNT_SETTINGS android.accounts.AccountAuthenticatorActivity.setWallpaper(Ljava/io/InputStream;)V android.permission.SET_WALLPAPER android.permission.MANAGE_APP_TOKENS 
ACCOUNT_SETTINGS android.accounts.AccountAuthenticatorActivity.startService(Landroid/content/Intent;)Landroid/content/ComponentName; android.permission.MANAGE_APP_TOKENS 
ACCOUNT_SETTINGS android.accounts.AccountAuthenticatorCache$MySerializer.writeAsXml(Ljava/lang/Object;Lorg/xmlpull/v1/XmlSerializer;)V
ACCOUNT_SETTINGS android.accounts.AccountManager.addAccountExplicitly(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)Z
ACCOUNT_SETTINGS android.accounts.AccountManager.addAccount(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Landroid/os/Bundle;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;
ACCOUNT_SETTINGS android.accounts.AccountManager.addOnAccountsUpdatedListener(Landroid/accounts/OnAccountsUpdateListener;Landroid/os/Handler;Z)V
ACCOUNT_SETTINGS android.accounts.AccountManager$AmsTask$Response.onError(ILjava/lang/String;)V
ACCOUNT_SETTINGS android.accounts.AccountManager$AmsTask$Response.onResult(Landroid/os/Bundle;)V
ACCOUNT_SETTINGS android.accounts.AccountManager$AmsTask.set(Landroid/os/Bundle;)V
ACCOUNT_SETTINGS android.accounts.AccountManager$AmsTask.set(Ljava/lang/Object;)V
ACCOUNT_SETTINGS android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1.run(Landroid/accounts/AccountManagerFuture;)V
ACCOUNT_SETTINGS android.accounts.AccountManager.invalidateAuthToken(Ljava/lang/String;Ljava/lang/String;)V
ACCOUNT_SETTINGS android.accounts.AccountManager.newChooseAccountIntent(Landroid/accounts/Account;Ljava/util/ArrayList;[Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Landroid/os/Bundle;)Landroid/content/Intent;
ACCOUNT_SETTINGS android.accounts.AccountManagerService$3.onResult(Landroid/os/Bundle;)V
ACCOUNT_SETTINGS android.accounts.AccountManagerService$4.onResult(Landroid/os/Bundle;)V
ACCOUNT_SETTINGS android.accounts.AccountManagerService.access$1100(Landroid/accounts/AccountManagerService;Landroid/accounts/AccountManagerService$UserAccounts;Landroid/accounts/Account;Ljava/lang/String;Ljava/lang/String;)Z android.permission.STOP_APP_SWITCHES 
ACCOUNT_SETTINGS android.accounts.AccountManagerService.addAccount(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)Z
ACCOUNT_SETTINGS android.accounts.AccountManagerService.getAccountsByFeatures(Landroid/accounts/IAccountManagerResponse;Ljava/lang/String;[Ljava/lang/String;)V
ACCOUNT_SETTINGS android.accounts.AccountManagerService$GetAccountsByTypeAndFeatureSession.sendResult()V
ACCOUNT_SETTINGS android.accounts.AccountManagerService.getAuthToken(Landroid/accounts/IAccountManagerResponse;Landroid/accounts/Account;Ljava/lang/String;ZZLandroid/os/Bundle;)V android.permission.USE_CREDENTIALS 
ACCOUNT_SETTINGS android.accounts.AccountManagerService.installNotification(ILandroid/app/Notification;Landroid/os/UserHandle;)V
ACCOUNT_SETTINGS android.accounts.AccountManagerService.invalidateAuthToken(Ljava/lang/String;Ljava/lang/String;)V
ACCOUNT_SETTINGS android.accounts.AccountManagerService.onBind(Landroid/content/Intent;)Landroid/os/IBinder;
ACCOUNT_SETTINGS android.accounts.AccountManagerService.peekAuthToken(Landroid/accounts/Account;Ljava/lang/String;)Ljava/lang/String;
ACCOUNT_SETTINGS android.accounts.AccountManagerService.readAuthTokenInternal(Landroid/accounts/AccountManagerService$UserAccounts;Landroid/accounts/Account;Ljava/lang/String;)Ljava/lang/String;
ACCOUNT_SETTINGS android.accounts.AccountManagerService.readAuthTokensForAccountFromDatabaseLocked(Landroid/database/sqlite/SQLiteDatabase;Landroid/accounts/Account;)Ljava/util/HashMap;
ACCOUNT_SETTINGS android.accounts.AccountManagerService.readUserDataForAccountFromDatabaseLocked(Landroid/database/sqlite/SQLiteDatabase;Landroid/accounts/Account;)Ljava/util/HashMap;
ACCOUNT_SETTINGS android.accounts.AccountManagerService.readUserDataInternal(Landroid/accounts/AccountManagerService$UserAccounts;Landroid/accounts/Account;Ljava/lang/String;)Ljava/lang/String;
ACCOUNT_SETTINGS android.accounts.AccountManagerService$RemoveAccountSession.onResult(Landroid/os/Bundle;)V
ACCOUNT_SETTINGS android.accounts.AccountManagerService.setAuthToken(Landroid/accounts/Account;Ljava/lang/String;Ljava/lang/String;)V
ACCOUNT_SETTINGS android.accounts.AccountManagerService.setPassword(Landroid/accounts/Account;Ljava/lang/String;)V android.permission.AUTHENTICATE_ACCOUNTS 
ACCOUNT_SETTINGS android.accounts.AccountManagerService.setUserData(Landroid/accounts/Account;Ljava/lang/String;Ljava/lang/String;)V
ACCOUNT_SETTINGS android.accounts.AccountManagerService$TestFeaturesSession.onResult(Landroid/os/Bundle;)V
ACCOUNT_SETTINGS android.accounts.AccountManagerService.updateAppPermission(Landroid/accounts/Account;Ljava/lang/String;IZ)V
ACCOUNT_SETTINGS android.accounts.AccountManagerService.writeAuthTokenIntoCacheLocked(Landroid/accounts/AccountManagerService$UserAccounts;Landroid/database/sqlite/SQLiteDatabase;Landroid/accounts/Account;Ljava/lang/String;Ljava/lang/String;)V
ACCOUNT_SETTINGS android.accounts.AccountManagerService.writeUserDataIntoCacheLocked(Landroid/accounts/AccountManagerService$UserAccounts;Landroid/database/sqlite/SQLiteDatabase;Landroid/accounts/Account;Ljava/lang/String;Ljava/lang/String;)V
ACCOUNT_SETTINGS android.accounts.AccountManager.setAuthToken(Landroid/accounts/Account;Ljava/lang/String;Ljava/lang/String;)V
ACCOUNT_SETTINGS android.accounts.AccountManager.setPassword(Landroid/accounts/Account;Ljava/lang/String;)V android.permission.AUTHENTICATE_ACCOUNTS 
ACCOUNT_SETTINGS android.accounts.AccountManager.setUserData(Landroid/accounts/Account;Ljava/lang/String;Ljava/lang/String;)V
ACCOUNT_SETTINGS android.accounts.AccountManager.updateAppPermission(Landroid/accounts/Account;Ljava/lang/String;IZ)V
ACCOUNT_SETTINGS android.accounts.AccountManager.updateCredentials(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;
ACCOUNT_SETTINGS android.accounts.IAccountAuthenticatorResponse$Stub$Proxy.onError(ILjava/lang/String;)V
ACCOUNT_SETTINGS android.accounts.IAccountAuthenticator$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
ACCOUNT_SETTINGS android.accounts.IAccountAuthenticator$Stub$Proxy.addAccount(Landroid/accounts/IAccountAuthenticatorResponse;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Landroid/os/Bundle;)V
ACCOUNT_SETTINGS android.accounts.IAccountAuthenticator$Stub$Proxy.confirmCredentials(Landroid/accounts/IAccountAuthenticatorResponse;Landroid/accounts/Account;Landroid/os/Bundle;)V
ACCOUNT_SETTINGS android.accounts.IAccountAuthenticator$Stub$Proxy.editProperties(Landroid/accounts/IAccountAuthenticatorResponse;Ljava/lang/String;)V
ACCOUNT_SETTINGS android.accounts.IAccountAuthenticator$Stub$Proxy.getAccountRemovalAllowed(Landroid/accounts/IAccountAuthenticatorResponse;Landroid/accounts/Account;)V
ACCOUNT_SETTINGS android.accounts.IAccountAuthenticator$Stub$Proxy.getAuthTokenLabel(Landroid/accounts/IAccountAuthenticatorResponse;Ljava/lang/String;)V
ACCOUNT_SETTINGS android.accounts.IAccountAuthenticator$Stub$Proxy.getAuthToken(Landroid/accounts/IAccountAuthenticatorResponse;Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)V
ACCOUNT_SETTINGS android.accounts.IAccountAuthenticator$Stub$Proxy.hasFeatures(Landroid/accounts/IAccountAuthenticatorResponse;Landroid/accounts/Account;[Ljava/lang/String;)V
ACCOUNT_SETTINGS android.accounts.IAccountAuthenticator$Stub$Proxy.updateCredentials(Landroid/accounts/IAccountAuthenticatorResponse;Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)V
ACCOUNT_SETTINGS android.accounts.IAccountManagerResponse$Stub$Proxy.onError(ILjava/lang/String;)V
ACCOUNT_SETTINGS android.accounts.IAccountManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
ACCOUNT_SETTINGS android.accounts.IAccountManager$Stub$Proxy.addAccount(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)Z
ACCOUNT_SETTINGS android.accounts.IAccountManager$Stub$Proxy.addAcount(Landroid/accounts/IAccountManagerResponse;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;ZLandroid/os/Bundle;)V android.permission.MANAGE_ACCOUNTS 
ACCOUNT_SETTINGS android.accounts.IAccountManager$Stub$Proxy.confirmCredentialsAsUser(Landroid/accounts/IAccountManagerResponse;Landroid/accounts/Account;Landroid/os/Bundle;ZI)V
ACCOUNT_SETTINGS android.accounts.IAccountManager$Stub$Proxy.editProperties(Landroid/accounts/IAccountManagerResponse;Ljava/lang/String;Z)V
ACCOUNT_SETTINGS android.accounts.IAccountManager$Stub$Proxy.getAccountsByFeatures(Landroid/accounts/IAccountManagerResponse;Ljava/lang/String;[Ljava/lang/String;)V
ACCOUNT_SETTINGS android.accounts.IAccountManager$Stub$Proxy.getAuthTokenLabel(Landroid/accounts/IAccountManagerResponse;Ljava/lang/String;Ljava/lang/String;)V
ACCOUNT_SETTINGS android.accounts.IAccountManager$Stub$Proxy.getAuthToken(Landroid/accounts/IAccountManagerResponse;Landroid/accounts/Account;Ljava/lang/String;ZZLandroid/os/Bundle;)V
ACCOUNT_SETTINGS android.accounts.IAccountManager$Stub$Proxy.hasFeatures(Landroid/accounts/IAccountManagerResponse;Landroid/accounts/Account;[Ljava/lang/String;)V android.permission.GET_ACCOUNTS 
ACCOUNT_SETTINGS android.accounts.IAccountManager$Stub$Proxy.invalidateAuthToken(Ljava/lang/String;Ljava/lang/String;)V
ACCOUNT_SETTINGS android.accounts.IAccountManager$Stub$Proxy.peekAuthToken(Landroid/accounts/Account;Ljava/lang/String;)Ljava/lang/String;
ACCOUNT_SETTINGS android.accounts.IAccountManager$Stub$Proxy.removeAccount(Landroid/accounts/IAccountManagerResponse;Landroid/accounts/Account;)V android.permission.MANAGE_ACCOUNTS 
ACCOUNT_SETTINGS android.accounts.IAccountManager$Stub$Proxy.setAuthToken(Landroid/accounts/Account;Ljava/lang/String;Ljava/lang/String;)V
ACCOUNT_SETTINGS android.accounts.IAccountManager$Stub$Proxy.setPassword(Landroid/accounts/Account;Ljava/lang/String;)V android.permission.AUTHENTICATE_ACCOUNTS 
ACCOUNT_SETTINGS android.accounts.IAccountManager$Stub$Proxy.setUserData(Landroid/accounts/Account;Ljava/lang/String;Ljava/lang/String;)V
ACCOUNT_SETTINGS android.accounts.IAccountManager$Stub$Proxy.updateAppPermission(Landroid/accounts/Account;Ljava/lang/String;IZ)V
ACCOUNT_SETTINGS android.accounts.IAccountManager$Stub$Proxy.updateCredentials(Landroid/accounts/IAccountManagerResponse;Landroid/accounts/Account;Ljava/lang/String;ZLandroid/os/Bundle;)V
ACCOUNT_SETTINGS android.content.ContextWrapper.setWallpaper(Ljava/io/InputStream;)V android.permission.SET_WALLPAPER 
ACCOUNT_SETTINGS android.test.IsolatedContext$MockAccountManager.setPassword(Landroid/accounts/Account;Ljava/lang/String;)V android.permission.AUTHENTICATE_ACCOUNTS 
AUDIO android.media.audiofx.AudioEffect.intToByteArray(I)[B
AUDIO android.media.audiofx.AudioEffect.setEnabled(Z)I
AUDIO android.media.audiofx.AudioEffect.setParameter([B[B)I
AUDIO android.media.audiofx.AudioEffect.setParameter(I[B)I
AUDIO android.media.audiofx.AudioEffect.setParameter([I[B)I
AUDIO android.media.audiofx.AudioEffect.setParameter(II)I
AUDIO android.media.audiofx.AudioEffect.setParameter([I[I)I
AUDIO android.media.audiofx.AudioEffect.setParameter(IS)I
AUDIO android.media.audiofx.AudioEffect.setParameter([I[S)I
AUDIO android.media.audiofx.AudioEffect.shortToByteArray(S)[B
AUDIO android.media.audiofx.BassBoost.setProperties(Landroid/media/audiofx/BassBoost$Settings;)V
AUDIO android.media.audiofx.BassBoost.setStrength(S)V
AUDIO android.media.audiofx.Equalizer.setBandLevel(SS)V
AUDIO android.media.audiofx.Equalizer.setProperties(Landroid/media/audiofx/Equalizer$Settings;)V
AUDIO android.media.audiofx.PresetReverb.setPreset(S)V
AUDIO android.media.audiofx.PresetReverb.setProperties(Landroid/media/audiofx/PresetReverb$Settings;)V
AUDIO android.media.audiofx.Virtualizer.setProperties(Landroid/media/audiofx/Virtualizer$Settings;)V
AUDIO android.media.audiofx.Virtualizer.setStrength(S)V
AUDIO android.media.AudioManager.setBluetoothA2dpOn(Z)V
AUDIO android.media.AudioManager.setBluetoothScoOn(Z)V
AUDIO android.media.AudioManager.setMasterMute(ZI)V
AUDIO android.media.AudioManager.setMasterMute(Z)V
AUDIO android.media.AudioManager.setMasterVolume(II)V
AUDIO android.media.AudioManager.setMicrophoneMute(Z)V
AUDIO android.media.AudioManager.setMode(I)V
AUDIO android.media.AudioManager.setParameter(Ljava/lang/String;Ljava/lang/String;)V
AUDIO android.media.AudioManager.setParameters(Ljava/lang/String;)V
AUDIO android.media.AudioManager.setRemoteSubmixOn(ZI)V
AUDIO android.media.AudioManager.setRingerMode(I)V
AUDIO android.media.AudioManager.setRouting(III)V
AUDIO android.media.AudioManager.setSpeakerphoneOn(Z)V
AUDIO android.media.AudioManager.setStreamMute(IZ)V
AUDIO android.media.AudioManager.setStreamSolo(IZ)V
AUDIO android.media.AudioManager.setStreamVolume(III)V
AUDIO android.media.AudioManager.setVibrateSetting(II)V
AUDIO android.media.AudioManager.setWiredDeviceConnectionState(IILjava/lang/String;)V
AUDIO android.media.AudioManager.setWiredHeadsetOn(Z)V
AUDIO android.media.AudioRecord.setNotificationMarkerPosition(I)I
AUDIO android.media.AudioRecord.setPositionNotificationPeriod(I)I
AUDIO android.media.AudioRoutesInfo.writeToParcel(Landroid/os/Parcel;I)V
AUDIO android.media.AudioService.adjustStreamVolume(III)V
AUDIO android.media.AudioService$AudioHandler.handleMessage(Landroid/os/Message;)V
AUDIO android.media.AudioService.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z android.permission.BLUETOOTH android.permission.WRITE_SETTINGS android.permission.BROADCAST_STICKY android.permission.BLUETOOTH_ADMIN android.permission.WAKE_LOCK android.permission.MODIFY_AUDIO_SETTINGS 
AUDIO android.media.AudioService.playSoundEffect(I)V
AUDIO android.media.AudioService.playSoundEffectVolume(IF)V
AUDIO android.media.AudioService.registerRemoteVolumeObserverForRcc(ILandroid/media/IRemoteVolumeObserver;)V
AUDIO android.media.AudioService.setBluetoothA2dpDeviceConnectionState(Landroid/bluetooth/BluetoothDevice;I)I
AUDIO android.media.AudioService.setBluetoothScoOn(Z)V
AUDIO android.media.AudioService.setMasterMute(ZILandroid/os/IBinder;)V
AUDIO android.media.AudioService.setMasterVolume(II)V
AUDIO android.media.AudioService.setMode(ILandroid/os/IBinder;)V android.permission.BLUETOOTH android.permission.BROADCAST_STICKY android.permission.BLUETOOTH_ADMIN android.permission.MODIFY_AUDIO_SETTINGS 
AUDIO android.media.AudioService.setPlaybackInfoForRcc(III)V
AUDIO android.media.AudioService.setRemoteStreamVolume(I)V
AUDIO android.media.AudioService.setRemoteSubmixOn(ZI)V
AUDIO android.media.AudioService.setRingerMode(I)V
AUDIO android.media.AudioService.setSpeakerphoneOn(Z)V
AUDIO android.media.AudioService.setStreamMute(IZLandroid/os/IBinder;)V
AUDIO android.media.AudioService.setStreamSolo(IZLandroid/os/IBinder;)V
AUDIO android.media.AudioService.setStreamVolume(III)V
AUDIO android.media.AudioService.setVibrateSetting(II)V
AUDIO android.media.AudioService.setWiredDeviceConnectionState(IILjava/lang/String;)V
AUDIO android.media.AudioService$VolumeStreamState.setAllIndexes(Landroid/media/AudioService$VolumeStreamState;Z)V android.permission.STOP_APP_SWITCHES 
AUDIO android.media.AudioService$VolumeStreamState.setIndex(IIZ)Z
AUDIO android.media.AudioService$VolumeStreamState.setLastAudibleIndex(II)V
AUDIO android.media.AudioTrack.setAuxEffectSendLevel(F)I
AUDIO android.media.AudioTrack.setLoopPoints(III)I
AUDIO android.media.AudioTrack.setNotificationMarkerPosition(I)I
AUDIO android.media.AudioTrack.setPlaybackHeadPosition(I)I
AUDIO android.media.AudioTrack.setPlaybackRate(I)I
AUDIO android.media.AudioTrack.setPositionNotificationPeriod(I)I
AUDIO android.media.AudioTrack.setStereoVolume(FF)I
AUDIO android.media.IAudioFocusDispatcher$Stub$Proxy.dispatchAudioFocusChange(ILjava/lang/String;)V
AUDIO android.media.IAudioService$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z android.permission.BLUETOOTH android.permission.WRITE_SETTINGS android.permission.BROADCAST_STICKY android.permission.BLUETOOTH_ADMIN android.permission.WAKE_LOCK android.permission.MODIFY_AUDIO_SETTINGS 
AUDIO android.media.IAudioService$Stub$Proxy.abandonAudioFocus(Landroid/media/IAudioFocusDispatcher;Ljava/lang/String;)I
AUDIO android.media.IAudioService$Stub$Proxy.adjustLocalOrRemoteStreamVolume(II)V
AUDIO android.media.IAudioService$Stub$Proxy.adjustMasterVolume(II)V
AUDIO android.media.IAudioService$Stub$Proxy.adjustStreamVolume(III)V
AUDIO android.media.IAudioService$Stub$Proxy.adjustSuggestedStreamVolume(III)V
AUDIO android.media.IAudioService$Stub$Proxy.adjustVolume(II)V
AUDIO android.media.IAudioService$Stub$Proxy.forceVolumeControlStream(ILandroid/os/IBinder;)V
AUDIO android.media.IAudioService$Stub$Proxy.playSoundEffect(I)V
AUDIO android.media.IAudioService$Stub$Proxy.playSoundEffectVolume(IF)V
AUDIO android.media.IAudioService$Stub$Proxy.registerRemoteControlClient(Landroid/app/PendingIntent;Landroid/media/IRemoteControlClient;Ljava/lang/String;)I
AUDIO android.media.IAudioService$Stub$Proxy.registerRemoteControlDisplay(Landroid/media/IRemoteControlDisplay;)V
AUDIO android.media.IAudioService$Stub$Proxy.registerRemoteVolumeObserverForRcc(ILandroid/media/IRemoteVolumeObserver;)V
AUDIO android.media.IAudioService$Stub$Proxy.remoteControlDisplayUsesBitmapSize(Landroid/media/IRemoteControlDisplay;II)V
AUDIO android.media.IAudioService$Stub$Proxy.requestAudioFocus(IILandroid/os/IBinder;Landroid/media/IAudioFocusDispatcher;Ljava/lang/String;Ljava/lang/String;)I
AUDIO android.media.IAudioService$Stub$Proxy.setBluetoothA2dpDeviceConnectionState(Landroid/bluetooth/BluetoothDevice;I)I
AUDIO android.media.IAudioService$Stub$Proxy.setBluetoothA2dpOn(Z)V
AUDIO android.media.IAudioService$Stub$Proxy.setBluetoothScoOn(Z)V android.permission.MODIFY_AUDIO_SETTINGS 
AUDIO android.media.IAudioService$Stub$Proxy.setMasterMute(ZILandroid/os/IBinder;)V
AUDIO android.media.IAudioService$Stub$Proxy.setMasterVolume(II)V
AUDIO android.media.IAudioService$Stub$Proxy.setMode(ILandroid/os/IBinder;)V
AUDIO android.media.IAudioService$Stub$Proxy.setPlaybackInfoForRcc(III)V
AUDIO android.media.IAudioService$Stub$Proxy.setRemoteStreamVolume(I)V
AUDIO android.media.IAudioService$Stub$Proxy.setRemoteSubmixOn(ZI)V
AUDIO android.media.IAudioService$Stub$Proxy.setRingerMode(I)V
AUDIO android.media.IAudioService$Stub$Proxy.setRingtonePlayer(Landroid/media/IRingtonePlayer;)V
AUDIO android.media.IAudioService$Stub$Proxy.setSpeakerphoneOn(Z)V
AUDIO android.media.IAudioService$Stub$Proxy.setStreamMute(IZLandroid/os/IBinder;)V
AUDIO android.media.IAudioService$Stub$Proxy.setStreamSolo(IZLandroid/os/IBinder;)V
AUDIO android.media.IAudioService$Stub$Proxy.setStreamVolume(III)V
AUDIO android.media.IAudioService$Stub$Proxy.setVibrateSetting(II)V
AUDIO android.media.IAudioService$Stub$Proxy.setWiredDeviceConnectionState(IILjava/lang/String;)V
AUDIO android.media.IAudioService$Stub$Proxy.shouldVibrate(I)Z
AUDIO android.media.IAudioService$Stub$Proxy.startBluetoothSco(Landroid/os/IBinder;)V
AUDIO android.media.IAudioService$Stub$Proxy.startWatchingRoutes(Landroid/media/IAudioRoutesObserver;)Landroid/media/AudioRoutesInfo;
AUDIO android.media.IAudioService$Stub$Proxy.stopBluetoothSco(Landroid/os/IBinder;)V
AUDIO android.media.IAudioService$Stub$Proxy.unregisterAudioFocusClient(Ljava/lang/String;)V
AUDIO android.media.IAudioService$Stub$Proxy.unregisterRemoteControlClient(Landroid/app/PendingIntent;Landroid/media/IRemoteControlClient;)V
AUDIO android.media.IAudioService$Stub$Proxy.unregisterRemoteControlDisplay(Landroid/media/IRemoteControlDisplay;)V
BLUETOOTH android.bluetooth.BluetoothA2dp.setPriority(Landroid/bluetooth/BluetoothDevice;I)Z
BLUETOOTH android.bluetooth.BluetoothAdapter.setDiscoverableTimeout(I)V
BLUETOOTH android.bluetooth.BluetoothAdapter.setScanMode(II)Z
BLUETOOTH android.bluetooth.BluetoothAdapter.setScanMode(I)Z
BLUETOOTH android.bluetooth.BluetoothDevice.setAlias(Ljava/lang/String;)Z
BLUETOOTH android.bluetooth.BluetoothDevice.setDeviceOutOfBandData([B[B)Z
BLUETOOTH android.bluetooth.BluetoothDevice.setPairingConfirmation(Z)Z
BLUETOOTH android.bluetooth.BluetoothDevice.setPasskey(I)Z
BLUETOOTH android.bluetooth.BluetoothDevice.setPin([B)Z
BLUETOOTH android.bluetooth.BluetoothDevice.setTrust(Z)Z
BLUETOOTH android.bluetooth.BluetoothHeadset.setPriority(Landroid/bluetooth/BluetoothDevice;I)Z
BLUETOOTH android.bluetooth.BluetoothHeadset.startScoUsingVirtualVoiceCall(Landroid/bluetooth/BluetoothDevice;)Z
BLUETOOTH android.bluetooth.BluetoothHeadset.startVoiceRecognition(Landroid/bluetooth/BluetoothDevice;)Z
BLUETOOTH android.bluetooth.BluetoothInputDevice.sendData(Landroid/bluetooth/BluetoothDevice;Ljava/lang/String;)Z
BLUETOOTH android.bluetooth.BluetoothInputDevice.setPriority(Landroid/bluetooth/BluetoothDevice;I)Z
BLUETOOTH android.bluetooth.BluetoothInputDevice.setProtocolMode(Landroid/bluetooth/BluetoothDevice;I)Z
BLUETOOTH android.bluetooth.BluetoothInputDevice.setReport(Landroid/bluetooth/BluetoothDevice;BLjava/lang/String;)Z
BLUETOOTH android.bluetooth.BluetoothOutputStream.write([BII)V
BLUETOOTH android.bluetooth.BluetoothPan.setBluetoothTethering(Z)V
BLUETOOTH android.bluetooth.BluetoothServerSocket.setServiceName(Ljava/lang/String;)V
BLUETOOTH android.bluetooth.BluetoothTetheringDataTracker.setDependencyMet(Z)V
BLUETOOTH android.bluetooth.BluetoothTetheringDataTracker.setPolicyDataEnable(Z)V
BLUETOOTH android.bluetooth.BluetoothTetheringDataTracker.setRadio(Z)Z
BLUETOOTH android.bluetooth.BluetoothTetheringDataTracker.setTeardownRequested(Z)V
BLUETOOTH android.bluetooth.BluetoothTetheringDataTracker.setUserDataEnable(Z)V
BLUETOOTH android.bluetooth.IBluetoothA2dp$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
BLUETOOTH android.bluetooth.IBluetoothA2dp$Stub$Proxy.setPriority(Landroid/bluetooth/BluetoothDevice;I)Z
BLUETOOTH android.bluetooth.IBluetoothCallback$Stub$Proxy.onBluetoothStateChange(II)V
BLUETOOTH android.bluetooth.IBluetoothHeadsetPhone$Stub$Proxy.processChld(I)Z
BLUETOOTH android.bluetooth.IBluetoothHeadsetPhone$Stub$Proxy.sendDtmf(I)Z
BLUETOOTH android.bluetooth.IBluetoothHeadset$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z android.permission.BLUETOOTH android.permission.WRITE_SETTINGS android.permission.BLUETOOTH_ADMIN android.permission.WAKE_LOCK android.permission.MODIFY_AUDIO_SETTINGS 
BLUETOOTH android.bluetooth.IBluetoothHeadset$Stub$Proxy.clccResponse(IIIIZLjava/lang/String;I)V
BLUETOOTH android.bluetooth.IBluetoothHeadset$Stub$Proxy.phoneStateChanged(IIILjava/lang/String;I)V
BLUETOOTH android.bluetooth.IBluetoothHeadset$Stub$Proxy.setPriority(Landroid/bluetooth/BluetoothDevice;I)Z
BLUETOOTH android.bluetooth.IBluetoothHealthCallback$Stub$Proxy.onHealthAppConfigurationStatusChange(Landroid/bluetooth/BluetoothHealthAppConfiguration;I)V
BLUETOOTH android.bluetooth.IBluetoothHealthCallback$Stub$Proxy.onHealthChannelStateChange(Landroid/bluetooth/BluetoothHealthAppConfiguration;Landroid/bluetooth/BluetoothDevice;IILandroid/os/ParcelFileDescriptor;I)V
BLUETOOTH android.bluetooth.IBluetoothHealth$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
BLUETOOTH android.bluetooth.IBluetoothHealth$Stub$Proxy.connectChannelToSink(Landroid/bluetooth/BluetoothDevice;Landroid/bluetooth/BluetoothHealthAppConfiguration;I)Z
BLUETOOTH android.bluetooth.IBluetoothHealth$Stub$Proxy.disconnectChannel(Landroid/bluetooth/BluetoothDevice;Landroid/bluetooth/BluetoothHealthAppConfiguration;I)Z
BLUETOOTH android.bluetooth.IBluetoothHealth$Stub$Proxy.registerAppConfiguration(Landroid/bluetooth/BluetoothHealthAppConfiguration;Landroid/bluetooth/IBluetoothHealthCallback;)Z
BLUETOOTH android.bluetooth.IBluetoothInputDevice$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
BLUETOOTH android.bluetooth.IBluetoothInputDevice$Stub$Proxy.sendData(Landroid/bluetooth/BluetoothDevice;Ljava/lang/String;)Z
BLUETOOTH android.bluetooth.IBluetoothInputDevice$Stub$Proxy.setPriority(Landroid/bluetooth/BluetoothDevice;I)Z
BLUETOOTH android.bluetooth.IBluetoothInputDevice$Stub$Proxy.setProtocolMode(Landroid/bluetooth/BluetoothDevice;I)Z
BLUETOOTH android.bluetooth.IBluetoothInputDevice$Stub$Proxy.setReport(Landroid/bluetooth/BluetoothDevice;BLjava/lang/String;)Z
BLUETOOTH android.bluetooth.IBluetoothManagerCallback$Stub$Proxy.onBluetoothServiceUp(Landroid/bluetooth/IBluetooth;)V
BLUETOOTH android.bluetooth.IBluetoothManager$Stub$Proxy.registerAdapter(Landroid/bluetooth/IBluetoothManagerCallback;)Landroid/bluetooth/IBluetooth;
BLUETOOTH android.bluetooth.IBluetoothManager$Stub$Proxy.registerStateChangeCallback(Landroid/bluetooth/IBluetoothStateChangeCallback;)V
BLUETOOTH android.bluetooth.IBluetoothManager$Stub$Proxy.unregisterAdapter(Landroid/bluetooth/IBluetoothManagerCallback;)V
BLUETOOTH android.bluetooth.IBluetoothManager$Stub$Proxy.unregisterStateChangeCallback(Landroid/bluetooth/IBluetoothStateChangeCallback;)V
BLUETOOTH android.bluetooth.IBluetoothPan$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
BLUETOOTH android.bluetooth.IBluetoothPan$Stub$Proxy.setBluetoothTethering(Z)V
BLUETOOTH android.bluetooth.IBluetoothPbap$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
BLUETOOTH android.bluetooth.IBluetooth$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
BLUETOOTH android.bluetooth.IBluetooth$Stub$Proxy.registerCallback(Landroid/bluetooth/IBluetoothCallback;)V
BLUETOOTH android.bluetooth.IBluetooth$Stub$Proxy.sendConnectionStateChange(Landroid/bluetooth/BluetoothDevice;III)V
BLUETOOTH android.bluetooth.IBluetooth$Stub$Proxy.setDiscoverableTimeout(I)Z
BLUETOOTH android.bluetooth.IBluetooth$Stub$Proxy.setName(Ljava/lang/String;)Z
BLUETOOTH android.bluetooth.IBluetooth$Stub$Proxy.setPairingConfirmation(Landroid/bluetooth/BluetoothDevice;Z)Z
BLUETOOTH android.bluetooth.IBluetooth$Stub$Proxy.setPasskey(Landroid/bluetooth/BluetoothDevice;ZI[B)Z
BLUETOOTH android.bluetooth.IBluetooth$Stub$Proxy.setPin(Landroid/bluetooth/BluetoothDevice;ZI[B)Z
BLUETOOTH android.bluetooth.IBluetooth$Stub$Proxy.setRemoteAlias(Landroid/bluetooth/BluetoothDevice;Ljava/lang/String;)Z
BLUETOOTH android.bluetooth.IBluetooth$Stub$Proxy.setScanMode(II)Z
BLUETOOTH android.bluetooth.IBluetooth$Stub$Proxy.unregisterCallback(Landroid/bluetooth/IBluetoothCallback;)V
BLUETOOTH com.android.bluetooth.a2dp.A2dpService$BluetoothA2dpBinder.setPriority(Landroid/bluetooth/BluetoothDevice;I)Z
BLUETOOTH com.android.bluetooth.a2dp.A2dpService.connect(Landroid/bluetooth/BluetoothDevice;)Z
BLUETOOTH com.android.bluetooth.a2dp.A2dpService.setPriority(Landroid/bluetooth/BluetoothDevice;I)Z
BLUETOOTH com.android.bluetooth.a2dp.A2dpStateMachine$Connected.processMessage(Landroid/os/Message;)Z
BLUETOOTH com.android.bluetooth.a2dp.A2dpStateMachine$Disconnected.processMessage(Landroid/os/Message;)Z
BLUETOOTH com.android.bluetooth.a2dp.A2dpStateMachine$Pending.processMessage(Landroid/os/Message;)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterProperties.sendConnectionStateChange(Landroid/bluetooth/BluetoothDevice;III)V
BLUETOOTH com.android.bluetooth.btservice.AdapterProperties.setDiscoverableTimeout(I)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterProperties.setName(Ljava/lang/String;)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterProperties.setScanMode(I)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterProperties.setUuids([Landroid/os/ParcelUuid;)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.sendConnectionStateChange(Landroid/bluetooth/BluetoothDevice;III)V
BLUETOOTH com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.setDiscoverableTimeout(I)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.setName(Ljava/lang/String;)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.setPairingConfirmation(Landroid/bluetooth/BluetoothDevice;Z)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.setPasskey(Landroid/bluetooth/BluetoothDevice;ZI[B)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.setPin(Landroid/bluetooth/BluetoothDevice;ZI[B)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.setRemoteAlias(Landroid/bluetooth/BluetoothDevice;Ljava/lang/String;)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.setScanMode(II)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterService.enable(Z)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterService.onProfileConnectionStateChanged(Landroid/bluetooth/BluetoothDevice;III)V
BLUETOOTH com.android.bluetooth.btservice.AdapterService.sendConnectionStateChange(Landroid/bluetooth/BluetoothDevice;III)V
BLUETOOTH com.android.bluetooth.btservice.AdapterService.setDiscoverableTimeout(I)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterService.setName(Ljava/lang/String;)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterService.setPairingConfirmation(Landroid/bluetooth/BluetoothDevice;Z)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterService.setPasskey(Landroid/bluetooth/BluetoothDevice;ZI[B)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterService.setPin(Landroid/bluetooth/BluetoothDevice;ZI[B)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterService.setProfileAutoConnectionPriority(Landroid/bluetooth/BluetoothDevice;I)V
BLUETOOTH com.android.bluetooth.btservice.AdapterService.setRemoteAlias(Landroid/bluetooth/BluetoothDevice;Ljava/lang/String;)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterService.setScanMode(II)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterState$OffState.processMessage(Landroid/os/Message;)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterState$OnState.processMessage(Landroid/os/Message;)Z
BLUETOOTH com.android.bluetooth.btservice.AdapterState$PendingCommandState.processMessage(Landroid/os/Message;)Z
BLUETOOTH com.android.bluetooth.btservice.BondStateMachine$StableState.processMessage(Landroid/os/Message;)Z
BLUETOOTH com.android.bluetooth.btservice.ProfileService.notifyProfileConnectionStateChanged(Landroid/bluetooth/BluetoothDevice;III)V
BLUETOOTH com.android.bluetooth.btservice.ProfileService.notifyProfileServiceStateChanged(I)V
BLUETOOTH com.android.bluetooth.btservice.RemoteDevices.aclStateChangeCallback(I[BI)V
BLUETOOTH com.android.bluetooth.btservice.RemoteDevices.addDeviceProperties([B)Lcom/android/bluetooth/btservice/RemoteDevices$DeviceProperties;
BLUETOOTH com.android.bluetooth.btservice.RemoteDevices.deviceFoundCallback([B)V
BLUETOOTH com.android.bluetooth.btservice.RemoteDevices$DeviceProperties.setAlias(Ljava/lang/String;)V
BLUETOOTH com.android.bluetooth.btservice.RemoteDevices.devicePropertyChangedCallback([B[I[[B)V
BLUETOOTH com.android.bluetooth.btservice.RemoteDevices.pinRequestCallback([B[BI)V
BLUETOOTH com.android.bluetooth.btservice.RemoteDevices.sspRequestCallback([B[BIII)V
BLUETOOTH com.android.bluetooth.hdp.HealthService.registerAppConfiguration(Landroid/bluetooth/BluetoothHealthAppConfiguration;Landroid/bluetooth/IBluetoothHealthCallback;)Z
BLUETOOTH com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder.setPriority(Landroid/bluetooth/BluetoothDevice;I)Z
BLUETOOTH com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder.startScoUsingVirtualVoiceCall(Landroid/bluetooth/BluetoothDevice;)Z
BLUETOOTH com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder.startVoiceRecognition(Landroid/bluetooth/BluetoothDevice;)Z
BLUETOOTH com.android.bluetooth.hfp.HeadsetService.connect(Landroid/bluetooth/BluetoothDevice;)Z
BLUETOOTH com.android.bluetooth.hfp.HeadsetService.setPriority(Landroid/bluetooth/BluetoothDevice;I)Z
BLUETOOTH com.android.bluetooth.hfp.HeadsetService.startScoUsingVirtualVoiceCall(Landroid/bluetooth/BluetoothDevice;)Z
BLUETOOTH com.android.bluetooth.hfp.HeadsetStateMachine$AudioOn.processMessage(Landroid/os/Message;)Z
BLUETOOTH com.android.bluetooth.hfp.HeadsetStateMachine$Connected.processMessage(Landroid/os/Message;)Z
BLUETOOTH com.android.bluetooth.hfp.HeadsetStateMachine$Disconnected.processMessage(Landroid/os/Message;)Z
BLUETOOTH com.android.bluetooth.hfp.HeadsetStateMachine$Pending.processMessage(Landroid/os/Message;)Z
BLUETOOTH com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder.sendData(Landroid/bluetooth/BluetoothDevice;Ljava/lang/String;)Z
BLUETOOTH com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder.setPriority(Landroid/bluetooth/BluetoothDevice;I)Z
BLUETOOTH com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder.setProtocolMode(Landroid/bluetooth/BluetoothDevice;I)Z
BLUETOOTH com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder.setReport(Landroid/bluetooth/BluetoothDevice;BLjava/lang/String;)Z
BLUETOOTH com.android.bluetooth.hid.HidService.sendData(Landroid/bluetooth/BluetoothDevice;Ljava/lang/String;)Z
BLUETOOTH com.android.bluetooth.hid.HidService.setPriority(Landroid/bluetooth/BluetoothDevice;I)Z
BLUETOOTH com.android.bluetooth.hid.HidService.setProtocolMode(Landroid/bluetooth/BluetoothDevice;I)Z
BLUETOOTH com.android.bluetooth.hid.HidService.setReport(Landroid/bluetooth/BluetoothDevice;BLjava/lang/String;)Z
BLUETOOTH com.android.bluetooth.opp.BluetoothOppManager.saveSendingFileInfo(Ljava/lang/String;Ljava/lang/String;Z)V
BLUETOOTH com.android.bluetooth.opp.BluetoothOppManager.saveSendingFileInfo(Ljava/lang/String;Ljava/util/ArrayList;Z)V
BLUETOOTH com.android.bluetooth.opp.BluetoothOppPreference.setChannel(Landroid/bluetooth/BluetoothDevice;II)V
BLUETOOTH com.android.bluetooth.opp.BluetoothOppPreference.setName(Landroid/bluetooth/BluetoothDevice;Ljava/lang/String;)V
BLUETOOTH com.android.bluetooth.opp.BluetoothOppReceiver.onReceive(Landroid/content/Context;Landroid/content/Intent;)V
BLUETOOTH com.android.bluetooth.opp.BluetoothOppService$2.handleMessage(Landroid/os/Message;)V
BLUETOOTH com.android.bluetooth.opp.BluetoothOppUtility.openReceivedFile(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Landroid/net/Uri;)V
BLUETOOTH com.android.bluetooth.opp.BluetoothOppUtility.retryTransfer(Landroid/content/Context;Lcom/android/bluetooth/opp/BluetoothOppTransferInfo;)V
BLUETOOTH com.android.bluetooth.opp.Constants.updateShareStatus(Landroid/content/Context;II)V
BLUETOOTH com.android.bluetooth.opp.TestTcpServer.onPut(Ljavax/obex/Operation;)I
BLUETOOTH com.android.bluetooth.pan.PanService$BluetoothPanBinder.setBluetoothTethering(Z)V
BLUETOOTH com.android.bluetooth.pan.PanService.handlePanDeviceStateChange(Landroid/bluetooth/BluetoothDevice;Ljava/lang/String;III)V
BLUETOOTH com.android.bluetooth.pbap.BluetoothPbapReceiver.onReceive(Landroid/content/Context;Landroid/content/Intent;)V
BLUETOOTH com.android.bluetooth.pbap.BluetoothPbapService$SocketAcceptThread.run()V android.permission.READ_PHONE_STATE com.android.voicemail.permission.ADD_VOICEMAIL android.permission.BLUETOOTH android.permission.READ_SOCIAL_STREAM android.permission.READ_CALL_LOG android.permission.READ_CONTACTS android.permission.WRITE_CONTACTS android.permission.BLUETOOTH_ADMIN android.permission.WAKE_LOCK 
BLUETOOTH com.android.bluetooth.pbap.BluetoothPbapVcardManager$HandlerForStringBuffer.onEntryCreated(Ljava/lang/String;)Z
BLUETOOTH com.android.bluetooth.Utils.copyStream(Ljava/io/InputStream;Ljava/io/OutputStream;I)V
BLUETOOTH com.android.bluetooth.Utils.intToByteArray(I)[B
BLUETOOTH com.android.bluetooth.Utils.uuidsToByteArray([Landroid/os/ParcelUuid;)[B
BLUETOOTH com.android.bluetooth.Utils.uuidToByteArray(Landroid/os/ParcelUuid;)[B
BROWSER_INFORMATION com.android.browser.Controller.openTab(Ljava/lang/String;Lcom/android/browser/Tab;ZZ)Lcom/android/browser/Tab;
BROWSER_INFORMATION com.android.browser.Controller.openTab(Ljava/lang/String;ZZZLcom/android/browser/Tab;)Lcom/android/browser/Tab;
BROWSER_INFORMATION com.android.browser.Controller.setActiveTab(Lcom/android/browser/Tab;)V
BROWSER_INFORMATION com.android.browser.Controller.start(Landroid/content/Intent;)V
BROWSER_INFORMATION com.android.browser.DataController.updateVisitedHistory(Ljava/lang/String;)V
BROWSER_INFORMATION com.android.browser.homepages.Template$HashMapEntityData.writeValue(Ljava/io/OutputStream;Ljava/lang/String;)V
BROWSER_INFORMATION com.android.browser.NavigationBarTablet.setCurrentUrlIsBookmark(Z)V
BROWSER_INFORMATION com.android.browser.NavigationBarTablet.setFavicon(Landroid/graphics/Bitmap;)V
BROWSER_INFORMATION com.android.browser.NavigationBarTablet.setFocusState(Z)V
BROWSER_INFORMATION com.android.browser.NavigationBarTablet.setTitleBar(Lcom/android/browser/TitleBar;)V
BROWSER_INFORMATION com.android.browser.NavTabScroller.setOrientation(I)V
BROWSER_INFORMATION com.android.browser.NavTabScroller.setScrollValue(I)V
BROWSER_INFORMATION com.android.browser.preferences.WebsiteSettingsFragment$SiteAdapter.onItemClick(Landroid/widget/AdapterView;Landroid/view/View;IJ)V
BROWSER_INFORMATION com.android.browser.provider.BrowserProvider2$DatabaseHelper.onCreate(Landroid/database/sqlite/SQLiteDatabase;)V
BROWSER_INFORMATION com.android.browser.provider.BrowserProvider2$DatabaseHelper.onUpgrade(Landroid/database/sqlite/SQLiteDatabase;II)V android.permission.WRITE_SYNC_SETTINGS android.permission.READ_SYNC_SETTINGS android.permission.GET_ACCOUNTS 
BROWSER_INFORMATION com.android.browser.provider.BrowserProvider2.extractImageValues(Landroid/content/ContentValues;Ljava/lang/String;)Landroid/content/ContentValues;
BROWSER_INFORMATION com.android.browser.provider.BrowserProvider2.updateBookmarksInTransaction(Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;Z)I com.android.browser.permission.READ_HISTORY_BOOKMARKS 
BROWSER_INFORMATION com.android.browser.provider.BrowserProvider2.updateInTransaction(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;Z)I
BROWSER_INFORMATION com.android.browser.provider.BrowserProvider.update(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
BROWSER_INFORMATION com.android.browser.provider.SnapshotProvider.insert(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;
BROWSER_INFORMATION com.android.browser.SnapshotTab.saveViewState(Landroid/content/ContentValues;)Z
BROWSER_INFORMATION com.android.browser.Tab$3.setupAutoFill(Landroid/os/Message;)V
BROWSER_INFORMATION com.android.browser.TabBar$TabView.dispatchDraw(Landroid/graphics/Canvas;)V
BROWSER_INFORMATION com.android.browser.TabBar$TabView.setDisplayTitle(Ljava/lang/String;)V
BROWSER_INFORMATION com.android.browser.TabBar$TabView.setFavicon(Landroid/graphics/drawable/Drawable;)V
BROWSER_INFORMATION com.android.browser.TabControl.restoreState(Landroid/os/Bundle;JZZ)V
BROWSER_INFORMATION com.android.browser.TabControl.setCurrentTab(Lcom/android/browser/Tab;)Z
BROWSER_INFORMATION com.android.browser.TabScrollView.setScroll(I)V
BROWSER_INFORMATION com.android.browser.Tab.setParent(Lcom/android/browser/Tab;)V
BROWSER_INFORMATION com.android.browser.Tab.setWebView(Landroid/webkit/WebView;)V
BROWSER_INFORMATION com.android.browser.UrlHandler$RLZTask.onPostExecute(Ljava/lang/String;)V
BROWSER_INFORMATION com.android.browser.UrlHandler.startActivityForUrl(Lcom/android/browser/Tab;Ljava/lang/String;)Z
CALENDAR_INFORMATION com.android.calendar.agenda.AgendaAdapter.bindView(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;)V
CALENDAR_INFORMATION com.android.calendar.agenda.AgendaByDayAdapter.setAsFirstDayAfterYesterday(I)V
CALENDAR_INFORMATION com.android.calendar.agenda.AgendaListView.onItemClick(Landroid/widget/AdapterView;Landroid/view/View;IJ)V
CALENDAR_INFORMATION com.android.calendar.agenda.AgendaListView.setHideDeclinedEvents(Z)V
CALENDAR_INFORMATION com.android.calendar.agenda.AgendaListView.setSelectedInstanceId(J)V
CALENDAR_INFORMATION com.android.calendar.agenda.AgendaWindowAdapter$QueryHandler.onQueryComplete(ILjava/lang/Object;Landroid/database/Cursor;)V
CALENDAR_INFORMATION com.android.calendar.agenda.AgendaWindowAdapter.refresh(Landroid/text/format/Time;JLjava/lang/String;ZZ)V
CALENDAR_INFORMATION com.android.calendar.agenda.AgendaWindowAdapter.setSelectedView(Landroid/view/View;)V
CALENDAR_INFORMATION com.android.calendar.alerts.AlertAdapter.bindView(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;)V
CALENDAR_INFORMATION com.android.calendar.alerts.AlertReceiver.onReceive(Landroid/content/Context;Landroid/content/Intent;)V
CALENDAR_INFORMATION com.android.calendar.alerts.AlertService.generateAlerts(Landroid/content/Context;Lcom/android/calendar/alerts/NotificationMgr;Lcom/android/calendar/alerts/AlarmManagerInterface;Landroid/content/SharedPreferences;Landroid/database/Cursor;JI)Z
CALENDAR_INFORMATION com.android.calendar.alerts.AlertService$NotificationMgrWrapper.notify(ILcom/android/calendar/alerts/AlertService$NotificationWrapper;)V
CALENDAR_INFORMATION com.android.calendar.alerts.AlertService.processQuery(Landroid/database/Cursor;Landroid/content/Context;JLjava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)I
CALENDAR_INFORMATION com.android.calendar.alerts.AlertUtils$1.set(IJLandroid/app/PendingIntent;)V
CALENDAR_INFORMATION com.android.calendar.alerts.AlertUtils.buildEventViewIntent(Landroid/content/Context;JJJ)Landroid/content/Intent;
CALENDAR_INFORMATION com.android.calendar.alerts.AlertUtils.makeContentValues(JJJJI)Landroid/content/ContentValues;
CALENDAR_INFORMATION com.android.calendar.alerts.AlertUtils.setAlertFiredInSharedPrefs(Landroid/content/Context;JJJ)V
CALENDAR_INFORMATION com.android.calendar.alerts.DismissAlarmsService.onHandleIntent(Landroid/content/Intent;)V
CALENDAR_INFORMATION com.android.calendar.alerts.SnoozeAlarmsService.onHandleIntent(Landroid/content/Intent;)V
CALENDAR_INFORMATION com.android.calendar.AllInOneActivity.handleEvent(Lcom/android/calendar/CalendarController$EventInfo;)V
CALENDAR_INFORMATION com.android.calendar.AllInOneActivity.onQueryTextSubmit(Ljava/lang/String;)Z
CALENDAR_INFORMATION com.android.calendar.AllInOneActivity.setControlsOffset(I)V
CALENDAR_INFORMATION com.android.calendar.CalendarController.launchViewEvent(JJJI)V
CALENDAR_INFORMATION com.android.calendar.CalendarController.sendEvent(Ljava/lang/Object;JLandroid/text/format/Time;Landroid/text/format/Time;JIJLjava/lang/String;Landroid/content/ComponentName;)V
CALENDAR_INFORMATION com.android.calendar.CalendarController.sendEvent(Ljava/lang/Object;JLandroid/text/format/Time;Landroid/text/format/Time;JI)V
CALENDAR_INFORMATION com.android.calendar.CalendarController.sendEvent(Ljava/lang/Object;JLandroid/text/format/Time;Landroid/text/format/Time;Landroid/text/format/Time;JIJLjava/lang/String;Landroid/content/ComponentName;)V
CALENDAR_INFORMATION com.android.calendar.CalendarController.sendEventRelatedEvent(Ljava/lang/Object;JJJJIIJ)V
CALENDAR_INFORMATION com.android.calendar.CalendarController.sendEventRelatedEventWithExtra(Ljava/lang/Object;JJJJIIJJ)V
CALENDAR_INFORMATION com.android.calendar.CalendarController.setTime(J)V
CALENDAR_INFORMATION com.android.calendar.CalendarEventModel.addAttendee(Lcom/android/calendar/CalendarEventModel$Attendee;)V
CALENDAR_INFORMATION com.android.calendar.CalendarEventModel.addAttendees(Ljava/lang/String;Lcom/android/common/Rfc822Validator;)V
CALENDAR_INFORMATION com.android.calendar.CalendarUtils.setSharedPreference(Landroid/content/SharedPreferences;Ljava/lang/String;Ljava/lang/String;)V
CALENDAR_INFORMATION com.android.calendar.CalendarUtils.setSharedPreference(Landroid/content/SharedPreferences;Ljava/lang/String;Z)V
CALENDAR_INFORMATION com.android.calendar.CalendarUtils$TimeZoneUtils.setTimeZone(Landroid/content/Context;Ljava/lang/String;)V
CALENDAR_INFORMATION com.android.calendar.DayOfMonthDrawable.setAlpha(I)V
CALENDAR_INFORMATION com.android.calendar.DayOfMonthDrawable.setColorFilter(Landroid/graphics/ColorFilter;)V
CALENDAR_INFORMATION com.android.calendar.DayOfMonthDrawable.setDayOfMonth(I)V
CALENDAR_INFORMATION com.android.calendar.DayView.setMoreAllDayEventsTextAlpha(I)V
CALENDAR_INFORMATION com.android.calendar.DayView.setSelected(Landroid/text/format/Time;ZZ)V
CALENDAR_INFORMATION com.android.calendar.event.AttendeesView.onClick(Landroid/view/View;)V
CALENDAR_INFORMATION com.android.calendar.event.AttendeesView.setEnabled(Z)V
CALENDAR_INFORMATION com.android.calendar.event.EditEventHelper.saveEvent(Lcom/android/calendar/CalendarEventModel;Lcom/android/calendar/CalendarEventModel;I)Z
CALENDAR_INFORMATION com.android.calendar.event.EditEventHelper.saveReminders(Ljava/util/ArrayList;JLjava/util/ArrayList;Ljava/util/ArrayList;Z)Z
CALENDAR_INFORMATION com.android.calendar.event.EditEventHelper.saveRemindersWithBackRef(Ljava/util/ArrayList;ILjava/util/ArrayList;Ljava/util/ArrayList;Z)Z
CALENDAR_INFORMATION com.android.calendar.EventGeometry.setHourHeight(F)V
CALENDAR_INFORMATION com.android.calendar.EventLoader.loadEventsInBackground(ILjava/util/ArrayList;ILjava/lang/Runnable;Ljava/lang/Runnable;)V
CALENDAR_INFORMATION com.android.calendar.ExpandableTextView.setText(Ljava/lang/String;)V
CALENDAR_INFORMATION com.android.calendar.GeneralPreferences.setDefaultValues(Landroid/content/Context;)V
CALENDAR_INFORMATION com.android.calendar.month.MonthByWeekAdapter.setSelectedDay(Landroid/text/format/Time;)V
CALENDAR_INFORMATION com.android.calendar.month.MonthByWeekFragment.setMonthDisplayed(Landroid/text/format/Time;Z)V
CALENDAR_INFORMATION com.android.calendar.month.MonthWeekEventsView.setClickedDay(F)V
CALENDAR_INFORMATION com.android.calendar.month.MonthWeekEventsView.setWeekParams(Ljava/util/HashMap;Ljava/lang/String;)V
CALENDAR_INFORMATION com.android.calendar.month.SimpleDayPickerFragment.setMonthDisplayed(Landroid/text/format/Time;Z)V
CALENDAR_INFORMATION com.android.calendar.month.SimpleWeeksAdapter.setSelectedDay(Landroid/text/format/Time;)V
CALENDAR_INFORMATION com.android.calendar.SearchActivity.onQueryTextSubmit(Ljava/lang/String;)Z
CALENDAR_INFORMATION com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter.setVisible(II)V
CALENDAR_INFORMATION com.android.calendar.selectcalendars.SelectCalendarsSyncAdapter.onItemClick(Landroid/widget/AdapterView;Landroid/view/View;IJ)V
CALENDAR_INFORMATION com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter$AsyncCalendarsUpdater.onQueryComplete(ILjava/lang/Object;Landroid/database/Cursor;)V
CALENDAR_INFORMATION com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter.bindChildView(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;Z)V
CALENDAR_INFORMATION com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter.onClick(Landroid/view/View;)V
CALENDAR_INFORMATION com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment.toggleVisibility(I)V
CALENDAR_INFORMATION com.android.calendar.Utils.createEmailAttendeesIntent(Landroid/content/res/Resources;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/lang/String;)Landroid/content/Intent;
CALENDAR_INFORMATION com.android.calendar.Utils.setDefaultView(Landroid/content/Context;I)V
CALENDAR_INFORMATION com.android.calendar.Utils.setSharedPreference(Landroid/content/Context;Ljava/lang/String;I)V
CALENDAR_INFORMATION com.android.calendar.Utils.setSharedPreference(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V
CALENDAR_INFORMATION com.android.calendar.Utils.setSharedPreference(Landroid/content/Context;Ljava/lang/String;[Ljava/lang/String;)V
CALENDAR_INFORMATION com.android.calendar.Utils.setSharedPreference(Landroid/content/Context;Ljava/lang/String;Z)V android.permission.STOP_APP_SWITCHES 
CALENDAR_INFORMATION com.android.calendar.Utils.setTimeZone(Landroid/content/Context;Ljava/lang/String;)V
CALENDAR_INFORMATION com.android.calendar.Utils.setTodayIcon(Landroid/graphics/drawable/LayerDrawable;Landroid/content/Context;Ljava/lang/String;)V
CALENDAR_INFORMATION com.android.calendar.Utils.setUpSearchView(Landroid/widget/SearchView;Landroid/app/Activity;)V
CALENDAR_INFORMATION com.android.calendar.widget.CalendarAppWidgetProvider.onReceive(Landroid/content/Context;Landroid/content/Intent;)V
CALENDAR_INFORMATION com.android.calendar.widget.CalendarAppWidgetProvider.onUpdate(Landroid/content/Context;Landroid/appwidget/AppWidgetManager;[I)V android.permission.READ_CALENDAR 
CONTACT_INFORMATION android.provider.Contacts$ContactMethods.addPostalLocation(Landroid/content/Context;JDD)V
CONTACT_INFORMATION android.provider.ContactsContract$ProfileSyncState.set(Landroid/content/ContentProviderClient;Landroid/accounts/Account;[B)V
CONTACT_INFORMATION android.provider.ContactsContract$QuickContact.composeQuickContactsIntent(Landroid/content/Context;Landroid/graphics/Rect;Landroid/net/Uri;I[Ljava/lang/String;)Landroid/content/Intent;
CONTACT_INFORMATION android.provider.ContactsContract$SyncState.set(Landroid/content/ContentProviderClient;Landroid/accounts/Account;[B)V
CONTACT_INFORMATION android.provider.Contacts$People.setPhotoData(Landroid/content/ContentResolver;Landroid/net/Uri;[B)V
CONTACT_INFORMATION android.provider.Contacts$Settings.setSetting(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
CONTACT_INFORMATION android.widget.QuickContactBadge.setMode(I)V
CONTACT_INFORMATION com.android.contacts.activities.ConfirmAddDetailActivity$QueryHandler.onQueryComplete(ILjava/lang/Object;Landroid/database/Cursor;)V
CONTACT_INFORMATION com.android.contacts.activities.ContactEditorAccountsChangedActivity.onActivityResult(IILandroid/content/Intent;)V
CONTACT_INFORMATION com.android.contacts.activities.ContactEditorActivity$2.onCustomCreateContactActivityRequested(Lcom/android/contacts/model/account/AccountWithDataSet;Landroid/os/Bundle;)V
CONTACT_INFORMATION com.android.contacts.activities.ContactEditorActivity$2.onCustomEditContactActivityRequested(Lcom/android/contacts/model/account/AccountWithDataSet;Landroid/net/Uri;Landroid/os/Bundle;Z)V
CONTACT_INFORMATION com.android.contacts.activities.ContactEditorActivity$2.onEditOtherContactRequested(Landroid/net/Uri;Ljava/util/ArrayList;)V
CONTACT_INFORMATION com.android.contacts.activities.ContactSelectionActivity.startActivityAndForwardResult(Landroid/content/Intent;)V
CONTACT_INFORMATION com.android.contacts.activities.DialtactsActivity.startSearch(Ljava/lang/String;ZLandroid/os/Bundle;Z)V
CONTACT_INFORMATION com.android.contacts.activities.DialtactsActivity$ViewPagerAdapter.setPrimaryItem(Landroid/view/ViewGroup;ILjava/lang/Object;)V
CONTACT_INFORMATION com.android.contacts.activities.PeopleActivity$ContactDetailFragmentListener.onCreateRawContactRequested(Ljava/util/ArrayList;Lcom/android/contacts/model/account/AccountWithDataSet;)V
CONTACT_INFORMATION com.android.contacts.activities.PeopleActivity$ContactDetailFragmentListener.onItemClicked(Landroid/content/Intent;)V
CONTACT_INFORMATION com.android.contacts.activities.PeopleActivity$TabPagerAdapter.setPrimaryItem(Landroid/view/ViewGroup;ILjava/lang/Object;)V
CONTACT_INFORMATION com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler.startPhotoActivity(Landroid/content/Intent;ILjava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.CallDetailActivity$1UpdateContactDetailsTask.onPostExecute([Lcom/android/contacts/PhoneCallDetails;)V
CONTACT_INFORMATION com.android.contacts.calllog.CallLogAdapter.bindChildView(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;)V
CONTACT_INFORMATION com.android.contacts.calllog.CallLogAdapter.bindGroupView(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;IZ)V
CONTACT_INFORMATION com.android.contacts.calllog.CallLogAdapter.bindStandAloneView(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;)V
CONTACT_INFORMATION com.android.contacts.calllog.CallLogAdapter.injectContactInfoForTest(Ljava/lang/String;Ljava/lang/String;Lcom/android/contacts/calllog/ContactInfo;)V
CONTACT_INFORMATION com.android.contacts.calllog.CallLogListItemHelper.setPhoneCallDetails(Lcom/android/contacts/calllog/CallLogListItemViews;Lcom/android/contacts/PhoneCallDetails;Z)V
CONTACT_INFORMATION com.android.contacts.ContactPhotoManagerImpl.cacheBitmap(Landroid/net/Uri;Landroid/graphics/Bitmap;[B)V
CONTACT_INFORMATION com.android.contacts.ContactSaveService.createClearPrimaryIntent(Landroid/content/Context;J)Landroid/content/Intent;
CONTACT_INFORMATION com.android.contacts.ContactSaveService.createGroupDeletionIntent(Landroid/content/Context;J)Landroid/content/Intent;
CONTACT_INFORMATION com.android.contacts.ContactSaveService.createGroupUpdateIntent(Landroid/content/Context;JLjava/lang/String;[J[JLjava/lang/Class;Ljava/lang/String;)Landroid/content/Intent;
CONTACT_INFORMATION com.android.contacts.ContactSaveService.createJoinContactsIntent(Landroid/content/Context;JJZLjava/lang/Class;Ljava/lang/String;)Landroid/content/Intent;
CONTACT_INFORMATION com.android.contacts.ContactSaveService.createNewGroupIntent(Landroid/content/Context;Lcom/android/contacts/model/account/AccountWithDataSet;Ljava/lang/String;[JLjava/lang/Class;Ljava/lang/String;)Landroid/content/Intent;
CONTACT_INFORMATION com.android.contacts.ContactSaveService.createNewRawContactIntent(Landroid/content/Context;Ljava/util/ArrayList;Lcom/android/contacts/model/account/AccountWithDataSet;Ljava/lang/Class;Ljava/lang/String;)Landroid/content/Intent;
CONTACT_INFORMATION com.android.contacts.ContactSaveService.createSaveContactIntent(Landroid/content/Context;Lcom/android/contacts/model/RawContactDeltaList;Ljava/lang/String;IZLjava/lang/Class;Ljava/lang/String;JLjava/lang/String;)Landroid/content/Intent;
CONTACT_INFORMATION com.android.contacts.ContactSaveService.createSaveContactIntent(Landroid/content/Context;Lcom/android/contacts/model/RawContactDeltaList;Ljava/lang/String;IZLjava/lang/Class;Ljava/lang/String;Landroid/os/Bundle;)Landroid/content/Intent;
CONTACT_INFORMATION com.android.contacts.ContactSaveService.createSetRingtone(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent;
CONTACT_INFORMATION com.android.contacts.ContactSaveService.createSetSuperPrimaryIntent(Landroid/content/Context;J)Landroid/content/Intent;
CONTACT_INFORMATION com.android.contacts.ContactSaveService.onHandleIntent(Landroid/content/Intent;)V
CONTACT_INFORMATION com.android.contacts.datepicker.DatePicker$SavedState.writeToParcel(Landroid/os/Parcel;I)V
CONTACT_INFORMATION com.android.contacts.datepicker.DatePicker.setEnabled(Z)V
CONTACT_INFORMATION com.android.contacts.detail.ActionsViewContainer.setPosition(I)V
CONTACT_INFORMATION com.android.contacts.detail.CarouselTab.setLabel(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.detail.ContactDetailDisplayUtils.setCompanyName(Landroid/content/Context;Lcom/android/contacts/model/Contact;Landroid/widget/TextView;)V
CONTACT_INFORMATION com.android.contacts.detail.ContactDetailDisplayUtils.setDisplayName(Landroid/content/Context;Lcom/android/contacts/model/Contact;Landroid/widget/TextView;)V
CONTACT_INFORMATION com.android.contacts.detail.ContactDetailDisplayUtils.setSocialSnippet(Landroid/content/Context;Lcom/android/contacts/model/Contact;Landroid/widget/TextView;Landroid/widget/ImageView;)V
CONTACT_INFORMATION com.android.contacts.detail.ContactDetailTabCarousel.restoreCurrentTab(I)V
CONTACT_INFORMATION com.android.contacts.dialpad.DialpadFragment$ErrorDialogFragment.newInstance(II)Lcom/android/contacts/dialpad/DialpadFragment$ErrorDialogFragment;
CONTACT_INFORMATION com.android.contacts.dialpad.DialpadImageButton.setPressed(Z)V
CONTACT_INFORMATION com.android.contacts.editor.BaseRawContactEditorView.setPhotoBitmap(Landroid/graphics/Bitmap;)V android.permission.READ_SOCIAL_STREAM android.permission.READ_CONTACTS android.permission.WRITE_CONTACTS 
CONTACT_INFORMATION com.android.contacts.editor.ContactEditorFragment$PhotoHandler.startPhotoActivity(Landroid/content/Intent;ILjava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.editor.ContactEditorFragment.save(I)Z
CONTACT_INFORMATION com.android.contacts.editor.ContactEditorFragment.setAggregationSuggestionViewEnabled(Z)V
CONTACT_INFORMATION com.android.contacts.editor.ContactEditorFragment.setData(Lcom/android/contacts/model/Contact;)V
CONTACT_INFORMATION com.android.contacts.editor.ContactEditorFragment.setIntentExtras(Landroid/os/Bundle;)V
CONTACT_INFORMATION com.android.contacts.editor.ContactEditorUtils.saveDefaultAndAllAccounts(Lcom/android/contacts/model/account/AccountWithDataSet;)V
CONTACT_INFORMATION com.android.contacts.editor.EventFieldEditorView.onFieldChanged(Ljava/lang/String;Ljava/lang/String;)V android.permission.READ_SYNC_SETTINGS android.permission.READ_SOCIAL_STREAM android.permission.WRITE_SOCIAL_STREAM android.permission.GET_ACCOUNTS android.permission.READ_CONTACTS android.permission.WRITE_CONTACTS 
CONTACT_INFORMATION com.android.contacts.editor.EventFieldEditorView.setEnabled(Z)V
CONTACT_INFORMATION com.android.contacts.editor.EventFieldEditorView.setValues(Lcom/android/contacts/model/dataitem/DataKind;Lcom/android/contacts/model/RawContactDelta$ValuesDelta;Lcom/android/contacts/model/RawContactDelta;ZLcom/android/contacts/editor/ViewIdGenerator;)V android.permission.STOP_APP_SWITCHES 
CONTACT_INFORMATION com.android.contacts.editor.GroupMembershipView.setEnabled(Z)V
CONTACT_INFORMATION com.android.contacts.editor.KindSectionView.setEnabled(Z)V
CONTACT_INFORMATION com.android.contacts.editor.KindSectionView.setTitleVisible(Z)V
CONTACT_INFORMATION com.android.contacts.editor.LabeledEditorView.onFieldChanged(Ljava/lang/String;Ljava/lang/String;)V android.permission.READ_SYNC_SETTINGS android.permission.READ_SOCIAL_STREAM android.permission.WRITE_SOCIAL_STREAM android.permission.GET_ACCOUNTS android.permission.READ_CONTACTS android.permission.WRITE_CONTACTS 
CONTACT_INFORMATION com.android.contacts.editor.LabeledEditorView.saveValue(Ljava/lang/String;Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.editor.LabeledEditorView.setDeleteButtonVisible(Z)V
CONTACT_INFORMATION com.android.contacts.editor.LabeledEditorView.setEnabled(Z)V
CONTACT_INFORMATION com.android.contacts.editor.PhoneticNameEditorView$PhoneticValuesDelta.put(Ljava/lang/String;Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.editor.PhoneticNameEditorView.setValues(Lcom/android/contacts/model/dataitem/DataKind;Lcom/android/contacts/model/RawContactDelta$ValuesDelta;Lcom/android/contacts/model/RawContactDelta;ZLcom/android/contacts/editor/ViewIdGenerator;)V
CONTACT_INFORMATION com.android.contacts.editor.PhotoEditorView.setDeletable(Z)V
CONTACT_INFORMATION com.android.contacts.editor.PhotoEditorView.setEnabled(Z)V
CONTACT_INFORMATION com.android.contacts.editor.PhotoEditorView.setPhotoBitmap(Landroid/graphics/Bitmap;)V
CONTACT_INFORMATION com.android.contacts.editor.PhotoEditorView.setSuperPrimary(Z)V
CONTACT_INFORMATION com.android.contacts.editor.RawContactEditorView.setEnabled(Z)V
CONTACT_INFORMATION com.android.contacts.editor.RawContactEditorView.setPhotoBitmap(Landroid/graphics/Bitmap;)V android.permission.READ_SOCIAL_STREAM android.permission.READ_CONTACTS android.permission.WRITE_CONTACTS 
CONTACT_INFORMATION com.android.contacts.editor.RawContactReadOnlyEditorView.setState(Lcom/android/contacts/model/RawContactDelta;Lcom/android/contacts/model/account/AccountType;Lcom/android/contacts/editor/ViewIdGenerator;Z)V
CONTACT_INFORMATION com.android.contacts.editor.SelectAccountDialogFragment.show(Landroid/app/FragmentManager;Landroid/app/Fragment;ILcom/android/contacts/util/AccountsListAdapter$AccountListFilter;Landroid/os/Bundle;)V
CONTACT_INFORMATION com.android.contacts.editor.StructuredNameEditorView.onFieldChanged(Ljava/lang/String;Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.editor.StructuredNameEditorView.setValues(Lcom/android/contacts/model/dataitem/DataKind;Lcom/android/contacts/model/RawContactDelta$ValuesDelta;Lcom/android/contacts/model/RawContactDelta;ZLcom/android/contacts/editor/ViewIdGenerator;)V
CONTACT_INFORMATION com.android.contacts.editor.TextFieldsEditorView.onFieldChanged(Ljava/lang/String;Ljava/lang/String;)V android.permission.READ_SYNC_SETTINGS android.permission.READ_SOCIAL_STREAM android.permission.WRITE_SOCIAL_STREAM android.permission.GET_ACCOUNTS android.permission.READ_CONTACTS android.permission.WRITE_CONTACTS 
CONTACT_INFORMATION com.android.contacts.editor.TextFieldsEditorView$SavedState.writeToParcel(Landroid/os/Parcel;I)V
CONTACT_INFORMATION com.android.contacts.editor.TextFieldsEditorView.setEnabled(Z)V
CONTACT_INFORMATION com.android.contacts.editor.TextFieldsEditorView.setValues(Lcom/android/contacts/model/dataitem/DataKind;Lcom/android/contacts/model/RawContactDelta$ValuesDelta;Lcom/android/contacts/model/RawContactDelta;ZLcom/android/contacts/editor/ViewIdGenerator;)V
CONTACT_INFORMATION com.android.contacts.format.PrefixHighlighter.setText(Landroid/widget/TextView;Ljava/lang/String;[C)V
CONTACT_INFORMATION com.android.contacts.group.GroupBrowseListFragment.setAddAccountsVisibility(Z)V
CONTACT_INFORMATION com.android.contacts.group.GroupDetailFragment.setQuickContact(Z)V
CONTACT_INFORMATION com.android.contacts.group.GroupEditorFragment.loadMemberToAddToGroup(JLjava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.group.GroupEditorFragment$Member.writeToParcel(Landroid/os/Parcel;I)V
CONTACT_INFORMATION com.android.contacts.interactions.GroupCreationDialogFragment.onCompleted(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.interactions.GroupCreationDialogFragment.show(Landroid/app/FragmentManager;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/android/contacts/interactions/GroupCreationDialogFragment$OnGroupCreatedListener;)V
CONTACT_INFORMATION com.android.contacts.interactions.GroupDeletionDialogFragment.show(Landroid/app/FragmentManager;JLjava/lang/String;Z)V
CONTACT_INFORMATION com.android.contacts.interactions.ImportExportDialogFragment.show(Landroid/app/FragmentManager;Z)V
CONTACT_INFORMATION com.android.contacts.interactions.PhoneNumberInteraction.onLoadComplete(Landroid/content/Loader;Landroid/database/Cursor;)V
CONTACT_INFORMATION com.android.contacts.interactions.PhoneNumberInteraction$PhoneDisambiguationDialogFragment.show(Landroid/app/FragmentManager;Ljava/util/ArrayList;Lcom/android/contacts/interactions/PhoneNumberInteraction$InteractionType;Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.list.AccountFilterActivity.onItemClick(Landroid/widget/AdapterView;Landroid/view/View;IJ)V
CONTACT_INFORMATION com.android.contacts.list.ContactBrowseListFragment.restoreSavedState(Landroid/os/Bundle;)V
CONTACT_INFORMATION com.android.contacts.list.ContactBrowseListFragment.setFilter(Lcom/android/contacts/list/ContactListFilter;)V
CONTACT_INFORMATION com.android.contacts.list.ContactBrowseListFragment.setSearchMode(Z)V
CONTACT_INFORMATION com.android.contacts.list.ContactEntryListAdapter.setDefaultFilterHeaderText(I)V
CONTACT_INFORMATION com.android.contacts.list.ContactEntryListAdapter.setPinnedSectionTitle(Landroid/view/View;Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.list.ContactEntryListFragment.loadDirectoryPartition(ILcom/android/contacts/list/DirectoryPartition;)V
CONTACT_INFORMATION com.android.contacts.list.ContactEntryListFragment.onCreate(Landroid/os/Bundle;)V
CONTACT_INFORMATION com.android.contacts.list.ContactListFilterControllerImpl.setContactListFilter(Lcom/android/contacts/list/ContactListFilter;Z)V
CONTACT_INFORMATION com.android.contacts.list.ContactListFilterView.setActivated(Z)V
CONTACT_INFORMATION com.android.contacts.list.ContactListItemView.setData([CI)V
CONTACT_INFORMATION com.android.contacts.list.ContactListItemView.setPhoneticName([CI)V
CONTACT_INFORMATION com.android.contacts.list.ContactListItemView.setPresence(Landroid/graphics/drawable/Drawable;)V
CONTACT_INFORMATION com.android.contacts.list.ContactListItemView.setSectionHeader(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.list.ContactListItemView.setSnippet(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.list.ContactListPinnedHeaderView.setCountView(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.list.ContactListPinnedHeaderView.setSectionHeader(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.list.ContactPickerFragment.restoreSavedState(Landroid/os/Bundle;)V
CONTACT_INFORMATION com.android.contacts.list.ContactsSectionIndexer.setProfileHeader(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.list.ContactTileListFragment.enableQuickContact(Z)V
CONTACT_INFORMATION com.android.contacts.list.ContactTileView.setHorizontalDividerVisibility(I)V
CONTACT_INFORMATION com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay.setShouldSync(Lcom/android/contacts/list/CustomContactListFilterActivity$GroupDelta;Z)V
CONTACT_INFORMATION com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay.setShouldSync(Lcom/android/contacts/list/CustomContactListFilterActivity$GroupDelta;ZZ)V
CONTACT_INFORMATION com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay.setShouldSync(Z)V
CONTACT_INFORMATION com.android.contacts.list.CustomContactListFilterActivity.onChildClick(Landroid/widget/ExpandableListView;Landroid/view/View;IIJ)Z
CONTACT_INFORMATION com.android.contacts.list.DefaultContactBrowseListFragment.setFilter(Lcom/android/contacts/list/ContactListFilter;)V
CONTACT_INFORMATION com.android.contacts.list.DefaultContactBrowseListFragment.setSearchMode(Z)V
CONTACT_INFORMATION com.android.contacts.list.DefaultContactListAdapter.bindView(Landroid/view/View;ILandroid/database/Cursor;I)V
CONTACT_INFORMATION com.android.contacts.list.EmailAddressListAdapter.bindView(Landroid/view/View;ILandroid/database/Cursor;I)V
CONTACT_INFORMATION com.android.contacts.list.JoinContactListAdapter.bindView(Landroid/view/View;ILandroid/database/Cursor;I)V
CONTACT_INFORMATION com.android.contacts.list.JoinContactListFragment.restoreSavedState(Landroid/os/Bundle;)V
CONTACT_INFORMATION com.android.contacts.list.JoinContactListFragment.setQueryString(Ljava/lang/String;Z)V
CONTACT_INFORMATION com.android.contacts.list.LegacyContactListAdapter.bindView(Landroid/view/View;ILandroid/database/Cursor;I)V
CONTACT_INFORMATION com.android.contacts.list.LegacyPhoneNumberListAdapter.bindView(Landroid/view/View;ILandroid/database/Cursor;I)V
CONTACT_INFORMATION com.android.contacts.list.LegacyPostalAddressListAdapter.bindView(Landroid/view/View;ILandroid/database/Cursor;I)V
CONTACT_INFORMATION com.android.contacts.list.PhoneNumberListAdapter.bindView(Landroid/view/View;ILandroid/database/Cursor;I)V
CONTACT_INFORMATION com.android.contacts.list.PhoneNumberPickerFragment.restoreSavedState(Landroid/os/Bundle;)V
CONTACT_INFORMATION com.android.contacts.list.PhoneNumberPickerFragment.setSearchMode(Z)V
CONTACT_INFORMATION com.android.contacts.list.PostalAddressListAdapter.bindView(Landroid/view/View;ILandroid/database/Cursor;I)V
CONTACT_INFORMATION com.android.contacts.model.account.AccountType.addKind(Lcom/android/contacts/model/dataitem/DataKind;)Lcom/android/contacts/model/dataitem/DataKind;
CONTACT_INFORMATION com.android.contacts.model.account.AccountWithDataSet.writeToParcel(Landroid/os/Parcel;I)V
CONTACT_INFORMATION com.android.contacts.model.AccountTypeManagerImpl.processBroadcastIntent(Landroid/content/Intent;)V
CONTACT_INFORMATION com.android.contacts.model.dataitem.DataItem.setMimeType(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.model.dataitem.DataItem.setRawContactId(J)V
CONTACT_INFORMATION com.android.contacts.model.dataitem.PhoneDataItem.computeFormattedPhoneNumber(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.model.dataitem.StructuredNameDataItem.setDisplayName(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.model.dataitem.StructuredNameDataItem.setPhoneticFamilyName(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.model.dataitem.StructuredNameDataItem.setPhoneticGivenName(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.model.dataitem.StructuredNameDataItem.setPhoneticMiddleName(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.model.RawContactDeltaList.writeToParcel(Landroid/os/Parcel;I)V
CONTACT_INFORMATION com.android.contacts.model.RawContactDelta$ValuesDelta.copyStringFrom(Lcom/android/contacts/model/RawContactDelta$ValuesDelta;Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.model.RawContactDelta$ValuesDelta.put(Ljava/lang/String;[B)V
CONTACT_INFORMATION com.android.contacts.model.RawContactDelta$ValuesDelta.put(Ljava/lang/String;I)V
CONTACT_INFORMATION com.android.contacts.model.RawContactDelta$ValuesDelta.put(Ljava/lang/String;J)V
CONTACT_INFORMATION com.android.contacts.model.RawContactDelta$ValuesDelta.put(Ljava/lang/String;Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.model.RawContactDelta$ValuesDelta.putNull(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.model.RawContactDelta$ValuesDelta.setDisplayName(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.model.RawContactDelta$ValuesDelta.setGroupRowId(J)V
CONTACT_INFORMATION com.android.contacts.model.RawContactDelta$ValuesDelta.setPhoneticFamilyName(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.model.RawContactDelta$ValuesDelta.setPhoneticGivenName(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.model.RawContactDelta$ValuesDelta.setPhoneticMiddleName(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.model.RawContactDelta$ValuesDelta.setPhoto([B)V
CONTACT_INFORMATION com.android.contacts.model.RawContactDelta$ValuesDelta.setSuperPrimary(Z)V
CONTACT_INFORMATION com.android.contacts.model.RawContactDelta$ValuesDelta.writeToParcel(Landroid/os/Parcel;I)V
CONTACT_INFORMATION com.android.contacts.model.RawContactDelta.writeToParcel(Landroid/os/Parcel;I)V
CONTACT_INFORMATION com.android.contacts.model.RawContactModifier.insertChild(Lcom/android/contacts/model/RawContactDelta;Lcom/android/contacts/model/dataitem/DataKind;Lcom/android/contacts/model/account/AccountType$EditType;)Lcom/android/contacts/model/RawContactDelta$ValuesDelta;
CONTACT_INFORMATION com.android.contacts.model.RawContactModifier.migrateEvent(Lcom/android/contacts/model/RawContactDelta;Lcom/android/contacts/model/RawContactDelta;Lcom/android/contacts/model/dataitem/DataKind;Ljava/lang/Integer;)V
CONTACT_INFORMATION com.android.contacts.model.RawContactModifier.migrateGenericWithTypeColumn(Lcom/android/contacts/model/RawContactDelta;Lcom/android/contacts/model/RawContactDelta;Lcom/android/contacts/model/dataitem/DataKind;)V
CONTACT_INFORMATION com.android.contacts.model.RawContactModifier.migratePostal(Lcom/android/contacts/model/RawContactDelta;Lcom/android/contacts/model/RawContactDelta;Lcom/android/contacts/model/dataitem/DataKind;)V
CONTACT_INFORMATION com.android.contacts.model.RawContactModifier.migrateStructuredName(Landroid/content/Context;Lcom/android/contacts/model/RawContactDelta;Lcom/android/contacts/model/RawContactDelta;Lcom/android/contacts/model/dataitem/DataKind;)V
CONTACT_INFORMATION com.android.contacts.model.RawContactModifier.parseExtras(Landroid/content/Context;Lcom/android/contacts/model/account/AccountType;Lcom/android/contacts/model/RawContactDelta;Landroid/os/Bundle;)V
CONTACT_INFORMATION com.android.contacts.model.RawContactModifier.parseExtras(Lcom/android/contacts/model/RawContactDelta;Lcom/android/contacts/model/dataitem/DataKind;Landroid/os/Bundle;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/android/contacts/model/RawContactDelta$ValuesDelta;
CONTACT_INFORMATION com.android.contacts.model.RawContact.setAccount(Lcom/android/contacts/model/account/AccountWithDataSet;)V
CONTACT_INFORMATION com.android.contacts.PhoneCallDetailsHelper.setCallDetailsHeader(Landroid/widget/TextView;Lcom/android/contacts/PhoneCallDetails;)V
CONTACT_INFORMATION com.android.contacts.PhoneCallDetailsHelper.setCurrentTimeForTest(J)V
CONTACT_INFORMATION com.android.contacts.PhoneCallDetailsHelper.setPhoneCallDetails(Lcom/android/contacts/PhoneCallDetailsViews;Lcom/android/contacts/PhoneCallDetails;Z)V
CONTACT_INFORMATION com.android.contacts.preference.ContactsPreferences.setDisplayOrder(I)V
CONTACT_INFORMATION com.android.contacts.preference.ContactsPreferences.setSortOrder(I)V
CONTACT_INFORMATION com.android.contacts.quickcontact.ActionMultiMap.put(Ljava/lang/String;Lcom/android/contacts/quickcontact/Action;Z)V
CONTACT_INFORMATION com.android.contacts.quickcontact.FloatingChildLayout.setBackgroundColorAlpha(I)V
CONTACT_INFORMATION com.android.contacts.quickcontact.FloatingChildLayout.setBackground(Landroid/graphics/drawable/Drawable;)V
CONTACT_INFORMATION com.android.contacts.socialwidget.SocialWidgetSettings.setContactUri(Landroid/content/Context;ILandroid/net/Uri;)V
CONTACT_INFORMATION com.android.contacts.SpecialCharSequenceMgr.handleAdnEntry(Landroid/content/Context;Ljava/lang/String;Landroid/widget/EditText;)Z
CONTACT_INFORMATION com.android.contacts.test.InjectedServices.setSystemService(Ljava/lang/String;Ljava/lang/Object;)V
CONTACT_INFORMATION com.android.contacts.util.AccountFilterUtil.startAccountFilterActivityForResult(Landroid/app/Activity;ILcom/android/contacts/list/ContactListFilter;)V
CONTACT_INFORMATION com.android.contacts.util.AccountFilterUtil.startAccountFilterActivityForResult(Landroid/app/Fragment;ILcom/android/contacts/list/ContactListFilter;)V
CONTACT_INFORMATION com.android.contacts.util.AccountFilterUtil.updateAccountFilterTitleForPeople(Landroid/view/View;Lcom/android/contacts/list/ContactListFilter;Z)Z
CONTACT_INFORMATION com.android.contacts.util.AccountFilterUtil.updateAccountFilterTitleForPhone(Landroid/view/View;Lcom/android/contacts/list/ContactListFilter;Z)Z
CONTACT_INFORMATION com.android.contacts.util.AccountPromptUtils.launchAccountPrompt(Landroid/app/Activity;)V
CONTACT_INFORMATION com.android.contacts.util.AccountSelectionUtil.doImportFromSdCard(Landroid/content/Context;Lcom/android/contacts/model/account/AccountWithDataSet;)V
CONTACT_INFORMATION com.android.contacts.util.AccountSelectionUtil.doImportFromSim(Landroid/content/Context;Lcom/android/contacts/model/account/AccountWithDataSet;)V
CONTACT_INFORMATION com.android.contacts.util.DialogManager.showDialogInView(Landroid/view/View;Landroid/os/Bundle;)V
CONTACT_INFORMATION com.android.contacts.util.ExpirableCache.put(Ljava/lang/Object;Ljava/lang/Object;)V
CONTACT_INFORMATION com.android.contacts.util.ImageViewDrawableSetter.setupContactPhoto(Lcom/android/contacts/model/Contact;Landroid/widget/ImageView;)V
CONTACT_INFORMATION com.android.contacts.util.NameConverter.displayNameToStructuredName(Landroid/content/Context;Ljava/lang/String;Landroid/content/ContentValues;)Landroid/content/ContentValues;
CONTACT_INFORMATION com.android.contacts.util.NameConverter.displayNameToStructuredName(Landroid/content/Context;Ljava/lang/String;)Ljava/util/Map;
CONTACT_INFORMATION com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.sendFetchVoicemailRequest(Landroid/net/Uri;)V
CONTACT_INFORMATION com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setClipPosition(II)V
CONTACT_INFORMATION com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setFetchContentTimeout()V
CONTACT_INFORMATION com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setIsBuffering()V
CONTACT_INFORMATION com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setIsFetchingContent()V
CONTACT_INFORMATION com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setPositionSeekListener(Landroid/widget/SeekBar$OnSeekBarChangeListener;)V
CONTACT_INFORMATION com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setRateDecreaseButtonListener(Landroid/view/View$OnClickListener;)V
CONTACT_INFORMATION com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setRateDisplay(FI)V
CONTACT_INFORMATION com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setRateIncreaseButtonListener(Landroid/view/View$OnClickListener;)V
CONTACT_INFORMATION com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setSpeakerphoneListener(Landroid/view/View$OnClickListener;)V
CONTACT_INFORMATION com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setSpeakerPhoneOn(Z)V
CONTACT_INFORMATION com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setStartStopListener(Landroid/view/View$OnClickListener;)V
CONTACT_INFORMATION com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setVolumeControlStream(I)V
CONTACT_INFORMATION com.android.contacts.voicemail.VoicemailPlaybackFragment$TextViewWithMessagesController.setPermanentText(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.contacts.voicemail.VoicemailPlaybackFragment$TextViewWithMessagesController.setTemporaryText(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)V
CONTACT_INFORMATION com.android.contacts.widget.AlphaTouchInterceptorOverlay.setOverlayClickable(Z)V
CONTACT_INFORMATION com.android.contacts.widget.FrameLayoutWithOverlay.setAlphaLayer(Landroid/view/View;)V
CONTACT_INFORMATION com.android.contacts.widget.FrameLayoutWithOverlay.setAlphaLayerValue(F)V
CONTACT_INFORMATION com.android.contacts.widget.FrameLayoutWithOverlay.setOverlayClickable(Z)V
CONTACT_INFORMATION com.android.contacts.widget.PinnedHeaderListView.setFadingHeader(IIZ)V
CONTACT_INFORMATION com.android.contacts.widget.PinnedHeaderListView.setHeaderInvisible(IZ)V
CONTACT_INFORMATION com.android.contacts.widget.TransitionAnimationView.setMaskVisibility(Z)V
CONTACT_INFORMATION com.android.email.activity.MessageViewFragmentBase$ContactStatusLoaderCallbacks.createArguments(Ljava/lang/String;)Landroid/os/Bundle;
CONTACT_INFORMATION com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations.newContact(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.exchange.provider.ExchangeDirectoryProvider$GalContactRow.addEmailAddress(Landroid/database/MatrixCursor;Lcom/android/exchange/provider/ExchangeDirectoryProvider$GalProjection;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
CONTACT_INFORMATION com.android.exchange.provider.ExchangeDirectoryProvider$GalContactRow.addNameRow(Landroid/database/MatrixCursor;Lcom/android/exchange/provider/ExchangeDirectoryProvider$GalProjection;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
CONTACT_INFORMATION com.android.exchange.provider.ExchangeDirectoryProvider$GalContactRow.addPhoneRow(Landroid/database/MatrixCursor;Lcom/android/exchange/provider/ExchangeDirectoryProvider$GalProjection;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V
CONTACT_INFORMATION com.android.exchange.provider.ExchangeDirectoryProvider$GalContactRow.put(Ljava/lang/String;Ljava/lang/Object;)V
CONTACT_INFORMATION com.android.internal.telephony.cdma.CdmaCallTracker.dial(Ljava/lang/String;I)Lcom/android/internal/telephony/Connection;
CONTACT_INFORMATION com.android.internal.telephony.cdma.CdmaCallTracker.dial(Ljava/lang/String;)Lcom/android/internal/telephony/Connection;
CONTACT_INFORMATION com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z android.permission.READ_CONTACTS android.permission.WRITE_CONTACTS android.permission.WAKE_LOCK 
CONTACT_INFORMATION com.android.internal.telephony.gsm.GsmCallTracker.dial(Ljava/lang/String;I)Lcom/android/internal/telephony/Connection;
CONTACT_INFORMATION com.android.internal.telephony.gsm.GsmCallTracker.dial(Ljava/lang/String;ILcom/android/internal/telephony/UUSInfo;)Lcom/android/internal/telephony/Connection;
CONTACT_INFORMATION com.android.internal.telephony.gsm.GsmCallTracker.dial(Ljava/lang/String;)Lcom/android/internal/telephony/Connection;
CONTACT_INFORMATION com.android.internal.telephony.gsm.GsmCallTracker.dial(Ljava/lang/String;Lcom/android/internal/telephony/UUSInfo;)Lcom/android/internal/telephony/Connection;
CONTACT_INFORMATION com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z android.permission.READ_CONTACTS android.permission.WRITE_CONTACTS android.permission.WAKE_LOCK 
CONTACT_INFORMATION com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager.updateAdnRecordsInEfBySearch(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z android.permission.WRITE_CONTACTS android.permission.WAKE_LOCK 
CONTACT_INFORMATION com.android.internal.telephony.gsm.UsimPhoneBookManager$PbrFile.parseEf(Lcom/android/internal/telephony/gsm/SimTlv;Ljava/util/Map;I)V
CONTACT_INFORMATION com.android.internal.telephony.gsm.UsimPhoneBookManager$PbrFile.parseTag(Lcom/android/internal/telephony/gsm/SimTlv;I)V
CONTACT_INFORMATION com.android.internal.telephony.IccPhoneBookInterfaceManager.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z android.permission.READ_CONTACTS android.permission.WRITE_CONTACTS android.permission.WAKE_LOCK 
CONTACT_INFORMATION com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy.updateAdnRecordsInEfByIndex(ILjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Z
CONTACT_INFORMATION com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy.updateAdnRecordsInEfBySearch(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
CONTACT_INFORMATION com.android.internal.telephony.IccPhoneBookInterfaceManager.updateAdnRecordsInEfByIndex(ILjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Z
CONTACT_INFORMATION com.android.internal.telephony.IccPhoneBookInterfaceManager.updateAdnRecordsInEfBySearch(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z android.permission.WRITE_CONTACTS android.permission.WAKE_LOCK 
CONTACT_INFORMATION com.android.internal.telephony.IIccPhoneBook$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z android.permission.READ_CONTACTS android.permission.WRITE_CONTACTS android.permission.WAKE_LOCK 
CONTACT_INFORMATION com.android.internal.telephony.IIccPhoneBook$Stub$Proxy.updateAdnRecordsInEfByIndex(ILjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Z
CONTACT_INFORMATION com.android.internal.telephony.IIccPhoneBook$Stub$Proxy.updateAdnRecordsInEfBySearch(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
CONTACT_INFORMATION com.android.providers.contacts.aggregation.ContactAggregator.markAllVisibleForAggregation(Landroid/database/sqlite/SQLiteDatabase;)I
CONTACT_INFORMATION com.android.providers.contacts.aggregation.ContactAggregator.markForAggregation(JIZ)V
CONTACT_INFORMATION com.android.providers.contacts.aggregation.ContactAggregator.markNewForAggregation(JI)V
CONTACT_INFORMATION com.android.providers.contacts.aggregation.ContactAggregator$MatchCandidateList.add(Ljava/lang/String;I)V
CONTACT_INFORMATION com.android.providers.contacts.aggregation.ContactAggregator.onRawContactInsert(Lcom/android/providers/contacts/TransactionContext;Landroid/database/sqlite/SQLiteDatabase;J)J
CONTACT_INFORMATION com.android.providers.contacts.aggregation.ContactAggregator.setContactId(JJ)V
CONTACT_INFORMATION com.android.providers.contacts.aggregation.ContactAggregator.updateAggregateData(Lcom/android/providers/contacts/TransactionContext;J)V
CONTACT_INFORMATION com.android.providers.contacts.aggregation.ContactAggregator.updateDisplayNameForContact(Landroid/database/sqlite/SQLiteDatabase;J)V
CONTACT_INFORMATION com.android.providers.contacts.aggregation.ContactAggregator.updateDisplayNameForRawContact(Landroid/database/sqlite/SQLiteDatabase;J)V
CONTACT_INFORMATION com.android.providers.contacts.aggregation.ContactAggregator.updateHasPhoneNumber(Landroid/database/sqlite/SQLiteDatabase;J)V
CONTACT_INFORMATION com.android.providers.contacts.aggregation.ContactAggregator.updateLookupKeyForRawContact(Landroid/database/sqlite/SQLiteDatabase;J)V
CONTACT_INFORMATION com.android.providers.contacts.aggregation.ContactAggregator.updatePhotoId(Landroid/database/sqlite/SQLiteDatabase;J)V
CONTACT_INFORMATION com.android.providers.contacts.aggregation.ContactAggregator.updateStarred(J)V
CONTACT_INFORMATION com.android.providers.contacts.aggregation.ProfileAggregator.aggregateContact(Lcom/android/providers/contacts/TransactionContext;Landroid/database/sqlite/SQLiteDatabase;J)V
CONTACT_INFORMATION com.android.providers.contacts.aggregation.util.ContactMatcher.matchName(JILjava/lang/String;ILjava/lang/String;I)V
CONTACT_INFORMATION com.android.providers.contacts.aggregation.util.ContactMatcher.updateScoreWithEmailMatch(J)V
CONTACT_INFORMATION com.android.providers.contacts.aggregation.util.ContactMatcher.updateScoreWithNicknameMatch(J)V
CONTACT_INFORMATION com.android.providers.contacts.aggregation.util.ContactMatcher.updateScoreWithPhoneNumberMatch(J)V
CONTACT_INFORMATION com.android.providers.contacts.ContactDirectoryManager.onPackageChanged(Ljava/lang/String;)V
CONTACT_INFORMATION com.android.providers.contacts.ContactLocaleUtils.setLocale(Ljava/util/Locale;)V
CONTACT_INFORMATION com.android.providers.contacts.ContactsDatabaseHelper.copyLongValue(Landroid/content/ContentValues;Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;)V
CONTACT_INFORMATION com.android.providers.contacts.ContactsDatabaseHelper.copyStringValue(Landroid/content/ContentValues;Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;)V
CONTACT_INFORMATION com.android.providers.contacts.ContactsDatabaseHelper.insertNameLookup(JJILjava/lang/String;)V
CONTACT_INFORMATION com.android.providers.contacts.ContactsDatabaseHelper.insertStatusUpdate(Ljava/lang/Long;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;)V
CONTACT_INFORMATION com.android.providers.contacts.ContactsDatabaseHelper.onCreate(Landroid/database/sqlite/SQLiteDatabase;)V
CONTACT_INFORMATION com.android.providers.contacts.ContactsDatabaseHelper.onUpgrade(Landroid/database/sqlite/SQLiteDatabase;II)V
CONTACT_INFORMATION com.android.providers.contacts.ContactsDatabaseHelper.replaceStatusUpdate(Ljava/lang/Long;JLjava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;)V
CONTACT_INFORMATION com.android.providers.contacts.ContactsDatabaseHelper.setIsPrimary(JJJ)V
CONTACT_INFORMATION com.android.providers.contacts.ContactsDatabaseHelper.setIsSuperPrimary(JJJ)V
CONTACT_INFORMATION com.android.providers.contacts.ContactsDatabaseHelper.setLocale(Lcom/android/providers/contacts/ContactsProvider2;Ljava/util/Locale;)V
CONTACT_INFORMATION com.android.providers.contacts.ContactsDatabaseHelper.setProperty(Ljava/lang/String;Ljava/lang/String;)V
CONTACT_INFORMATION com.android.providers.contacts.ContactsDatabaseHelper.updateContactVisible(Lcom/android/providers/contacts/TransactionContext;J)V
CONTACT_INFORMATION com.android.providers.contacts.ContactsDatabaseHelper.updateContactVisible(Lcom/android/providers/contacts/TransactionContext;JZ)Z
CONTACT_INFORMATION com.android.providers.contacts.ContactsDatabaseHelper.updateContactVisibleOnlyIfChanged(Lcom/android/providers/contacts/TransactionContext;J)Z
CONTACT_INFORMATION com.android.providers.contacts.ContactsDatabaseHelper.updateRawContactDisplayName(Landroid/database/sqlite/SQLiteDatabase;J)V
CONTACT_INFORMATION com.android.providers.contacts.ContactsProvider2.insertInTransaction(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;
CONTACT_INFORMATION com.android.providers.contacts.ContactsProvider2.insertStatusUpdate(Landroid/content/ContentValues;)J android.permission.READ_SYNC_SETTINGS android.permission.READ_SOCIAL_STREAM android.permission.WRITE_SOCIAL_STREAM android.permission.READ_CONTACTS android.permission.WRITE_CONTACTS 
CONTACT_INFORMATION com.android.providers.contacts.ContactsProvider2.isWritableAccountWithDataSet(Ljava/lang/String;)Z
CONTACT_INFORMATION com.android.providers.contacts.ContactsProvider2.notifyChange(Z)V
CONTACT_INFORMATION com.android.providers.contacts.ContactsTransaction.startTransactionForDb(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Landroid/database/sqlite/SQLiteTransactionListener;)V
CONTACT_INFORMATION com.android.providers.contacts.DataRowHandlerForCommonDataKind.update(Landroid/database/sqlite/SQLiteDatabase;Lcom/android/providers/contacts/TransactionContext;Landroid/content/ContentValues;Landroid/database/Cursor;Z)Z
CONTACT_INFORMATION com.android.providers.contacts.DataRowHandlerForGroupMembership.insert(Landroid/database/sqlite/SQLiteDatabase;Lcom/android/providers/contacts/TransactionContext;JLandroid/content/ContentValues;)J
CONTACT_INFORMATION com.android.providers.contacts.DataRowHandlerForGroupMembership.update(Landroid/database/sqlite/SQLiteDatabase;Lcom/android/providers/contacts/TransactionContext;Landroid/content/ContentValues;Landroid/database/Cursor;Z)Z
CONTACT_INFORMATION com.android.providers.contacts.DataRowHandlerForIdentity.update(Landroid/database/sqlite/SQLiteDatabase;Lcom/android/providers/contacts/TransactionContext;Landroid/content/ContentValues;Landroid/database/Cursor;Z)Z
CONTACT_INFORMATION com.android.providers.contacts.DataRowHandlerForPhoneNumber.insert(Landroid/database/sqlite/SQLiteDatabase;Lcom/android/providers/contacts/TransactionContext;JLandroid/content/ContentValues;)J
CONTACT_INFORMATION com.android.providers.contacts.DataRowHandlerForPhoneNumber.update(Landroid/database/sqlite/SQLiteDatabase;Lcom/android/providers/contacts/TransactionContext;Landroid/content/ContentValues;Landroid/database/Cursor;Z)Z
CONTACT_INFORMATION com.android.providers.contacts.DataRowHandlerForPhoto.insert(Landroid/database/sqlite/SQLiteDatabase;Lcom/android/providers/contacts/TransactionContext;JLandroid/content/ContentValues;)J
CONTACT_INFORMATION com.android.providers.contacts.DataRowHandlerForPhoto.update(Landroid/database/sqlite/SQLiteDatabase;Lcom/android/providers/contacts/TransactionContext;Landroid/content/ContentValues;Landroid/database/Cursor;Z)Z
CONTACT_INFORMATION com.android.providers.contacts.DataRowHandlerForStructuredName.update(Landroid/database/sqlite/SQLiteDatabase;Lcom/android/providers/contacts/TransactionContext;Landroid/content/ContentValues;Landroid/database/Cursor;Z)Z
CONTACT_INFORMATION com.android.providers.contacts.DataRowHandlerForStructuredPostal.update(Landroid/database/sqlite/SQLiteDatabase;Lcom/android/providers/contacts/TransactionContext;Landroid/content/ContentValues;Landroid/database/Cursor;Z)Z
CONTACT_INFORMATION com.android.providers.contacts.DbModifierWithNotification.insert(Landroid/content/ContentValues;)J
CONTACT_INFORMATION com.android.providers.contacts.DbModifierWithNotification.insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J
CONTACT_INFORMATION com.android.providers.contacts.DbModifierWithNotification.update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
CONTACT_INFORMATION com.android.providers.contacts.DefaultCallLogInsertionHelper.addComputedValues(Landroid/content/ContentValues;)V
CONTACT_INFORMATION com.android.providers.contacts.FastScrollingIndexCache.buildExtraBundle([Ljava/lang/String;[I)Landroid/os/Bundle;
CONTACT_INFORMATION com.android.providers.contacts.LegacyApiSupport.update(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
CONTACT_INFORMATION com.android.providers.contacts.NameSplitter$Name.toValues(Landroid/content/ContentValues;)V
CONTACT_INFORMATION com.android.providers.contacts.PhotoStore.insert(Lcom/android/providers/contacts/PhotoProcessor;Z)J
CONTACT_INFORMATION com.android.providers.contacts.ProfileAwareUriMatcher.addURI(Ljava/lang/String;Ljava/lang/String;I)V
CONTACT_INFORMATION com.android.providers.contacts.TransactionContext.rawContactInserted(JJ)V
CONTACT_INFORMATION com.android.providers.contacts.VoicemailContentProvider.checkAndAddSourcePackageIntoValues(Lcom/android/providers/contacts/VoicemailContentProvider$UriData;Landroid/content/ContentValues;)V
CONTACT_INFORMATION com.android.providers.contacts.VoicemailContentProvider.openDataFile(Lcom/android/providers/contacts/VoicemailContentProvider$UriData;Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;
CONTACT_INFORMATION com.android.providers.contacts.VoicemailContentTable.insert(Lcom/android/providers/contacts/VoicemailContentProvider$UriData;Landroid/content/ContentValues;)Landroid/net/Uri; com.android.voicemail.permission.ADD_VOICEMAIL 
CONTACT_INFORMATION com.android.providers.contacts.VoicemailContentTable.openFile(Lcom/android/providers/contacts/VoicemailContentProvider$UriData;Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;
CONTACT_INFORMATION com.android.providers.contacts.VoicemailContentTable.update(Lcom/android/providers/contacts/VoicemailContentProvider$UriData;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
CONTACT_INFORMATION com.android.providers.contacts.VoicemailStatusTable.openFile(Lcom/android/providers/contacts/VoicemailContentProvider$UriData;Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;
CONTACT_INFORMATION com.android.providers.contacts.VoicemailStatusTable.update(Lcom/android/providers/contacts/VoicemailContentProvider$UriData;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
CONTACT_INFORMATION gov.nist.javax.sip.header.Contact.setExpires(I)V
CONTACT_INFORMATION gov.nist.javax.sip.header.Contact.setParameter(Ljava/lang/String;Ljava/lang/String;)V
CONTACT_INFORMATION gov.nist.javax.sip.header.Contact.setPubGruuParam(Ljava/lang/String;)V
CONTACT_INFORMATION gov.nist.javax.sip.header.Contact.setQValue(F)V
CONTACT_INFORMATION gov.nist.javax.sip.header.Contact.setSipInstanceParam(Ljava/lang/String;)V
CONTACT_INFORMATION gov.nist.javax.sip.header.Contact.setTempGruuParam(Ljava/lang/String;)V
CONTACT_INFORMATION gov.nist.javax.sip.header.Contact.setWildCardFlag(Z)V
EMAIL com.android.email.activity.ActivityHelper.openUrlInMessage(Landroid/app/Activity;Ljava/lang/String;J)Z
EMAIL com.android.email.activity.AttachmentInfoDialog.newInstance(Landroid/content/Context;I)Lcom/android/email/activity/AttachmentInfoDialog;
EMAIL com.android.email.activity.DeleteMessageConfirmationDialog.newInstance(ILandroid/app/Fragment;)Lcom/android/email/activity/DeleteMessageConfirmationDialog;
EMAIL com.android.email.activity.EmailActivity$ControllerResult.sendMailCallback(Lcom/android/emailcommon/mail/MessagingException;JJI)V
EMAIL com.android.email.activity.EmailActivity.createSearchIntent(Landroid/app/Activity;JJLjava/lang/String;)Landroid/content/Intent;
EMAIL com.android.email.activity.InsertQuickResponseDialog.newInstance(Landroid/app/Fragment;Lcom/android/emailcommon/provider/Account;)Lcom/android/email/activity/InsertQuickResponseDialog;
EMAIL com.android.email.activity.MailboxFragmentAdapter.bindView(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;)V
EMAIL com.android.email.activity.MailboxListFragment.newInstance(JJZ)Lcom/android/email/activity/MailboxListFragment;
EMAIL com.android.email.activity.MailboxListFragment.onCreate(Landroid/os/Bundle;)V
EMAIL com.android.email.activity.MailboxListItem.setBackgroundDrawable(Landroid/graphics/drawable/Drawable;)V
EMAIL com.android.email.activity.MailboxListItem.setDropTargetBackground(ZJ)V
EMAIL com.android.email.activity.MessageCompose.actionCompose(Landroid/content/Context;Ljava/lang/String;J)Z
EMAIL com.android.email.activity.MessageCompose.setFocusShifter(II)V
EMAIL com.android.email.activity.MessageCompose.setIntent(Landroid/content/Intent;)V
EMAIL com.android.email.activity.MessageCompose.setMessageContentSelection(Ljava/lang/String;)V
EMAIL com.android.email.activity.MessageListFragment$1.setField(JZ)V
EMAIL com.android.email.activity.MessageListFragment$2.setField(JZ)V
EMAIL com.android.email.activity.MessageListFragment.newInstance(Lcom/android/email/MessageListContext;)Lcom/android/email/activity/MessageListFragment;
EMAIL com.android.email.activity.MessageListFragment.onActivityCreated(Landroid/os/Bundle;)V
EMAIL com.android.email.activity.MessageListFragment.onItemLongClick(Landroid/widget/AdapterView;Landroid/view/View;IJ)Z
EMAIL com.android.email.activity.MessageListFragment.setLayout(Lcom/android/email/activity/ThreePaneLayout;)V
EMAIL com.android.email.activity.MessageListItemCoordinates.forWidth(Landroid/content/Context;IZ)Lcom/android/email/activity/MessageListItemCoordinates;
EMAIL com.android.email.activity.MessageListItem.setTimestamp(J)V
EMAIL com.android.email.activity.MessagesAdapter.toggleSelected(Lcom/android/email/activity/MessageListItem;)V
EMAIL com.android.email.activity.MessageViewFragmentBase.onCreate(Landroid/os/Bundle;)V
EMAIL com.android.email.activity.MessageViewFragment.newInstance(J)Lcom/android/email/activity/MessageViewFragment;
EMAIL com.android.email.activity.MessageViewFragment.onMessageShown(JLcom/android/emailcommon/provider/Mailbox;)V
EMAIL com.android.email.activity.MessageViewFragment.openMessageSync(Landroid/app/Activity;)Lcom/android/emailcommon/provider/EmailContent$Message;
EMAIL com.android.email.activity.MoveMessageToDialog.newInstance([JLandroid/app/Fragment;)Lcom/android/email/activity/MoveMessageToDialog;
EMAIL com.android.email.activity.setup.AccountCheckSettingsFragment$ErrorDialog.newInstance(Landroid/content/Context;Lcom/android/email/activity/setup/AccountCheckSettingsFragment;Lcom/android/emailcommon/mail/MessagingException;)Lcom/android/email/activity/setup/AccountCheckSettingsFragment$ErrorDialog;
EMAIL com.android.email.activity.setup.AccountCheckSettingsFragment$SecurityRequiredDialog.newInstance(Lcom/android/email/activity/setup/AccountCheckSettingsFragment;Ljava/lang/String;)Lcom/android/email/activity/setup/AccountCheckSettingsFragment$SecurityRequiredDialog;
EMAIL com.android.email.activity.setup.AccountSecurity.actionDevicePasswordExpirationIntent(Landroid/content/Context;JZ)Landroid/content/Intent;
EMAIL com.android.email.activity.setup.AccountSecurity.actionUpdateSecurityIntent(Landroid/content/Context;JZ)Landroid/content/Intent;
EMAIL com.android.email.activity.setup.AccountSecurity$PasswordExpirationDialog.newInstance(Ljava/lang/String;Z)Lcom/android/email/activity/setup/AccountSecurity$PasswordExpirationDialog;
EMAIL com.android.email.activity.setup.AccountSecurity$SecurityNeededDialog.newInstance(Ljava/lang/String;)Lcom/android/email/activity/setup/AccountSecurity$SecurityNeededDialog;
EMAIL com.android.email.activity.setup.AccountSettings$AccountServerSettingsFragmentCallback.onProceedNext(ILcom/android/email/activity/setup/AccountServerBaseFragment;)V
EMAIL com.android.email.activity.setup.AccountSettings.createAccountSettingsIntent(Landroid/content/Context;JLjava/lang/String;)Landroid/content/Intent;
EMAIL com.android.email.activity.setup.AccountSettingsFragment.buildArguments(JLjava/lang/String;)Landroid/os/Bundle;
EMAIL com.android.email.activity.setup.AccountSettingsFragment$DeleteAccountFragment.newInstance(Lcom/android/emailcommon/provider/Account;Landroid/app/Fragment;)Lcom/android/email/activity/setup/AccountSettingsFragment$DeleteAccountFragment;
EMAIL com.android.email.activity.setup.AccountSettings$LoginWarningDialog.newInstance(Ljava/lang/String;)Lcom/android/email/activity/setup/AccountSettings$LoginWarningDialog;
EMAIL com.android.email.activity.setup.AccountSettings.onBuildStartFragmentIntent(Ljava/lang/String;Landroid/os/Bundle;II)Landroid/content/Intent;
EMAIL com.android.email.activity.setup.AccountSettings.onEditQuickResponses(Lcom/android/emailcommon/provider/Account;)V
EMAIL com.android.email.activity.setup.AccountSettings$UnsavedChangesDialogFragment.newInstanceForHeader(I)Lcom/android/email/activity/setup/AccountSettings$UnsavedChangesDialogFragment;
EMAIL com.android.email.activity.setup.AccountSettingsUtils.commitSettings(Landroid/content/Context;Lcom/android/emailcommon/provider/Account;)V
EMAIL com.android.email.activity.setup.AccountSetupActivity.onCreate(Landroid/os/Bundle;)V
EMAIL com.android.email.activity.setup.AccountSetupActivity.onSaveInstanceState(Landroid/os/Bundle;)V
EMAIL com.android.email.activity.setup.AccountSetupBasics$NoteDialogFragment.newInstance(Ljava/lang/String;)Lcom/android/email/activity/setup/AccountSetupBasics$NoteDialogFragment;
EMAIL com.android.email.activity.setup.AccountSetupExchangeFragment.setHostAuthFromAutodiscover(Lcom/android/emailcommon/provider/HostAuth;)Z
EMAIL com.android.email.activity.setup.DebugFragment.onCheckedChanged(Landroid/widget/CompoundButton;Z)V
EMAIL com.android.email.activity.setup.DuplicateAccountDialogFragment.newInstance(Ljava/lang/String;)Lcom/android/email/activity/setup/DuplicateAccountDialogFragment;
EMAIL com.android.email.activity.setup.EditQuickResponseDialog.newInstance(Lcom/android/emailcommon/provider/QuickResponse;J)Lcom/android/email/activity/setup/EditQuickResponseDialog;
EMAIL com.android.email.activity.setup.MailboxSettings.setupLookbackPreferenceOptions(Landroid/content/Context;Landroid/preference/ListPreference;Lcom/android/emailcommon/provider/Account;)V
EMAIL com.android.email.activity.setup.MailboxSettings.start(Landroid/app/Activity;J)V
EMAIL com.android.email.activity.ShortcutPickerFragment$MailboxShortcutPickerFragment.newInstance(Landroid/content/Context;Lcom/android/emailcommon/provider/Account;Ljava/lang/Integer;)Lcom/android/email/activity/ShortcutPickerFragment$MailboxShortcutPickerFragment;
EMAIL com.android.email.activity.ThreePaneLayout$SavedState.writeToParcel(Landroid/os/Parcel;I)V
EMAIL com.android.email.activity.ThreePaneLayout.setMessageListWidthAnim(I)V
EMAIL com.android.email.activity.UIControllerBase.onSearchSubmit(Ljava/lang/String;)V
EMAIL com.android.email.activity.UIControllerOnePane.onSaveInstanceState(Landroid/os/Bundle;)V
EMAIL com.android.email.activity.UIControllerOnePane.onUrlInMessageClicked(Ljava/lang/String;)Z
EMAIL com.android.email.activity.UIControllerTwoPane.onUrlInMessageClicked(Ljava/lang/String;)Z
EMAIL com.android.email.activity.UIControllerTwoPane.openInternal(Lcom/android/email/MessageListContext;J)V
EMAIL com.android.email.activity.UiUtilities.setVisibilitySafe(Landroid/app/Activity;II)V
EMAIL com.android.email.activity.UiUtilities.setVisibilitySafe(Landroid/view/View;II)V
EMAIL com.android.email.activity.UiUtilities.setVisibilitySafe(Landroid/view/View;I)V
EMAIL com.android.email.activity.Welcome.startActivity(Landroid/content/Intent;)V
EMAIL com.android.emailcommon.internet.MimeBodyPart.setHeader(Ljava/lang/String;Ljava/lang/String;)V
EMAIL com.android.emailcommon.internet.MimeHeader.setHeader(Ljava/lang/String;Ljava/lang/String;)V
EMAIL com.android.emailcommon.internet.MimeMessage.setHeader(Ljava/lang/String;Ljava/lang/String;)V
EMAIL com.android.emailcommon.internet.Rfc822Output.writeTo(Landroid/content/Context;JLjava/io/OutputStream;ZZ)V
EMAIL com.android.emailcommon.mail.Address.setAddress(Ljava/lang/String;)V
EMAIL com.android.emailcommon.mail.Message.isMimeType(Ljava/lang/String;)Z
EMAIL com.android.emailcommon.mail.PackedString$Builder.put(Ljava/lang/String;Ljava/lang/String;)V
EMAIL com.android.emailcommon.provider.Account.refresh(Landroid/content/Context;)V
EMAIL com.android.emailcommon.provider.Account.writeToParcel(Landroid/os/Parcel;I)V
EMAIL com.android.emailcommon.provider.EmailContent$Message.save(Landroid/content/Context;)Landroid/net/Uri;
EMAIL com.android.emailcommon.provider.EmailContent.update(Landroid/content/Context;Landroid/content/ContentValues;)I
EMAIL com.android.emailcommon.provider.Mailbox.writeToParcel(Landroid/os/Parcel;I)V
EMAIL com.android.emailcommon.provider.Policy.setAttachmentFlagsForNewPolicy(Landroid/content/Context;Lcom/android/emailcommon/provider/Account;Lcom/android/emailcommon/provider/Policy;)V
EMAIL com.android.emailcommon.service.AccountServiceProxy.notifyLoginFailed(J)V
EMAIL com.android.emailcommon.service.AccountServiceProxy.notifyLoginSucceeded(J)V
EMAIL com.android.emailcommon.service.EmailServiceProxy.sendMail(J)V
EMAIL com.android.emailcommon.service.EmailServiceProxy.sendMeetingResponse(JI)V
EMAIL com.android.emailcommon.service.EmailServiceProxy.setLogging(I)V
EMAIL com.android.emailcommon.service.IAccountService$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
EMAIL com.android.emailcommon.service.IAccountService$Stub$Proxy.notifyLoginFailed(J)V
EMAIL com.android.emailcommon.service.IAccountService$Stub$Proxy.notifyLoginSucceeded(J)V
EMAIL com.android.emailcommon.service.IAccountService$Stub$Proxy.reconcileAccounts(Ljava/lang/String;Ljava/lang/String;)V
EMAIL com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy.loadAttachmentStatus(JJII)V
EMAIL com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy.loadMessageStatus(JII)V
EMAIL com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy.sendMessageStatus(JLjava/lang/String;II)V
EMAIL com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy.syncMailboxListStatus(JII)V
EMAIL com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy.syncMailboxStatus(JII)V
EMAIL com.android.emailcommon.service.IEmailService$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
EMAIL com.android.emailcommon.service.IEmailService$Stub$Proxy.createFolder(JLjava/lang/String;)Z
EMAIL com.android.emailcommon.service.IEmailService$Stub$Proxy.deleteAccountPIMData(J)V
EMAIL com.android.emailcommon.service.IEmailService$Stub$Proxy.deleteFolder(JLjava/lang/String;)Z
EMAIL com.android.emailcommon.service.IEmailService$Stub$Proxy.hostChanged(J)V
EMAIL com.android.emailcommon.service.IEmailService$Stub$Proxy.loadAttachment(JZ)V
EMAIL com.android.emailcommon.service.IEmailService$Stub$Proxy.loadMore(J)V
EMAIL com.android.emailcommon.service.IEmailService$Stub$Proxy.renameFolder(JLjava/lang/String;Ljava/lang/String;)Z
EMAIL com.android.emailcommon.service.IEmailService$Stub$Proxy.searchMessages(JLcom/android/emailcommon/service/SearchParams;J)I
EMAIL com.android.emailcommon.service.IEmailService$Stub$Proxy.sendMail(J)V
EMAIL com.android.emailcommon.service.IEmailService$Stub$Proxy.sendMeetingResponse(JI)V
EMAIL com.android.emailcommon.service.IEmailService$Stub$Proxy.setCallback(Lcom/android/emailcommon/service/IEmailServiceCallback;)V
EMAIL com.android.emailcommon.service.IEmailService$Stub$Proxy.setLogging(I)V
EMAIL com.android.emailcommon.service.IEmailService$Stub$Proxy.startSync(JZ)V
EMAIL com.android.emailcommon.service.IEmailService$Stub$Proxy.stopSync(J)V
EMAIL com.android.emailcommon.service.IEmailService$Stub$Proxy.updateFolderList(J)V
EMAIL com.android.emailcommon.service.IPolicyService$Stub$Proxy.setAccountHoldFlag(JZ)V
EMAIL com.android.emailcommon.service.IPolicyService$Stub$Proxy.setAccountPolicy(JLcom/android/emailcommon/provider/Policy;Ljava/lang/String;)V
EMAIL com.android.emailcommon.service.PolicyServiceProxy.setAccountHoldFlag(JZ)V
EMAIL com.android.emailcommon.service.PolicyServiceProxy.setAccountHoldFlag(Landroid/content/Context;Lcom/android/emailcommon/provider/Account;Z)V
EMAIL com.android.emailcommon.service.PolicyServiceProxy.setAccountPolicy(JLcom/android/emailcommon/provider/Policy;Ljava/lang/String;)V
EMAIL com.android.emailcommon.service.PolicyServiceProxy.setAccountPolicy(Landroid/content/Context;JLcom/android/emailcommon/provider/Policy;Ljava/lang/String;)V
EMAIL com.android.email.Controller.isMessagingController(J)Z
EMAIL com.android.email.Controller$LegacyListener.listFoldersFailed(JLjava/lang/String;)V
EMAIL com.android.email.Controller$LegacyListener.sendPendingMessagesCompleted(J)V
EMAIL com.android.email.Controller$LegacyListener.sendPendingMessagesFailed(JJLjava/lang/Exception;)V
EMAIL com.android.email.Controller$LegacyListener.sendPendingMessagesStarted(JJ)V
EMAIL com.android.email.Controller$LegacyListener.synchronizeMailboxStarted(JJ)V android.permission.READ_SYNC_SETTINGS 
EMAIL com.android.email.Controller.loadAttachment(JJJ)V
EMAIL com.android.email.ControllerResultUiThreadWrapper.sendMailCallback(Lcom/android/emailcommon/mail/MessagingException;JJI)V
EMAIL com.android.email.ControllerResultUiThreadWrapper.setRegistered(Z)V
EMAIL com.android.email.Controller.searchMessages(JLcom/android/emailcommon/service/SearchParams;)I
EMAIL com.android.email.Controller.sendMeetingResponse(JI)V
EMAIL com.android.email.Controller.sendMessage(Lcom/android/emailcommon/provider/EmailContent$Message;)V
EMAIL com.android.email.Controller.sendPendingMessages(J)V
EMAIL com.android.email.Controller$ServiceCallback.sendMessageStatus(JLjava/lang/String;II)V
EMAIL com.android.email.Controller$ServiceCallback.syncMailboxListStatus(JII)V
EMAIL com.android.email.Controller$ServiceCallback.syncMailboxStatus(JII)V
EMAIL com.android.email.Controller.setMessageAnsweredOrForwarded(JI)V
EMAIL com.android.email.Controller.setMessageFavorite(JZ)Lcom/android/emailcommon/utility/EmailAsyncTask;
EMAIL com.android.email.Controller.setMessageFavoriteSync(JZ)V
EMAIL com.android.email.Controller.setMessageRead(JZ)Lcom/android/emailcommon/utility/EmailAsyncTask;
EMAIL com.android.email.Controller.setMessageReadSync(JZ)V
EMAIL com.android.email.Controller.updateMailbox(JJZ)V
EMAIL com.android.email.Email.enableStrictMode(Z)V
EMAIL com.android.email.Email.setServicesEnabledSync(Landroid/content/Context;)Z
EMAIL com.android.email.GroupMessagingListener.addListener(Lcom/android/email/MessagingListener;)V
EMAIL com.android.email.GroupMessagingListener.sendPendingMessagesCompleted(J)V
EMAIL com.android.email.GroupMessagingListener.sendPendingMessagesFailed(JJLjava/lang/Exception;)V
EMAIL com.android.email.GroupMessagingListener.sendPendingMessagesStarted(JJ)V
EMAIL com.android.email.LegacyConversions.inferMailboxTypeFromName(Landroid/content/Context;Ljava/lang/String;)I
EMAIL com.android.email.LegacyConversions.saveAttachmentBody(Landroid/content/Context;Lcom/android/emailcommon/mail/Part;Lcom/android/emailcommon/provider/EmailContent$Attachment;J)V
EMAIL com.android.email.mail.store.ImapConnection.sendCommand(Ljava/lang/String;Z)Ljava/lang/String;
EMAIL com.android.email.mail.store.ImapConnection.sendComplexCommand(Ljava/util/List;Z)Ljava/lang/String;
EMAIL com.android.email.mail.store.ImapFolder.copyMessages([Lcom/android/emailcommon/mail/Message;Lcom/android/emailcommon/mail/Folder;Lcom/android/emailcommon/mail/Folder$MessageUpdateCallbacks;)V
EMAIL com.android.email.mail.store.ImapFolder.fetchInternal([Lcom/android/emailcommon/mail/Message;Lcom/android/emailcommon/mail/FetchProfile;Lcom/android/emailcommon/mail/Folder$MessageRetrievalListener;)V
EMAIL com.android.email.mail.store.ImapFolder.save(Landroid/content/Context;)V
EMAIL com.android.email.mail.store.ImapFolder.setFlags([Lcom/android/emailcommon/mail/Message;[Lcom/android/emailcommon/mail/Flag;Z)V
EMAIL com.android.email.mail.store.imap.ImapList.is(ILjava/lang/String;Z)Z
EMAIL com.android.email.mail.store.ImapStore$ImapMessage.setFlagInternal(Lcom/android/emailcommon/mail/Flag;Z)V
EMAIL com.android.email.mail.store.ImapStore$ImapMessage.setFlag(Lcom/android/emailcommon/mail/Flag;Z)V
EMAIL com.android.email.mail.store.ImapStore$ImapMessage.setSize(I)V
EMAIL com.android.email.mail.store.Pop3Store$Pop3Folder.setFlags([Lcom/android/emailcommon/mail/Message;[Lcom/android/emailcommon/mail/Flag;Z)V
EMAIL com.android.email.mail.store.Pop3Store$Pop3Message.setFlag(Lcom/android/emailcommon/mail/Flag;Z)V
EMAIL com.android.email.mail.store.Pop3Store$Pop3Message.setSize(I)V
EMAIL com.android.email.mail.transport.EOLConvertingOutputStream.write(I)V
EMAIL com.android.email.mail.transport.MailTransport.setSoTimeout(I)V
EMAIL com.android.email.mail.transport.MailTransport.writeLine(Ljava/lang/String;Ljava/lang/String;)V
EMAIL com.android.email.MessageListContext.writeToParcel(Landroid/os/Parcel;I)V
EMAIL com.android.email.MessagingController$4.messageRetrieved(Lcom/android/emailcommon/mail/Message;)V
EMAIL com.android.email.MessagingController$8.onMessageUidChange(Lcom/android/emailcommon/mail/Message;Ljava/lang/String;)V
EMAIL com.android.email.MessagingController$9.onMessageUidChange(Lcom/android/emailcommon/mail/Message;Ljava/lang/String;)V
EMAIL com.android.email.MessagingController.checkMail(JJLcom/android/email/MessagingListener;)V
EMAIL com.android.email.MessagingController.copyOneMessageToProvider(Lcom/android/emailcommon/mail/Message;Lcom/android/emailcommon/provider/EmailContent$Message;ILandroid/content/Context;)V
EMAIL com.android.email.MessagingController.listFolders(JLcom/android/email/MessagingListener;)V
EMAIL com.android.email.MessagingController.loadAttachment(JJJJLcom/android/email/MessagingListener;Z)V
EMAIL com.android.email.MessagingController.loadMessageForView(JLcom/android/email/MessagingListener;)V
EMAIL com.android.email.MessagingController.processPendingActions(J)V
EMAIL com.android.email.MessagingController.sendPendingMessages(Lcom/android/emailcommon/provider/Account;JLcom/android/email/MessagingListener;)V
EMAIL com.android.email.MessagingController.sendPendingMessagesSynchronous(Lcom/android/emailcommon/provider/Account;J)V
EMAIL com.android.email.MessagingListener.sendPendingMessagesCompleted(J)V
EMAIL com.android.email.MessagingListener.sendPendingMessagesFailed(JJLjava/lang/Exception;)V
EMAIL com.android.email.MessagingListener.sendPendingMessagesStarted(JJ)V
EMAIL com.android.email.NotificationController.setupSoundAndVibration(Landroid/app/Notification$Builder;Lcom/android/emailcommon/provider/Account;)V
EMAIL com.android.email.NotificationController.showDownloadForwardFailedNotification(Lcom/android/emailcommon/provider/EmailContent$Attachment;)V
EMAIL com.android.email.NotificationController.showLoginFailedNotification(J)V
EMAIL com.android.email.NotificationController.showPasswordExpiredNotification(J)V
EMAIL com.android.email.NotificationController.showPasswordExpiringNotification(J)V
EMAIL com.android.email.Preferences.setAutoAdvanceDirection(I)V
EMAIL com.android.email.Preferences.setEnableDebugLogging(Z)V
EMAIL com.android.email.Preferences.setEnableExchangeFileLogging(Z)V
EMAIL com.android.email.Preferences.setEnableExchangeLogging(Z)V
EMAIL com.android.email.Preferences.setEnableStrictMode(Z)V
EMAIL com.android.email.Preferences.setForceOneMinuteRefresh(Z)V
EMAIL com.android.email.Preferences.setHasShownRequireManualSync(Landroid/content/Context;Lcom/android/emailcommon/provider/Account;Z)V
EMAIL com.android.email.Preferences.setInhibitGraphicsAcceleration(Z)V
EMAIL com.android.email.Preferences.setLastUsedAccountId(J)V
EMAIL com.android.email.Preferences.setOneTimeInitializationProgress(I)V
EMAIL com.android.email.Preferences.setSenderAsTrusted(Ljava/lang/String;)V
EMAIL com.android.email.Preferences.setTextZoom(I)V
EMAIL com.android.email.provider.ContentCache$CounterMap.add(Ljava/lang/Object;)V
EMAIL com.android.email.provider.EmailProvider.restoreIfNeeded(Landroid/content/Context;Landroid/database/sqlite/SQLiteDatabase;)V
EMAIL com.android.email.RecipientAdapter.setAccount(Landroid/accounts/Account;)V
EMAIL com.android.email.RefreshManager$ControllerResult.sendMailCallback(Lcom/android/emailcommon/mail/MessagingException;JJI)V
EMAIL com.android.email.RefreshManager$ControllerResult.serviceCheckMailCallback(Lcom/android/emailcommon/mail/MessagingException;JJIJ)V
EMAIL com.android.email.RefreshManager$ControllerResult.updateMailboxCallback(Lcom/android/emailcommon/mail/MessagingException;JJIILjava/util/ArrayList;)V
EMAIL com.android.email.RefreshManager.refreshMailboxList(J)Z
EMAIL com.android.email.RefreshManager.sendPendingMessages(J)Z
EMAIL com.android.email.SecurityPolicy.policiesRequired(J)V
EMAIL com.android.email.SecurityPolicy.setAccountHoldFlag(Landroid/content/Context;JZ)V
EMAIL com.android.email.SecurityPolicy.setAccountHoldFlag(Landroid/content/Context;Lcom/android/emailcommon/provider/Account;Z)V
EMAIL com.android.email.SecurityPolicy.setAccountPolicy(JLcom/android/emailcommon/provider/Policy;Ljava/lang/String;)V
EMAIL com.android.email.SecurityPolicy.setAccountPolicy(Landroid/content/Context;Lcom/android/emailcommon/provider/Account;Lcom/android/emailcommon/provider/Policy;Ljava/lang/String;)V
EMAIL com.android.email.service.AttachmentDownloadService.addServiceIntentForTest(JLandroid/content/Intent;)V
EMAIL com.android.email.service.AttachmentDownloadService.canPrefetchForAccount(Lcom/android/emailcommon/provider/Account;Ljava/io/File;)Z
EMAIL com.android.email.service.AttachmentDownloadService$DownloadSet.endDownload(JI)V
EMAIL com.android.email.service.AttachmentDownloadService$ServiceCallback.sendMessageStatus(JLjava/lang/String;II)V
EMAIL com.android.email.service.EasAuthenticatorService$EasAuthenticator.addAccount(Landroid/accounts/AccountAuthenticatorResponse;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle;
EMAIL com.android.email.service.EasTestAuthenticatorService$EasAuthenticator.addAccount(Landroid/accounts/AccountAuthenticatorResponse;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle;
EMAIL com.android.email.service.EmailBroadcastProcessorService.processBroadcastIntent(Landroid/content/Context;Landroid/content/Intent;)V
EMAIL com.android.email.service.EmailBroadcastProcessorService.processDevicePolicyMessage(Landroid/content/Context;I)V
EMAIL com.android.email.service.EmailBroadcastProcessorService.setImapDeletePolicy(Landroid/content/Context;)V
EMAIL com.android.email.service.EmailServiceUtils$NullEmailService.sendMail(J)V
EMAIL com.android.email.service.EmailServiceUtils$NullEmailService.sendMeetingResponse(JI)V
EMAIL com.android.email.service.EmailServiceUtils$NullEmailService.setLogging(I)V
EMAIL com.android.email.service.EmailServiceUtils.startService(Landroid/content/Context;Ljava/lang/String;)V
EMAIL com.android.email.service.MailService.actionSendPendingMail(Landroid/content/Context;J)V
EMAIL com.android.email.service.MailService$ControllerResults.updateMailboxCallback(Lcom/android/emailcommon/mail/MessagingException;JJIILjava/util/ArrayList;)V android.permission.READ_SYNC_SETTINGS 
EMAIL com.android.email.service.MailService.setupAccountManagerAccount(Landroid/content/Context;Lcom/android/emailcommon/provider/Account;ZZZLandroid/accounts/AccountManagerCallback;)V
EMAIL com.android.email.service.MailService.setupSyncReportsLocked(JLandroid/content/Context;)V
EMAIL com.android.email.service.PolicyService$1.setAccountHoldFlag(JZ)V
EMAIL com.android.email.service.PolicyService$1.setAccountPolicy(JLcom/android/emailcommon/provider/Policy;Ljava/lang/String;)V
EMAIL com.android.email.service.PopImapAuthenticatorService$PopImapAuthenticator.addAccount(Landroid/accounts/AccountAuthenticatorResponse;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle;
EMAIL com.android.email.VendorPolicyLoader.findProviderForDomain(Ljava/lang/String;)Lcom/android/email/activity/setup/AccountSettingsUtils$Provider;
EMAIL com.android.email.view.CertificateSelector$SavedState.writeToParcel(Landroid/os/Parcel;I)V
FILE android.accounts.AccountManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.app.Activity.dumpInner(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.app.Activity.dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.app.ActivityThread$ApplicationThread.dumpActivity(Ljava/io/FileDescriptor;Landroid/os/IBinder;Ljava/lang/String;[Ljava/lang/String;)V
FILE android.app.ActivityThread$ApplicationThread.dumpDbInfo(Ljava/io/FileDescriptor;[Ljava/lang/String;)V
FILE android.app.ActivityThread$ApplicationThread.dumpGfxInfo(Ljava/io/FileDescriptor;[Ljava/lang/String;)V
FILE android.app.ActivityThread$ApplicationThread.dumpProvider(Ljava/io/FileDescriptor;Landroid/os/IBinder;[Ljava/lang/String;)V
FILE android.app.ActivityThread$ApplicationThread.dumpService(Ljava/io/FileDescriptor;Landroid/os/IBinder;[Ljava/lang/String;)V
FILE android.app.ApplicationThreadNative.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
FILE android.app.ApplicationThreadProxy.dumpActivity(Ljava/io/FileDescriptor;Landroid/os/IBinder;Ljava/lang/String;[Ljava/lang/String;)V
FILE android.app.ApplicationThreadProxy.dumpDbInfo(Ljava/io/FileDescriptor;[Ljava/lang/String;)V
FILE android.app.ApplicationThreadProxy.dumpGfxInfo(Ljava/io/FileDescriptor;[Ljava/lang/String;)V
FILE android.app.ApplicationThreadProxy.dumpMemInfo(Ljava/io/FileDescriptor;ZZ[Ljava/lang/String;)Landroid/os/Debug$MemoryInfo;
FILE android.app.ApplicationThreadProxy.dumpProvider(Ljava/io/FileDescriptor;Landroid/os/IBinder;[Ljava/lang/String;)V
FILE android.app.ApplicationThreadProxy.dumpService(Ljava/io/FileDescriptor;Landroid/os/IBinder;[Ljava/lang/String;)V
FILE android.app.BackStackRecord.dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.app.backup.BackupAgent.onRestoreFile(Landroid/os/ParcelFileDescriptor;JLjava/io/File;IJJ)V
FILE android.app.backup.FullBackup.restoreFile(Landroid/os/ParcelFileDescriptor;JIJJLjava/io/File;)V
FILE android.app.ContextImpl.openFileInput(Ljava/lang/String;)Ljava/io/FileInputStream;
FILE android.app.ContextImpl.openFileOutput(Ljava/lang/String;I)Ljava/io/FileOutputStream;
FILE android.app.DialogFragment.dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.app.DownloadManager.openDownloadedFile(J)Landroid/os/ParcelFileDescriptor;
FILE android.app.DownloadManager$Request.setDestinationInExternalFilesDir(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Landroid/app/DownloadManager$Request;
FILE android.app.Fragment.dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.app.FragmentManagerImpl.dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.app.LoaderManagerImpl.dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.app.LoaderManagerImpl$LoaderInfo.dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.app.Service.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.content.AsyncTaskLoader.dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.content.ContentProvider.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.content.ContentProviderProxy.openAssetFile(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/res/AssetFileDescriptor;
FILE android.content.ContentProviderProxy.openFile(Landroid/net/Uri;Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;
FILE android.content.ContentProviderProxy.openTypedAssetFile(Landroid/net/Uri;Ljava/lang/String;Landroid/os/Bundle;)Landroid/content/res/AssetFileDescriptor;
FILE android.content.ContentService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V android.permission.DUMP 
FILE android.content.ContentService.dump(Ljava/io/FileDescriptor;[Ljava/lang/String;)V android.permission.DUMP android.permission.BLUETOOTH android.permission.ACCESS_NETWORK_STATE android.permission.BACKUP 
FILE android.content.ContentService$ObserverNode.dumpLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[ILandroid/util/SparseIntArray;)V
FILE android.content.ContentService$ObserverNode$ObserverEntry.dumpLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/util/SparseIntArray;)V
FILE android.content.ContextWrapper.openFileInput(Ljava/lang/String;)Ljava/io/FileInputStream;
FILE android.content.ContextWrapper.openFileOutput(Ljava/lang/String;I)Ljava/io/FileOutputStream;
FILE android.content.CursorLoader.dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.content.Loader.dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.content.pm.RegisteredServicesCache.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;I)V
FILE android.content.SyncManager.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;)V
FILE android.inputmethodservice.AbstractInputMethodService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.inputmethodservice.IInputMethodWrapper.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.inputmethodservice.IInputMethodWrapper.executeMessage(Landroid/os/Message;)V
FILE android.inputmethodservice.InputMethodService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.media.AudioService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.media.MediaMetadataRetriever.setDataSource(Ljava/io/FileDescriptor;)V
FILE android.media.MediaMetadataRetriever.setDataSource(Ljava/lang/String;)V
FILE android.media.MediaPlayer.addTimedTextSource(Ljava/io/FileDescriptor;JJLjava/lang/String;)V
FILE android.media.MediaPlayer.addTimedTextSource(Ljava/io/FileDescriptor;Ljava/lang/String;)V
FILE android.media.MediaPlayer.setDataSource(Ljava/io/FileDescriptor;)V
FILE android.media.MediaRecorder.setAuxiliaryOutputFile(Ljava/io/FileDescriptor;)V
FILE android.media.MediaRecorder.setOutputFile(Ljava/io/FileDescriptor;)V
FILE android.media.videoeditor.OverlayFrame.generateOverlayWithRenderingMode(Landroid/media/videoeditor/MediaItem;Landroid/media/videoeditor/OverlayFrame;II)V
FILE android.net.LocalSocketImpl.access$600(Landroid/net/LocalSocketImpl;[BIILjava/io/FileDescriptor;)V
FILE android.net.LocalSocketImpl.access$700(Landroid/net/LocalSocketImpl;ILjava/io/FileDescriptor;)V
FILE android.net.LocalSocketImpl.bind(Landroid/net/LocalSocketAddress;)V
FILE android.net.LocalSocketImpl.setFileDescriptorsForSend([Ljava/io/FileDescriptor;)V
FILE android.net.LocalSocketImpl.setOption(ILjava/lang/Object;)V
FILE android.net.LocalSocket.setFileDescriptorsForSend([Ljava/io/FileDescriptor;)V
FILE android.net.wifi.p2p.WifiP2pService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.os.Binder.dumpAsync(Ljava/io/FileDescriptor;[Ljava/lang/String;)V
FILE android.os.Binder.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.os.Binder.dump(Ljava/io/FileDescriptor;[Ljava/lang/String;)V
FILE android.os.Debug.dumpHprofData(Ljava/lang/String;Ljava/io/FileDescriptor;)V
FILE android.os.Debug.dumpService(Ljava/lang/String;Ljava/io/FileDescriptor;[Ljava/lang/String;)Z
FILE android.os.Debug.startMethodTracing(Ljava/lang/String;Ljava/io/FileDescriptor;II)V
FILE android.os.DropBoxManager.addFile(Ljava/lang/String;Ljava/io/File;I)V
FILE android.os.FileUtils.copyToFile(Ljava/io/InputStream;Ljava/io/File;)Z
FILE android.os.FileUtils.readTextFile(Ljava/io/File;ILjava/lang/String;)Ljava/lang/String;
FILE android.os.FileUtils.stringToFile(Ljava/lang/String;Ljava/lang/String;)V android.permission.STOP_APP_SWITCHES 
FILE android.os.ParcelFileDescriptor.fromData([BLjava/lang/String;)Landroid/os/ParcelFileDescriptor;
FILE android.os.ParcelFileDescriptor.open(Ljava/io/File;I)Landroid/os/ParcelFileDescriptor;
FILE android.os.SELinux.restorecon(Ljava/io/File;)Z
FILE android.os.storage.StorageVolume.writeToParcel(Landroid/os/Parcel;I)V
FILE android.security.SystemKeyStore.generateNewKey(ILjava/lang/String;Ljava/lang/String;)[B
FILE android.server.search.Searchables.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.server.search.SearchManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.service.wallpaper.WallpaperService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.service.wallpaper.WallpaperService$Engine.dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.util.LocalLog.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.view.inputmethod.InputMethodManager.doDump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE android.view.WindowManagerGlobal.dumpGfxInfo(Ljava/io/FileDescriptor;)V
FILE com.android.browser.BrowserBackupAgent.onBackup(Landroid/os/ParcelFileDescriptor;Landroid/app/backup/BackupDataOutput;Landroid/os/ParcelFileDescriptor;)V
FILE com.android.camera.EffectsRecorder.setOutputFile(Ljava/io/FileDescriptor;)V
FILE com.android.contacts.interactions.TestLoaderManager.dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.email.provider.WidgetProvider$WidgetService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.email.service.AttachmentDownloadService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.email.widget.WidgetManager.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.inputmethod.latin.LatinIME.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.ApnContext.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.CallTracker.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.cdma.CdmaCallTracker.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.cdma.CdmaDataConnection.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.cdma.CdmaDataConnectionTracker.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.cdma.CDMALTEPhone.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.cdma.CdmaLteServiceStateTracker.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.cdma.CDMAPhone.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.cdma.CdmaServiceStateTracker.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.DataConnection.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.DataConnectionTracker.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.DebugService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.gsm.GsmCallTracker.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.gsm.GsmDataConnection.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.gsm.GsmDataConnectionTracker.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.gsm.GSMPhone.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.gsm.GsmServiceStateTracker.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.PhoneBase.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.PhoneSubInfo.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.PhoneSubInfoProxy.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.RIL.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.telephony.ServiceStateTracker.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.internal.util.StateMachine.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.launcher2.Launcher.dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.phone.TelephonyDebugService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.providers.contacts.ContactsProvider2.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.providers.downloads.DownloadService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.providers.media.MediaProvider.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.AlarmManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.am.ActiveServices.dumpService(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
FILE com.android.server.am.ActiveServices.dumpServicesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z
FILE com.android.server.am.ActivityManagerService$CpuBinder.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.am.ActivityManagerService$DbBinder.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.am.ActivityManagerService.dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z
FILE com.android.server.am.ActivityManagerService.dumpActivity(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
FILE com.android.server.am.ActivityManagerService.dumpApplicationMemoryUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;ZLjava/io/PrintWriter;Ljava/lang/StringBuilder;Ljava/lang/StringBuilder;)V
FILE com.android.server.am.ActivityManagerService.dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Z
FILE com.android.server.am.ActivityManagerService.dumpDbInfo(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.am.ActivityManagerService.dumpGraphicsHardwareUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.am.ActivityManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.am.ActivityManagerService.dumpOomLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZ)Z
FILE com.android.server.am.ActivityManagerService.dumpPendingIntentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Z
FILE com.android.server.am.ActivityManagerService.dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Z
FILE com.android.server.am.ActivityManagerService.dumpProcessesToGc(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z
FILE com.android.server.am.ActivityManagerService.dumpProvider(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
FILE com.android.server.am.ActivityManagerService.dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Z
FILE com.android.server.am.ActivityManagerService$GraphicsBinder.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.am.ActivityManagerService$MemBinder.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.am.BatteryStatsService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.am.BroadcastQueue.dumpLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;Z)Z
FILE com.android.server.am.ProviderMap.dumpProvider(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
FILE com.android.server.am.UsageStatsService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.AppWidgetService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.AppWidgetServiceImpl.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.AppWidgetServiceImpl.writeStateToFileLocked(Ljava/io/FileOutputStream;)Z
FILE com.android.server.BackupManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.BackupManagerService$PerformFullRestoreTask.restoreOneFile(Ljava/io/InputStream;[B)Z
FILE com.android.server.BatteryService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.CommonTimeManagementService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.ConnectivityService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.connectivity.Tethering.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.CountryDetectorService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.DevicePolicyManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.DeviceStorageMonitorService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.DiskStatsService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.display.DisplayManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.dreams.DreamManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.DropBoxManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.input.InputManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.InputMethodManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.location.GpsLocationProvider.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.location.LocationFudger.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.location.LocationProviderProxy.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.LocationManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.location.MockProvider.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.location.PassiveProvider.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.MountService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.NativeDaemonConnector.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.NativeDaemonConnector$ResponseQueue.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.net.NetworkPolicyManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.net.NetworkStatsService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V android.permission.ACCESS_NETWORK_STATE 
FILE com.android.server.NetworkManagementService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.NotificationManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.NsdService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.pm.PackageManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.pm.UserManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.power.PowerManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.SamplingProfilerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.StatusBarManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.TelephonyRegistry.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.TextServicesManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.ThrottleService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.UiModeManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.UpdateLockService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.usb.UsbDebuggingManager.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;)V
FILE com.android.server.usb.UsbDeviceManager.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;)V
FILE com.android.server.usb.UsbDeviceManager$UsbHandler.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;)V
FILE com.android.server.usb.UsbHostManager.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;)V
FILE com.android.server.usb.UsbService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.usb.UsbSettingsManager.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;)V
FILE com.android.server.WallpaperManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.WifiService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.server.wm.WindowManagerService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.soundrecorder.RemainingTimeCalculator.setFileSizeLimit(Ljava/io/File;J)V
FILE com.android.systemui.media.RingtonePlayer.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.systemui.power.PowerUI.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.systemui.screenshot.SaveImageInBackgroundTask.doInBackground([Lcom/android/systemui/screenshot/SaveImageInBackgroundData;)Lcom/android/systemui/screenshot/SaveImageInBackgroundData; android.permission.STOP_APP_SWITCHES 
FILE com.android.systemui.statusbar.phone.NavigationBarView.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.systemui.statusbar.phone.PhoneStatusBar.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.systemui.statusbar.policy.NetworkController.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.systemui.statusbar.tablet.TabletStatusBar.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.systemui.SystemUI.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.systemui.SystemUIService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
FILE com.android.uiautomator.core.Tracer.setOutputFilename(Ljava/lang/String;)V
FILE com.android.uiautomator.core.UiDevice.dumpWindowHierarchy(Ljava/lang/String;)V
FILE com.android.videoeditor.service.ApiService.onIntentProcessed(Landroid/content/Intent;Landroid/media/videoeditor/VideoEditor;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Exception;Z)V
FILE com.google.android.apps.lightcycle.util.MetadataUtils.writeMetadataIntoJpegFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
FILE dalvik.system.VMDebug.startMethodTracing(Ljava/lang/String;II)V
FILE dalvik.system.VMDebug.startMethodTracing(Ljava/lang/String;Ljava/io/FileDescriptor;II)V
FILE java.io.FileOutputStream.write([BII)V
FILE java.io.RandomAccessFile.setLength(J)V
FILE java.io.RandomAccessFile.write([BII)V
FILE java.lang.ProcessManager.exec([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;Z)Ljava/lang/Process;
FILE java.lang.SecurityManager.checkRead(Ljava/io/FileDescriptor;)V
FILE java.lang.SecurityManager.checkWrite(Ljava/io/FileDescriptor;)V
FILE java.net.DatagramSocket.setNetworkInterface(Ljava/net/NetworkInterface;)V
FILE java.net.PlainDatagramSocketImpl.bind(ILjava/net/InetAddress;)V
FILE java.net.PlainDatagramSocketImpl.send(Ljava/net/DatagramPacket;)V
FILE java.net.PlainDatagramSocketImpl.setOption(ILjava/lang/Object;)V
FILE java.net.PlainSocketImpl.bind(Ljava/net/InetAddress;I)V
FILE java.net.PlainSocketImpl.setOption(ILjava/lang/Object;)V
FILE java.nio.DatagramChannelImpl.send(Ljava/nio/ByteBuffer;Ljava/net/SocketAddress;)I
FILE java.nio.IoVec.doTransfer(Ljava/io/FileDescriptor;)I
FILE java.util.zip.Inflater.setFileInput(Ljava/io/FileDescriptor;JI)I
FILE libcore.io.BlockGuardOs.open(Ljava/lang/String;II)Ljava/io/FileDescriptor;
FILE libcore.io.BlockGuardOs.sendto(Ljava/io/FileDescriptor;[BIIILjava/net/InetAddress;I)I
FILE libcore.io.BlockGuardOs.sendto(Ljava/io/FileDescriptor;Ljava/nio/ByteBuffer;ILjava/net/InetAddress;I)I
FILE libcore.io.BlockGuardOs.write(Ljava/io/FileDescriptor;[BII)I
FILE libcore.io.BlockGuardOs.write(Ljava/io/FileDescriptor;Ljava/nio/ByteBuffer;)I
FILE libcore.io.BlockGuardOs.writev(Ljava/io/FileDescriptor;[Ljava/lang/Object;[I[I)I
FILE libcore.io.ForwardingOs.bind(Ljava/io/FileDescriptor;Ljava/net/InetAddress;I)V
FILE libcore.io.ForwardingOs.open(Ljava/lang/String;II)Ljava/io/FileDescriptor;
FILE libcore.io.ForwardingOs.sendfile(Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;Llibcore/util/MutableLong;J)J
FILE libcore.io.ForwardingOs.sendto(Ljava/io/FileDescriptor;[BIIILjava/net/InetAddress;I)I
FILE libcore.io.ForwardingOs.sendto(Ljava/io/FileDescriptor;Ljava/nio/ByteBuffer;ILjava/net/InetAddress;I)I
FILE libcore.io.ForwardingOs.setsockoptByte(Ljava/io/FileDescriptor;III)V
FILE libcore.io.ForwardingOs.setsockoptGroupReq(Ljava/io/FileDescriptor;IILlibcore/io/StructGroupReq;)V
FILE libcore.io.ForwardingOs.setsockoptIfreq(Ljava/io/FileDescriptor;IILjava/lang/String;)V
FILE libcore.io.ForwardingOs.setsockoptInt(Ljava/io/FileDescriptor;III)V
FILE libcore.io.ForwardingOs.setsockoptIpMreqn(Ljava/io/FileDescriptor;III)V
FILE libcore.io.ForwardingOs.setsockoptLinger(Ljava/io/FileDescriptor;IILlibcore/io/StructLinger;)V
FILE libcore.io.ForwardingOs.setsockoptTimeval(Ljava/io/FileDescriptor;IILlibcore/io/StructTimeval;)V
FILE libcore.io.ForwardingOs.write(Ljava/io/FileDescriptor;[BII)I
FILE libcore.io.ForwardingOs.write(Ljava/io/FileDescriptor;Ljava/nio/ByteBuffer;)I
FILE libcore.io.ForwardingOs.writev(Ljava/io/FileDescriptor;[Ljava/lang/Object;[I[I)I
FILE libcore.io.IoBridge.bind(Ljava/io/FileDescriptor;Ljava/net/InetAddress;I)V
FILE libcore.io.IoBridge.sendto(Ljava/io/FileDescriptor;[BIIILjava/net/InetAddress;I)I
FILE libcore.io.IoBridge.sendto(Ljava/io/FileDescriptor;Ljava/nio/ByteBuffer;ILjava/net/InetAddress;I)I
FILE libcore.io.IoBridge.setSocketOption(Ljava/io/FileDescriptor;ILjava/lang/Object;)V
FILE libcore.io.IoBridge.write(Ljava/io/FileDescriptor;[BII)V
FILE libcore.io.IoUtils.setBlocking(Ljava/io/FileDescriptor;Z)V
FILE libcore.io.Posix.sendto(Ljava/io/FileDescriptor;[BIIILjava/net/InetAddress;I)I
FILE libcore.io.Posix.sendto(Ljava/io/FileDescriptor;Ljava/nio/ByteBuffer;ILjava/net/InetAddress;I)I
FILE libcore.io.Posix.write(Ljava/io/FileDescriptor;[BII)I
FILE libcore.io.Posix.write(Ljava/io/FileDescriptor;Ljava/nio/ByteBuffer;)I
LOCATION_INFORMATION android.location.ILocationManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z android.permission.ACCESS_LOCATION_EXTRA_COMMANDS android.permission.ACCESS_FINE_LOCATION android.permission.ACCESS_COARSE_LOCATION android.permission.ACCESS_MOCK_LOCATION 
LOCATION_INFORMATION android.location.ILocationManager$Stub$Proxy.addGpsStatusListener(Landroid/location/IGpsStatusListener;)Z
LOCATION_INFORMATION android.location.ILocationManager$Stub$Proxy.addTestProvider(Ljava/lang/String;Lcom/android/internal/location/ProviderProperties;)V
LOCATION_INFORMATION android.location.ILocationManager$Stub$Proxy.clearTestProviderEnabled(Ljava/lang/String;)V
LOCATION_INFORMATION android.location.ILocationManager$Stub$Proxy.clearTestProviderLocation(Ljava/lang/String;)V
LOCATION_INFORMATION android.location.ILocationManager$Stub$Proxy.clearTestProviderStatus(Ljava/lang/String;)V
LOCATION_INFORMATION android.location.ILocationManager$Stub$Proxy.isProviderEnabled(Ljava/lang/String;)Z
LOCATION_INFORMATION android.location.ILocationManager$Stub$Proxy.locationCallbackFinished(Landroid/location/ILocationListener;)V
LOCATION_INFORMATION android.location.ILocationManager$Stub$Proxy.providerMeetsCriteria(Ljava/lang/String;Landroid/location/Criteria;)Z
LOCATION_INFORMATION android.location.ILocationManager$Stub$Proxy.removeGeofence(Landroid/location/Geofence;Landroid/app/PendingIntent;Ljava/lang/String;)V
LOCATION_INFORMATION android.location.ILocationManager$Stub$Proxy.removeGpsStatusListener(Landroid/location/IGpsStatusListener;)V
LOCATION_INFORMATION android.location.ILocationManager$Stub$Proxy.removeTestProvider(Ljava/lang/String;)V
LOCATION_INFORMATION android.location.ILocationManager$Stub$Proxy.removeUpdates(Landroid/location/ILocationListener;Landroid/app/PendingIntent;Ljava/lang/String;)V
LOCATION_INFORMATION android.location.ILocationManager$Stub$Proxy.requestGeofence(Landroid/location/LocationRequest;Landroid/location/Geofence;Landroid/app/PendingIntent;Ljava/lang/String;)V
LOCATION_INFORMATION android.location.ILocationManager$Stub$Proxy.requestLocationUpdates(Landroid/location/LocationRequest;Landroid/location/ILocationListener;Landroid/app/PendingIntent;Ljava/lang/String;)V
LOCATION_INFORMATION android.location.ILocationManager$Stub$Proxy.sendExtraCommand(Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)Z android.permission.ACCESS_LOCATION_EXTRA_COMMANDS android.permission.ACCESS_FINE_LOCATION android.permission.ACCESS_COARSE_LOCATION 
LOCATION_INFORMATION android.location.ILocationManager$Stub$Proxy.sendNiResponse(II)Z
LOCATION_INFORMATION android.location.ILocationManager$Stub$Proxy.setTestProviderEnabled(Ljava/lang/String;Z)V
LOCATION_INFORMATION android.location.ILocationManager$Stub$Proxy.setTestProviderLocation(Ljava/lang/String;Landroid/location/Location;)V
LOCATION_INFORMATION android.location.ILocationManager$Stub$Proxy.setTestProviderStatus(Ljava/lang/String;ILandroid/os/Bundle;J)V
LOCATION_INFORMATION android.location.LocationManager.addGpsStatusListener(Landroid/location/GpsStatus$Listener;)Z
LOCATION_INFORMATION android.location.LocationManager.addNmeaListener(Landroid/location/GpsStatus$NmeaListener;)Z
LOCATION_INFORMATION android.location.LocationManager.sendExtraCommand(Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)Z
LOCATION_INFORMATION android.location.LocationManager.sendNiResponse(II)Z
LOCATION_INFORMATION android.location.LocationManager.setTestProviderEnabled(Ljava/lang/String;Z)V
LOCATION_INFORMATION android.location.LocationManager.setTestProviderLocation(Ljava/lang/String;Landroid/location/Location;)V
LOCATION_INFORMATION android.location.LocationManager.setTestProviderStatus(Ljava/lang/String;ILandroid/os/Bundle;J)V
LOCATION_INFORMATION com.android.server.LocationManagerService.addTestProvider(Ljava/lang/String;Lcom/android/internal/location/ProviderProperties;)V
LOCATION_INFORMATION com.android.server.LocationManagerService.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z android.permission.ACCESS_LOCATION_EXTRA_COMMANDS android.permission.ACCESS_FINE_LOCATION android.permission.ACCESS_COARSE_LOCATION android.permission.ACCESS_MOCK_LOCATION 
LOG android.accessibilityservice.AccessibilityService.performGlobalAction(I)Z
LOG android.accounts.AbstractAccountAuthenticator$Transport.getAuthTokenLabel(Landroid/accounts/IAccountAuthenticatorResponse;Ljava/lang/String;)V
LOG android.animation.PropertyValuesHolder$FloatPropertyValuesHolder.setAnimatedValue(Ljava/lang/Object;)V
LOG android.animation.PropertyValuesHolder$IntPropertyValuesHolder.setAnimatedValue(Ljava/lang/Object;)V
LOG android.animation.PropertyValuesHolder.setAnimatedValue(Ljava/lang/Object;)V
LOG android.animation.PropertyValuesHolder.setupSetterAndGetter(Ljava/lang/Object;)V
LOG android.app.admin.DevicePolicyManager.setActiveAdmin(Landroid/content/ComponentName;Z)V
LOG android.app.admin.DevicePolicyManager.setActivePasswordState(IIIIIIIII)V
LOG android.app.admin.DevicePolicyManager.setCameraDisabled(Landroid/content/ComponentName;Z)V
LOG android.app.admin.DevicePolicyManager.setKeyguardDisabledFeatures(Landroid/content/ComponentName;I)V
LOG android.app.admin.DevicePolicyManager.setMaximumFailedPasswordsForWipe(Landroid/content/ComponentName;I)V
LOG android.app.admin.DevicePolicyManager.setMaximumTimeToLock(Landroid/content/ComponentName;J)V
LOG android.app.admin.DevicePolicyManager.setPasswordExpirationTimeout(Landroid/content/ComponentName;J)V
LOG android.app.admin.DevicePolicyManager.setPasswordHistoryLength(Landroid/content/ComponentName;I)V
LOG android.app.admin.DevicePolicyManager.setPasswordMinimumLength(Landroid/content/ComponentName;I)V
LOG android.app.admin.DevicePolicyManager.setPasswordMinimumLetters(Landroid/content/ComponentName;I)V
LOG android.app.admin.DevicePolicyManager.setPasswordMinimumLowerCase(Landroid/content/ComponentName;I)V
LOG android.app.admin.DevicePolicyManager.setPasswordMinimumNonLetter(Landroid/content/ComponentName;I)V
LOG android.app.admin.DevicePolicyManager.setPasswordMinimumNumeric(Landroid/content/ComponentName;I)V
LOG android.app.admin.DevicePolicyManager.setPasswordMinimumSymbols(Landroid/content/ComponentName;I)V
LOG android.app.admin.DevicePolicyManager.setPasswordMinimumUpperCase(Landroid/content/ComponentName;I)V
LOG android.app.admin.DevicePolicyManager.setPasswordQuality(Landroid/content/ComponentName;I)V
LOG android.app.admin.DevicePolicyManager.setStorageEncryption(Landroid/content/ComponentName;Z)I
LOG android.app.backup.BackupHelperDispatcher.performRestore(Landroid/app/backup/BackupDataInput;ILandroid/os/ParcelFileDescriptor;)V
LOG android.app.backup.RestoreSession.restorePackage(Ljava/lang/String;Landroid/app/backup/RestoreObserver;)I
LOG android.app.backup.RestoreSession.restoreSome(JLandroid/app/backup/RestoreObserver;[Ljava/lang/String;)I
LOG android.app.FragmentManagerImpl.moveToState(Landroid/app/Fragment;IIIZ)V
LOG android.app.FragmentManagerImpl.setBackStackIndex(ILandroid/app/BackStackRecord;)V
LOG android.app.LocalActivityManager.dispatchCreate(Landroid/os/Bundle;)V
LOG android.app.NotificationManager.notifyAsUser(Ljava/lang/String;ILandroid/app/Notification;Landroid/os/UserHandle;)V
LOG android.app.NotificationManager.notify(Ljava/lang/String;ILandroid/app/Notification;)V
LOG android.app.SearchManager.startGlobalSearch(Ljava/lang/String;ZLandroid/os/Bundle;Landroid/graphics/Rect;)V
LOG android.app.Service.setForeground(Z)V
LOG android.app.UiModeManager.enableCarMode(I)V
LOG android.app.UiModeManager.setNightMode(I)V
LOG android.app.WallpaperManager.setBitmap(Landroid/graphics/Bitmap;)V
LOG android.app.WallpaperManager.setResource(I)V
LOG android.app.WallpaperManager.setStream(Ljava/io/InputStream;)V
LOG android.filterfw.core.Filter.addFieldPort(Ljava/lang/String;Ljava/lang/reflect/Field;ZZ)V
LOG android.filterfw.core.Filter.addMaskedInputPort(Ljava/lang/String;Landroid/filterfw/core/FrameFormat;)V
LOG android.filterfw.core.Filter.addOutputBasedOnInput(Ljava/lang/String;Ljava/lang/String;)V
LOG android.filterfw.core.Filter.addOutputPort(Ljava/lang/String;Landroid/filterfw/core/FrameFormat;)V
LOG android.filterfw.core.Filter.addProgramPort(Ljava/lang/String;Ljava/lang/String;Ljava/lang/reflect/Field;Ljava/lang/Class;Z)V
LOG android.filterpacks.videosink.MediaEncoderFilter.open(Landroid/filterfw/core/FilterContext;)V android.permission.CAMERA android.permission.RECORD_AUDIO 
LOG android.hardware.Camera$Parameters.set(Ljava/lang/String;Ljava/lang/String;)V
LOG android.hardware.input.InputManager.setCurrentKeyboardLayoutForInputDevice(Ljava/lang/String;Ljava/lang/String;)V
LOG android.hardware.SerialManager.openSerialPort(Ljava/lang/String;I)Landroid/hardware/SerialPort;
LOG android.hardware.usb.UsbManager.setCurrentFunction(Ljava/lang/String;Z)V
LOG android.hardware.usb.UsbManager.setMassStorageBackingFile(Ljava/lang/String;)V
LOG android.media.MediaPlayer.setSurface(Landroid/view/Surface;)V
LOG android.media.MediaRecorder.setAuxiliaryOutputFile(Ljava/lang/String;)V
LOG android.media.MediaScanner.scanMtpFile(Ljava/lang/String;Ljava/lang/String;II)V
LOG android.media.MiniThumbFile.saveMiniThumbToFile([BJJ)V
LOG android.media.RemoteControlClient$MetadataEditor.putLong(IJ)Landroid/media/RemoteControlClient$MetadataEditor;
LOG android.media.RemoteControlClient$MetadataEditor.putString(ILjava/lang/String;)Landroid/media/RemoteControlClient$MetadataEditor;
LOG android.media.RemoteControlClient.setPlaybackInformation(II)V
LOG android.net.DhcpStateMachine$DefaultState.processMessage(Landroid/os/Message;)Z
LOG android.net.DhcpStateMachine$RunningState.processMessage(Landroid/os/Message;)Z
LOG android.net.DhcpStateMachine$WaitBeforeRenewalState.processMessage(Landroid/os/Message;)Z
LOG android.net.EthernetDataTracker.setPolicyDataEnable(Z)V
LOG android.net.EthernetDataTracker.setUserDataEnable(Z)V
LOG android.net.sip.SipAudioCall.sendDtmf(ILandroid/os/Message;)V
LOG android.os.StrictMode$AndroidBlockGuardPolicy.handleViolation(Landroid/os/StrictMode$ViolationInfo;)V
LOG android.os.StrictMode.onVmPolicyViolation(Ljava/lang/String;Ljava/lang/Throwable;)V
LOG android.os.UserManager.setGuestEnabled(Z)V
LOG android.os.UserManager.setUserIcon(ILandroid/graphics/Bitmap;)V
LOG android.os.UserManager.setUserName(ILjava/lang/String;)V
LOG android.provider.Browser.updateVisitedHistory(Landroid/content/ContentResolver;Ljava/lang/String;Z)V
LOG android.provider.DrmStore.addDrmFile(Landroid/content/ContentResolver;Ljava/io/FileInputStream;Ljava/lang/String;)Landroid/content/Intent;
LOG android.renderscript.Program$BaseProgramBuilder.setShader(Landroid/content/res/Resources;I)Landroid/renderscript/Program$BaseProgramBuilder;
LOG android.security.Credentials.install(Landroid/content/Context;Ljava/lang/String;[B)V
LOG android.security.Credentials.install(Landroid/content/Context;Ljava/security/KeyPair;)V
LOG android.speech.SpeechRecognizer.startListening(Landroid/content/Intent;)V
LOG android.speech.tts.FileSynthesisCallback.audioAvailable([BII)I
LOG android.speech.tts.TextToSpeechService$CallbackMap.dispatchOnDone(Ljava/lang/Object;Ljava/lang/String;)V
LOG android.speech.tts.TextToSpeechService$CallbackMap.dispatchOnError(Ljava/lang/Object;Ljava/lang/String;)V
LOG android.speech.tts.TextToSpeechService$CallbackMap.dispatchOnStart(Ljava/lang/Object;Ljava/lang/String;)V
LOG android.support.v4.content.LocalBroadcastManager.sendBroadcast(Landroid/content/Intent;)Z
LOG android.test.InstrumentationTestCase.sendKeys(Ljava/lang/String;)V
LOG android.util.Log.d(Ljava/lang/String;Ljava/lang/String;)I
LOG android.util.Log.d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
LOG android.util.Log.e(Ljava/lang/String;Ljava/lang/String;)I android.permission.STOP_APP_SWITCHES 
LOG android.util.Log.e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
LOG android.util.Log.i(Ljava/lang/String;Ljava/lang/String;)I
LOG android.util.Log.i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
LOG android.util.LogPrinter.println(Ljava/lang/String;)V
LOG android.util.Log.println(ILjava/lang/String;Ljava/lang/String;)I android.permission.STOP_APP_SWITCHES 
LOG android.util.Log.v(Ljava/lang/String;Ljava/lang/String;)I android.permission.STOP_APP_SWITCHES 
LOG android.util.Log.v(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
LOG android.util.Log.w(Ljava/lang/String;Ljava/lang/String;)I
LOG android.util.Log.w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
LOG android.util.Log.w(Ljava/lang/String;Ljava/lang/Throwable;)I
LOG android.util.Log.wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
LOG android.util.Slog.d(Ljava/lang/String;Ljava/lang/String;)I
LOG android.util.Slog.d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
LOG android.util.Slog.e(Ljava/lang/String;Ljava/lang/String;)I
LOG android.util.Slog.e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
LOG android.util.Slog.i(Ljava/lang/String;Ljava/lang/String;)I
LOG android.util.Slog.i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I android.permission.STOP_APP_SWITCHES 
LOG android.util.Slog.println(ILjava/lang/String;Ljava/lang/String;)I
LOG android.util.Slog.v(Ljava/lang/String;Ljava/lang/String;)I
LOG android.util.Slog.v(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I android.permission.STOP_APP_SWITCHES 
LOG android.util.Slog.w(Ljava/lang/String;Ljava/lang/String;)I
LOG android.util.Slog.w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
LOG android.util.Slog.w(Ljava/lang/String;Ljava/lang/Throwable;)I
LOG android.view.accessibility.AccessibilityManager.sendAccessibilityEvent(Landroid/view/accessibility/AccessibilityEvent;)V
LOG android.view.inputmethod.InputMethodManager.sendAppPrivateCommand(Landroid/view/View;Ljava/lang/String;Landroid/os/Bundle;)V
LOG android.view.inputmethod.InputMethodManager.setAdditionalInputMethodSubtypes(Ljava/lang/String;[Landroid/view/inputmethod/InputMethodSubtype;)V
LOG android.view.inputmethod.InputMethodManager.setCurrentInputMethodSubtype(Landroid/view/inputmethod/InputMethodSubtype;)Z
LOG android.view.inputmethod.InputMethodManager.updateCursor(Landroid/view/View;IIII)V
LOG android.view.inputmethod.InputMethodManager.updateSelection(Landroid/view/View;IIII)V
LOG android.view.ViewRootImpl$ViewRootHandler.handleMessage(Landroid/os/Message;)V
LOG android.view.View.setHasTransientState(Z)V
LOG android.view.View.startDrag(Landroid/content/ClipData;Landroid/view/View$DragShadowBuilder;Ljava/lang/Object;I)Z
LOG android.webkit.CookieManagerClassic.setCookie(Ljava/lang/String;Ljava/lang/String;Z)V
LOG android.webkit.WebViewDatabaseClassic.setFormData(Ljava/lang/String;Ljava/util/HashMap;)V
LOG android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection.bind(Landroid/content/Context;ILandroid/content/Intent;)V
LOG android.widget.RemoteViews$SetRemoteViewsAdapterIntent.apply(Landroid/view/View;Landroid/view/ViewGroup;Landroid/widget/RemoteViews$OnClickHandler;)V
LOG android.widget.Spinner$DialogPopup.setBackgroundDrawable(Landroid/graphics/drawable/Drawable;)V
LOG android.widget.Spinner$DialogPopup.setHorizontalOffset(I)V
LOG android.widget.Spinner$DialogPopup.setVerticalOffset(I)V
LOG android.widget.Spinner.setPopupBackgroundDrawable(Landroid/graphics/drawable/Drawable;)V
LOG com.android.browser.BrowserBackupAgent.onRestore(Landroid/app/backup/BackupDataInput;ILandroid/os/ParcelFileDescriptor;)V
LOG com.android.browser.PhoneUi.setActiveTab(Lcom/android/browser/Tab;)V
LOG com.android.browser.PreloadedTabControl.setQuery(Ljava/lang/String;)V
LOG com.android.browser.search.DefaultSearchEngine.startSearch(Landroid/content/Context;Ljava/lang/String;Landroid/os/Bundle;Ljava/lang/String;)V
LOG com.android.browser.search.OpenSearchSearchEngine.startSearch(Landroid/content/Context;Ljava/lang/String;Landroid/os/Bundle;Ljava/lang/String;)V
LOG com.android.browser.XLargeUi.setActiveTab(Lcom/android/browser/Tab;)V
LOG com.android.camera.CameraSettings.initialCameraPictureSize(Landroid/content/Context;Landroid/hardware/Camera$Parameters;)V
LOG com.android.camera.Storage.updateImage(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;Landroid/location/Location;I[BII)Z
LOG com.android.camera.Storage.writeFile(Ljava/lang/String;[B)V
LOG com.android.camera.Util.setGpsParameters(Landroid/hardware/Camera$Parameters;Landroid/location/Location;)V
LOG com.android.deskclock.timer.TimerReceiver.onReceive(Landroid/content/Context;Landroid/content/Intent;)V
LOG com.android.exchange.adapter.CalendarSyncAdapter.sendLocalChanges(Lcom/android/exchange/adapter/Serializer;)Z
LOG com.android.exchange.adapter.Serializer.data(ILjava/lang/String;)Lcom/android/exchange/adapter/Serializer;
LOG com.android.exchange.adapter.Serializer.text(Ljava/lang/String;)Lcom/android/exchange/adapter/Serializer;
LOG com.android.exchange.EasSyncService.setupProtocolVersion(Lcom/android/exchange/EasSyncService;Lorg/apache/http/Header;)V
LOG com.android.exchange.provider.MailboxUtilities.checkMailboxConsistency(Landroid/content/Context;J)V
LOG com.android.exchange.provider.MailboxUtilities.setFlagsAndChildrensParentKey(Landroid/content/Context;Landroid/database/Cursor;Ljava/lang/String;)V
LOG com.android.exchange.utility.CalendarUtilities.createMessageForEntity(Landroid/content/Context;Landroid/content/Entity;ILjava/lang/String;Lcom/android/emailcommon/provider/Account;Ljava/lang/String;)Lcom/android/emailcommon/provider/EmailContent$Message;
LOG com.android.gallery3d.data.MtpContext.copyFile(Ljava/lang/String;Landroid/mtp/MtpObjectInfo;)Z
LOG com.android.gallery3d.filtershow.FilterShowActivity.onActivityResult(IILandroid/content/Intent;)V
LOG com.android.gallery3d.filtershow.tools.SaveCopyTask.doInBackground([Lcom/android/gallery3d/filtershow/presets/ImagePreset;)Landroid/net/Uri;
LOG com.android.gallery3d.filtershow.tools.SaveCopyTask.saveBitmap(Landroid/graphics/Bitmap;Ljava/io/File;Ljava/lang/Object;)V
LOG com.android.gallery3d.util.LightCycleHelper$PanoramaViewHelper.onPanoramaInfoLoaded(Lcom/google/android/gms/common/ConnectionResult;ILandroid/content/Intent;)V
LOG com.android.inputmethod.keyboard.MainKeyboardView.processMotionEvent(Landroid/view/MotionEvent;)Z
LOG com.android.inputmethod.latin.ExpandableBinaryDictionary.setRequiresReload(Z)V
LOG com.android.inputmethod.latin.LatinImeLogger.logOnManualSuggestion(Ljava/lang/String;Ljava/lang/String;ILcom/android/inputmethod/latin/SuggestedWords;)V
LOG com.android.inputmethod.latin.spellcheck.AndroidWordLevelSpellCheckerSession.onGetSuggestions(Landroid/view/textservice/TextInfo;Ljava/lang/String;I)Landroid/view/textservice/SuggestionsInfo;
LOG com.android.inputmethod.latin.UserHistoryDictIOUtils.writeDictionaryBinary(Ljava/io/OutputStream;Lcom/android/inputmethod/latin/UserHistoryDictIOUtils$BigramDictionaryInterface;Lcom/android/inputmethod/latin/UserHistoryDictionaryBigramList;Lcom/android/inputmethod/latin/makedict/FormatSpec$FormatOptions;)V
LOG com.android.internal.backup.LocalTransport.performBackup(Landroid/content/pm/PackageInfo;Landroid/os/ParcelFileDescriptor;)I
LOG com.android.internal.logging.AndroidHandler.publish(Ljava/util/logging/Logger;Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;)V
LOG com.android.internal.logging.AndroidHandler.publish(Ljava/util/logging/LogRecord;)V
LOG com.android.internal.os.AndroidPrintStream.log(Ljava/lang/String;)V
LOG com.android.internal.policy.impl.keyguard.KeyguardActivityLauncher.launchActivityWithAnimation(Landroid/content/Intent;ZLandroid/os/Bundle;Landroid/os/Handler;Ljava/lang/Runnable;)V
LOG com.android.internal.widget.LockPatternUtils.saveLockPassword(Ljava/lang/String;IZI)V
LOG com.android.internal.widget.PasswordEntryKeyboardHelper.setVibratePattern(I)V
LOG com.android.launcher2.LauncherModel.modifyItemInDatabase(Landroid/content/Context;Lcom/android/launcher2/ItemInfo;JIIIII)V
LOG com.android.launcher2.LauncherModel.moveItemInDatabase(Landroid/content/Context;Lcom/android/launcher2/ItemInfo;JIII)V
LOG com.android.launcher2.Launcher.openFolder(Lcom/android/launcher2/FolderIcon;)V
LOG com.android.launcher2.LauncherProvider$DatabaseHelper.onUpgrade(Landroid/database/sqlite/SQLiteDatabase;II)V
LOG com.android.launcher2.Launcher.startActivity(Landroid/view/View;Landroid/content/Intent;Ljava/lang/Object;)Z
LOG com.android.launcher2.Launcher.startActivitySafely(Landroid/view/View;Landroid/content/Intent;Ljava/lang/Object;)Z
LOG com.android.launcher2.Launcher.startGlobalSearch(Ljava/lang/String;ZLandroid/os/Bundle;Landroid/graphics/Rect;)V
LOG com.android.musicfx.ControlPanelEffect.initEffectsPreferences(Landroid/content/Context;Ljava/lang/String;I)V
LOG com.android.musicfx.ControlPanelEffect.openSession(Landroid/content/Context;Ljava/lang/String;I)V
LOG com.android.musicfx.ControlPanelEffect.setParameterBoolean(Landroid/content/Context;Ljava/lang/String;ILcom/android/musicfx/ControlPanelEffect$Key;Z)V
LOG com.android.musicfx.ControlPanelEffect.setParameterInt(Landroid/content/Context;Ljava/lang/String;ILcom/android/musicfx/ControlPanelEffect$Key;II)V
LOG com.android.phone.CallFeaturesSetting.onPreferenceChange(Landroid/preference/Preference;Ljava/lang/Object;)Z
LOG com.android.phone.OtaUtils.maybeDoOtaCall(Landroid/content/Context;Landroid/os/Handler;I)Z
LOG com.android.phone.OtaUtils.setupOtaspCall(Landroid/content/Intent;)V
LOG com.android.phone.PhoneGlobals$PhoneAppBroadcastReceiver.onReceive(Landroid/content/Context;Landroid/content/Intent;)V
LOG com.android.phone.sip.SipEditor$PreferenceKey.setValue(Ljava/lang/String;)V
LOG com.android.providers.calendar.CalendarAlarmManager.scheduleNextAlarm(Z)V
LOG com.android.providers.calendar.CalendarCache.writeData(Ljava/lang/String;Ljava/lang/String;)V
LOG com.android.providers.calendar.CalendarCache.writeTimezoneInstances(Ljava/lang/String;)V
LOG com.android.providers.calendar.CalendarCache.writeTimezoneInstancesPrevious(Ljava/lang/String;)V
LOG com.android.providers.calendar.CalendarInstancesHelper.expandInstanceRangeLocked(JJLjava/lang/String;)V
LOG com.android.providers.calendar.CalendarInstancesHelper.performInstanceExpansion(JJLjava/lang/String;Landroid/database/Cursor;)V
LOG com.android.providers.calendar.CalendarInstancesHelper.updateInstancesLocked(Landroid/content/ContentValues;JZLandroid/database/sqlite/SQLiteDatabase;)V
LOG com.android.providers.calendar.CalendarProvider2.acquireInstanceRangeLocked(JJZZLjava/lang/String;Z)V
LOG com.android.providers.calendar.CalendarProvider2.insertInTransaction(Landroid/net/Uri;Landroid/content/ContentValues;Z)Landroid/net/Uri;
LOG com.android.providers.calendar.CalendarProvider2.updateInTransaction(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;Z)I
LOG com.android.providers.downloads.DownloadProvider.insert(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;
LOG com.android.providers.downloads.DownloadProvider.update(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
LOG com.android.providers.downloads.DownloadReceiver.onReceive(Landroid/content/Context;Landroid/content/Intent;)V
LOG com.android.providers.media.MediaProvider.update(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
LOG com.android.providers.media.MediaThumbRequest.updateDatabase(Landroid/graphics/Bitmap;)Landroid/net/Uri;
LOG com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState.processMessage(Landroid/os/Message;)Z
LOG com.android.server.connectivity.Tethering$TetherInterfaceSM$StartingState.processMessage(Landroid/os/Message;)Z
LOG com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState.processMessage(Landroid/os/Message;)Z
LOG com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState.processMessage(Landroid/os/Message;)Z
LOG com.android.server.location.LocationProviderProxy.sendExtraCommand(Ljava/lang/String;Landroid/os/Bundle;)Z
LOG com.android.server.location.MockProvider.setLocation(Landroid/location/Location;)V
LOG com.android.server.pm.Settings.disableSystemPackageLPw(Ljava/lang/String;)Z
LOG com.android.server.pm.Settings.enableSystemPackageLPw(Ljava/lang/String;)Lcom/android/server/pm/PackageSetting;
LOG com.android.server.sip.SipService$AutoRegistrationProcess.setListener(Landroid/net/sip/ISipSessionListener;)V
LOG com.android.server.sip.SipSessionGroup$SipSessionCallReceiverImpl.process(Ljava/util/EventObject;)Z
LOG com.android.systemui.statusbar.phone.PhoneStatusBar.setLightsOn(Z)V
LOG com.android.systemui.usb.UsbResolverActivity.onIntentSelected(Landroid/content/pm/ResolveInfo;Landroid/content/Intent;Z)V
LOG com.android.uiautomator.core.InteractionController.sendKey(II)Z
LOG com.android.uiautomator.core.InteractionController.sendText(Ljava/lang/String;)Z
LOG com.android.uiautomator.testrunner.UiAutomatorTestRunner$2.uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V
LOG com.android.videoeditor.KenBurnsActivity.onCreate(Landroid/os/Bundle;)V
LOG com.android.videoeditor.widgets.AudioTrackLinearLayout.setWaveformExtractionComplete(Ljava/lang/String;)V
LOG com.android.videoeditor.widgets.AudioTrackLinearLayout.setWaveformExtractionProgress(Ljava/lang/String;I)V
LOG com.android.videoeditor.widgets.MediaItemView.setBitmap(Landroid/graphics/Bitmap;II)Z
LOG com.android.videoeditor.widgets.MediaLinearLayout.addTransition(Lcom/android/videoeditor/service/MovieTransition;Ljava/lang/String;)Landroid/view/View;
LOG com.google.android.apps.lightcycle.storage.LocalFileStorageManager.setPanoramaDestination(Ljava/lang/String;)Z
LOG com.google.android.apps.lightcycle.util.FileUtil.storeFile(Ljava/io/InputStream;Ljava/io/File;)V
LOG com.google.android.apps.lightcycle.xmp.XmpUtil.writeXMPMeta(Ljava/lang/String;Lcom/adobe/xmp/XMPMeta;)Z
NETWORK android.net.BaseNetworkStateTracker.setDependencyMet(Z)V
NETWORK android.net.BaseNetworkStateTracker.setPolicyDataEnable(Z)V
NETWORK android.net.BaseNetworkStateTracker.setRadio(Z)Z
NETWORK android.net.BaseNetworkStateTracker.setTeardownRequested(Z)V
NETWORK android.net.BaseNetworkStateTracker.setUserDataEnable(Z)V
NETWORK android.net.CaptivePortalTracker$ActiveNetworkState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.CaptivePortalTracker$DefaultState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.CaptivePortalTracker$DelayedCaptiveCheckState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.CaptivePortalTracker$NoActiveNetworkState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.ConnectivityManager.setBackgroundDataSetting(Z)V
NETWORK android.net.ConnectivityManager.setDataDependency(IZ)V
NETWORK android.net.ConnectivityManager.setGlobalProxy(Landroid/net/ProxyProperties;)V
NETWORK android.net.ConnectivityManager.setMobileDataEnabled(Z)V
NETWORK android.net.ConnectivityManager.setNetworkPreference(I)V
NETWORK android.net.ConnectivityManager.setRadio(IZ)Z
NETWORK android.net.ConnectivityManager.setRadios(Z)Z
NETWORK android.net.ConnectivityManager.setUsbTethering(Z)I
NETWORK android.net.ConnectivityManager.startUsingNetworkFeature(ILjava/lang/String;)I
NETWORK android.net.DhcpStateMachine$StoppedState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.DhcpStateMachine$WaitBeforeStartState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.DummyDataStateTracker.setDependencyMet(Z)V
NETWORK android.net.DummyDataStateTracker.setPolicyDataEnable(Z)V
NETWORK android.net.DummyDataStateTracker.setRadio(Z)Z
NETWORK android.net.DummyDataStateTracker.setUserDataEnable(Z)V
NETWORK android.net.EthernetDataTracker.setDependencyMet(Z)V
NETWORK android.net.EthernetDataTracker.setRadio(Z)Z
NETWORK android.net.EthernetDataTracker.setTeardownRequested(Z)V
NETWORK android.net.http.AndroidHttpClientConnection.sendRequestHeader(Lorg/apache/http/HttpRequest;)V
NETWORK android.net.http.AndroidHttpClientConnection.setSocketTimeout(I)V
NETWORK android.net.http.AndroidHttpClient$LoggingConfiguration.access$600(Landroid/net/http/AndroidHttpClient$LoggingConfiguration;Ljava/lang/String;)V
NETWORK android.net.http.Headers.setAcceptRanges(Ljava/lang/String;)V
NETWORK android.net.http.Headers.setCacheControl(Ljava/lang/String;)V
NETWORK android.net.http.Headers.setContentDisposition(Ljava/lang/String;)V
NETWORK android.net.http.Headers.setContentEncoding(Ljava/lang/String;)V
NETWORK android.net.http.Headers.setContentType(Ljava/lang/String;)V
NETWORK android.net.http.Headers.setEtag(Ljava/lang/String;)V
NETWORK android.net.http.Headers.setExpires(Ljava/lang/String;)V
NETWORK android.net.http.Headers.setLastModified(Ljava/lang/String;)V
NETWORK android.net.http.Headers.setLocation(Ljava/lang/String;)V
NETWORK android.net.http.Headers.setProxyAuthenticate(Ljava/lang/String;)V
NETWORK android.net.http.Headers.setWwwAuthenticate(Ljava/lang/String;)V
NETWORK android.net.http.Headers.setXPermittedCrossDomainPolicies(Ljava/lang/String;)V
NETWORK android.net.http.HttpsConnection.openConnection(Landroid/net/http/Request;)Landroid/net/http/AndroidHttpClientConnection;
NETWORK android.net.http.RequestHandle.setupBasicAuthResponse(ZLjava/lang/String;Ljava/lang/String;)V
NETWORK android.net.http.RequestHandle.setupDigestAuthResponse(ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NETWORK android.net.http.RequestHandle.setupRedirect(Ljava/lang/String;ILjava/util/Map;)Z
NETWORK android.net.http.RequestQueue.queueRequest(Landroid/net/http/Request;Z)V
NETWORK android.net.http.SslCertificate.saveState(Landroid/net/http/SslCertificate;)Landroid/os/Bundle;
NETWORK android.net.IConnectivityManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NETWORK android.net.IConnectivityManager$Stub$Proxy.prepareVpn(Ljava/lang/String;Ljava/lang/String;)Z
NETWORK android.net.IConnectivityManager$Stub$Proxy.reportInetCondition(II)V
NETWORK android.net.IConnectivityManager$Stub$Proxy.requestNetworkTransitionWakelock(Ljava/lang/String;)V
NETWORK android.net.IConnectivityManager$Stub$Proxy.requestRouteToHostAddress(I[B)Z
NETWORK android.net.IConnectivityManager$Stub$Proxy.requestRouteToHost(II)Z android.permission.CHANGE_NETWORK_STATE 
NETWORK android.net.IConnectivityManager$Stub$Proxy.setDataDependency(IZ)V
NETWORK android.net.IConnectivityManager$Stub$Proxy.setGlobalProxy(Landroid/net/ProxyProperties;)V
NETWORK android.net.IConnectivityManager$Stub$Proxy.setMobileDataEnabled(Z)V android.permission.CHANGE_NETWORK_STATE 
NETWORK android.net.IConnectivityManager$Stub$Proxy.setNetworkPreference(I)V
NETWORK android.net.IConnectivityManager$Stub$Proxy.setPolicyDataEnable(IZ)V
NETWORK android.net.IConnectivityManager$Stub$Proxy.setRadio(IZ)Z android.permission.CHANGE_WIFI_STATE android.permission.CHANGE_NETWORK_STATE 
NETWORK android.net.IConnectivityManager$Stub$Proxy.setRadios(Z)Z android.permission.CHANGE_WIFI_STATE android.permission.CHANGE_NETWORK_STATE 
NETWORK android.net.IConnectivityManager$Stub$Proxy.setUsbTethering(Z)I android.permission.ACCESS_NETWORK_STATE 
NETWORK android.net.IConnectivityManager$Stub$Proxy.startUsingNetworkFeature(ILjava/lang/String;Landroid/os/IBinder;)I android.permission.READ_PHONE_STATE android.permission.BLUETOOTH android.permission.CHANGE_WIFI_STATE android.permission.ACCESS_WIFI_STATE android.permission.CHANGE_NETWORK_STATE android.permission.BLUETOOTH_ADMIN android.permission.ACCESS_NETWORK_STATE 
NETWORK android.net.IConnectivityManager$Stub$Proxy.stopUsingNetworkFeature(ILjava/lang/String;)I
NETWORK android.net.IConnectivityManager$Stub$Proxy.tether(Ljava/lang/String;)I
NETWORK android.net.IConnectivityManager$Stub$Proxy.untether(Ljava/lang/String;)I
NETWORK android.net.INetworkManagementEventObserver$Stub$Proxy.interfaceAdded(Ljava/lang/String;)V
NETWORK android.net.INetworkManagementEventObserver$Stub$Proxy.interfaceClassDataActivityChanged(Ljava/lang/String;Z)V
NETWORK android.net.INetworkManagementEventObserver$Stub$Proxy.interfaceLinkStateChanged(Ljava/lang/String;Z)V
NETWORK android.net.INetworkManagementEventObserver$Stub$Proxy.interfaceRemoved(Ljava/lang/String;)V
NETWORK android.net.INetworkManagementEventObserver$Stub$Proxy.interfaceStatusChanged(Ljava/lang/String;Z)V
NETWORK android.net.INetworkManagementEventObserver$Stub$Proxy.limitReached(Ljava/lang/String;Ljava/lang/String;)V
NETWORK android.net.INetworkPolicyListener$Stub$Proxy.onMeteredIfacesChanged([Ljava/lang/String;)V
NETWORK android.net.INetworkPolicyListener$Stub$Proxy.onUidRulesChanged(II)V
NETWORK android.net.INetworkPolicyManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NETWORK android.net.INetworkPolicyManager$Stub$Proxy.registerListener(Landroid/net/INetworkPolicyListener;)V
NETWORK android.net.INetworkPolicyManager$Stub$Proxy.setNetworkPolicies([Landroid/net/NetworkPolicy;)V
NETWORK android.net.INetworkPolicyManager$Stub$Proxy.setRestrictBackground(Z)V
NETWORK android.net.INetworkPolicyManager$Stub$Proxy.setUidPolicy(II)V
NETWORK android.net.INetworkPolicyManager$Stub$Proxy.unregisterListener(Landroid/net/INetworkPolicyListener;)V
NETWORK android.net.INetworkStatsService$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z android.permission.ACCESS_NETWORK_STATE 
NETWORK android.net.INetworkStatsService$Stub$Proxy.advisePersistThreshold(J)V
NETWORK android.net.INetworkStatsService$Stub$Proxy.incrementOperationCount(III)V
NETWORK android.net.INetworkStatsService$Stub$Proxy.setUidForeground(IZ)V
NETWORK android.net.INetworkStatsSession$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NETWORK android.net.InterfaceConfiguration.setFlag(Ljava/lang/String;)V
NETWORK android.net.InterfaceConfiguration.writeToParcel(Landroid/os/Parcel;I)V
NETWORK android.net.IThrottleManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NETWORK android.net.LinkCapabilities$1.createFromParcel(Landroid/os/Parcel;)Landroid/net/LinkCapabilities;
NETWORK android.net.LinkCapabilities.put(ILjava/lang/String;)V
NETWORK android.net.LinkProperties.writeToParcel(Landroid/os/Parcel;I)V
NETWORK android.net.LocalSocketImpl$SocketOutputStream.write([B)V
NETWORK android.net.LocalSocket.setReceiveBufferSize(I)V
NETWORK android.net.LocalSocket.setSendBufferSize(I)V
NETWORK android.net.LocalSocket.setSoTimeout(I)V
NETWORK android.net.MobileDataStateTracker.setDependencyMet(Z)V
NETWORK android.net.MobileDataStateTracker.setRadio(Z)Z
NETWORK android.net.NetworkPolicyManager.setNetworkPolicies([Landroid/net/NetworkPolicy;)V
NETWORK android.net.NetworkPolicyManager.setRestrictBackground(Z)V
NETWORK android.net.NetworkPolicyManager.setUidPolicy(II)V
NETWORK android.net.NetworkPolicy.writeToParcel(Landroid/os/Parcel;I)V
NETWORK android.net.NetworkState.writeToParcel(Landroid/os/Parcel;I)V
NETWORK android.net.NetworkStats.dump(Ljava/lang/String;Ljava/io/PrintWriter;)V
NETWORK android.net.NetworkStatsHistory$DataStreamUtils.writeVarLongArray(Ljava/io/DataOutputStream;[JI)V
NETWORK android.net.NetworkStatsHistory$DataStreamUtils.writeVarLong(Ljava/io/DataOutputStream;J)V
NETWORK android.net.NetworkStatsHistory$ParcelUtils.writeLongArray(Landroid/os/Parcel;[JI)V
NETWORK android.net.NetworkStatsHistory.writeToParcel(Landroid/os/Parcel;I)V
NETWORK android.net.NetworkStatsHistory.writeToStream(Ljava/io/DataOutputStream;)V
NETWORK android.net.nsd.DnsSdTxtRecord.set(Ljava/lang/String;Ljava/lang/String;)V
NETWORK android.net.nsd.INsdManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NETWORK android.net.nsd.INsdManager$Stub$Proxy.setEnabled(Z)V
NETWORK android.net.nsd.NsdManager.discoverServices(Ljava/lang/String;ILandroid/net/nsd/NsdManager$DiscoveryListener;)V
NETWORK android.net.nsd.NsdManager.registerService(Landroid/net/nsd/NsdServiceInfo;ILandroid/net/nsd/NsdManager$RegistrationListener;)V
NETWORK android.net.nsd.NsdManager.resolveService(Landroid/net/nsd/NsdServiceInfo;Landroid/net/nsd/NsdManager$ResolveListener;)V
NETWORK android.net.nsd.NsdManager.setEnabled(Z)V
NETWORK android.net.nsd.NsdServiceInfo.setTxtRecord(Landroid/net/nsd/DnsSdTxtRecord;)V
NETWORK android.net.nsd.NsdServiceInfo.writeToParcel(Landroid/os/Parcel;I)V
NETWORK android.net.Proxy.setHttpProxySystemProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NETWORK android.net.rtp.AudioGroup.add(Landroid/net/rtp/AudioStream;)V
NETWORK android.net.rtp.AudioGroup.sendDtmf(I)V
NETWORK android.net.sip.ISipService$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NETWORK android.net.sip.ISipService$Stub$Proxy.close(Ljava/lang/String;)V
NETWORK android.net.sip.ISipService$Stub$Proxy.isRegistered(Ljava/lang/String;)Z
NETWORK android.net.sip.ISipSession$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NETWORK android.net.sip.ISipSession$Stub$Proxy.answerCall(Ljava/lang/String;I)V
NETWORK android.net.sip.ISipSession$Stub$Proxy.changeCall(Ljava/lang/String;I)V
NETWORK android.net.sip.ISipSession$Stub$Proxy.register(I)V
NETWORK android.net.sip.SimpleSessionDescription$Fields.setAddress(Ljava/lang/String;)V
NETWORK android.net.sip.SimpleSessionDescription$Fields.setAttribute(Ljava/lang/String;Ljava/lang/String;)V
NETWORK android.net.sip.SimpleSessionDescription$Fields.setBandwidth(Ljava/lang/String;I)V
NETWORK android.net.sip.SimpleSessionDescription$Fields.setEncryption(Ljava/lang/String;Ljava/lang/String;)V
NETWORK android.net.sip.SimpleSessionDescription$Media.setAddress(Ljava/lang/String;)V
NETWORK android.net.sip.SimpleSessionDescription$Media.setAttribute(Ljava/lang/String;Ljava/lang/String;)V
NETWORK android.net.sip.SimpleSessionDescription$Media.setBandwidth(Ljava/lang/String;I)V
NETWORK android.net.sip.SimpleSessionDescription$Media.setEncryption(Ljava/lang/String;Ljava/lang/String;)V
NETWORK android.net.sip.SimpleSessionDescription$Media.setFormat(Ljava/lang/String;Ljava/lang/String;)V
NETWORK android.net.sip.SimpleSessionDescription$Media.setRtpPayload(ILjava/lang/String;Ljava/lang/String;)V
NETWORK android.net.sip.SimpleSessionDescription.setAddress(Ljava/lang/String;)V
NETWORK android.net.sip.SimpleSessionDescription.setAttribute(Ljava/lang/String;Ljava/lang/String;)V
NETWORK android.net.sip.SimpleSessionDescription.setBandwidth(Ljava/lang/String;I)V
NETWORK android.net.sip.SimpleSessionDescription.setEncryption(Ljava/lang/String;Ljava/lang/String;)V
NETWORK android.net.sip.SipAudioCall.sendDtmf(I)V
NETWORK android.net.sip.SipAudioCall.setSpeakerMode(Z)V
NETWORK android.net.sip.SipManager.createIncomingCallBroadcast(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
NETWORK android.net.sip.SipProfile$Builder.setAuthUserName(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;
NETWORK android.net.sip.SipProfile$Builder.setAutoRegistration(Z)Landroid/net/sip/SipProfile$Builder;
NETWORK android.net.sip.SipProfile$Builder.setPassword(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;
NETWORK android.net.sip.SipProfile$Builder.setPort(I)Landroid/net/sip/SipProfile$Builder;
NETWORK android.net.sip.SipProfile$Builder.setProfileName(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;
NETWORK android.net.sip.SipProfile$Builder.setProtocol(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;
NETWORK android.net.sip.SipProfile$Builder.setSendKeepAlive(Z)Landroid/net/sip/SipProfile$Builder;
NETWORK android.net.SntpClient.requestTime(Ljava/lang/String;I)Z
NETWORK android.net.SSLCertificateSocketFactory.setHostname(Ljava/net/Socket;Ljava/lang/String;)V
NETWORK android.net.SSLCertificateSocketFactory.setNpnProtocols([[B)V
NETWORK android.net.SSLCertificateSocketFactory.setSoWriteTimeout(Ljava/net/Socket;I)V
NETWORK android.net.SSLCertificateSocketFactory.setUseSessionTickets(Ljava/net/Socket;Z)V
NETWORK android.net.TrafficStats.setThreadStatsTag(I)V
NETWORK android.net.TrafficStats.setThreadStatsUid(I)V
NETWORK android.net.Uri$HierarchicalUri.writeToParcel(Landroid/os/Parcel;I)V
NETWORK android.net.Uri$OpaqueUri.writeToParcel(Landroid/os/Parcel;I)V
NETWORK android.net.wifi.IWifiManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NETWORK android.net.wifi.IWifiManager$Stub$Proxy.acquireMulticastLock(Landroid/os/IBinder;Ljava/lang/String;)V
NETWORK android.net.wifi.IWifiManager$Stub$Proxy.acquireWifiLock(Landroid/os/IBinder;ILjava/lang/String;Landroid/os/WorkSource;)Z
NETWORK android.net.wifi.IWifiManager$Stub$Proxy.addToBlacklist(Ljava/lang/String;)V
NETWORK android.net.wifi.IWifiManager$Stub$Proxy.disableNetwork(I)Z
NETWORK android.net.wifi.IWifiManager$Stub$Proxy.enableNetwork(IZ)Z
NETWORK android.net.wifi.IWifiManager$Stub$Proxy.releaseWifiLock(Landroid/os/IBinder;)Z
NETWORK android.net.wifi.IWifiManager$Stub$Proxy.removeNetwork(I)Z
NETWORK android.net.wifi.IWifiManager$Stub$Proxy.setCountryCode(Ljava/lang/String;Z)V
NETWORK android.net.wifi.IWifiManager$Stub$Proxy.setFrequencyBand(IZ)V
NETWORK android.net.wifi.IWifiManager$Stub$Proxy.setWifiApConfiguration(Landroid/net/wifi/WifiConfiguration;)V
NETWORK android.net.wifi.IWifiManager$Stub$Proxy.setWifiApEnabled(Landroid/net/wifi/WifiConfiguration;Z)V
NETWORK android.net.wifi.IWifiManager$Stub$Proxy.setWifiEnabled(Z)Z
NETWORK android.net.wifi.IWifiManager$Stub$Proxy.updateWifiLockWorkSource(Landroid/os/IBinder;Landroid/os/WorkSource;)V
NETWORK android.net.wifi.p2p.IWifiP2pManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z android.permission.CHANGE_WIFI_STATE android.permission.ACCESS_WIFI_STATE 
NETWORK android.net.wifi.p2p.nsd.WifiP2pServiceResponse.writeToParcel(Landroid/os/Parcel;I)V
NETWORK android.net.wifi.p2p.WifiP2pConfig.writeToParcel(Landroid/os/Parcel;I)V
NETWORK android.net.wifi.p2p.WifiP2pDeviceList.updateGroupCapability(Ljava/lang/String;I)V
NETWORK android.net.wifi.p2p.WifiP2pDeviceList.update(Landroid/net/wifi/p2p/WifiP2pDevice;)V
NETWORK android.net.wifi.p2p.WifiP2pDeviceList.updateStatus(Ljava/lang/String;I)V
NETWORK android.net.wifi.p2p.WifiP2pDeviceList.writeToParcel(Landroid/os/Parcel;I)V
NETWORK android.net.wifi.p2p.WifiP2pDevice.writeToParcel(Landroid/os/Parcel;I)V
NETWORK android.net.wifi.p2p.WifiP2pGroupList.add(Landroid/net/wifi/p2p/WifiP2pGroup;)V
NETWORK android.net.wifi.p2p.WifiP2pGroupList.writeToParcel(Landroid/os/Parcel;I)V
NETWORK android.net.wifi.p2p.WifiP2pGroup.writeToParcel(Landroid/os/Parcel;I)V
NETWORK android.net.wifi.p2p.WifiP2pManager.addLocalService(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/nsd/WifiP2pServiceInfo;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V
NETWORK android.net.wifi.p2p.WifiP2pManager.addServiceRequest(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/nsd/WifiP2pServiceRequest;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V
NETWORK android.net.wifi.p2p.WifiP2pManager.cancelConnect(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V
NETWORK android.net.wifi.p2p.WifiP2pManager.connect(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pConfig;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V
NETWORK android.net.wifi.p2p.WifiP2pManager.createGroup(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V
NETWORK android.net.wifi.p2p.WifiP2pManager.discoverPeers(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V
NETWORK android.net.wifi.p2p.WifiP2pManager.discoverServices(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V
NETWORK android.net.wifi.p2p.WifiP2pManager.removeGroup(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V android.permission.STOP_APP_SWITCHES 
NETWORK android.net.wifi.p2p.WifiP2pManager.removeLocalService(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/nsd/WifiP2pServiceInfo;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V
NETWORK android.net.wifi.p2p.WifiP2pManager.removeServiceRequest(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/nsd/WifiP2pServiceRequest;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V
NETWORK android.net.wifi.p2p.WifiP2pManager.requestConnectionInfo(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$ConnectionInfoListener;)V
NETWORK android.net.wifi.p2p.WifiP2pManager.requestGroupInfo(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$GroupInfoListener;)V
NETWORK android.net.wifi.p2p.WifiP2pManager.requestPeers(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$PeerListListener;)V
NETWORK android.net.wifi.p2p.WifiP2pManager.requestPersistentGroupInfo(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$PersistentGroupInfoListener;)V
NETWORK android.net.wifi.p2p.WifiP2pManager.setDeviceName(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Ljava/lang/String;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V
NETWORK android.net.wifi.p2p.WifiP2pManager.setDialogListener(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$DialogListener;)V
NETWORK android.net.wifi.p2p.WifiP2pManager.setDnsSdResponseListeners(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$DnsSdServiceResponseListener;Landroid/net/wifi/p2p/WifiP2pManager$DnsSdTxtRecordListener;)V
NETWORK android.net.wifi.p2p.WifiP2pManager.setServiceResponseListener(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$ServiceResponseListener;)V
NETWORK android.net.wifi.p2p.WifiP2pManager.setUpnpServiceResponseListener(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$UpnpServiceResponseListener;)V
NETWORK android.net.wifi.p2p.WifiP2pManager.setWFDInfo(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pWfdInfo;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V
NETWORK android.net.wifi.p2p.WifiP2pManager.stopPeerDiscovery(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V
NETWORK android.net.wifi.p2p.WifiP2pService.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z android.permission.CHANGE_WIFI_STATE android.permission.ACCESS_WIFI_STATE 
NETWORK android.net.wifi.p2p.WifiP2pService$P2pStateMachine$DefaultState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.p2p.WifiP2pService$P2pStateMachine$FrequencyConflictState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatedState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatingState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupNegotiationState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.p2p.WifiP2pService$P2pStateMachine$InactiveState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.p2p.WifiP2pService$P2pStateMachine$OngoingGroupRemovalState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pDisabledState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pDisablingState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnabledState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnablingState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pNotSupportedState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.p2p.WifiP2pService$P2pStateMachine$ProvisionDiscoveryState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.p2p.WifiP2pService$P2pStateMachine$UserAuthorizingInvitationState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.p2p.WifiP2pService$P2pStateMachine$UserAuthorizingJoinState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.p2p.WifiP2pWfdInfo.setCoupledSinkSupportAtSink(Z)V
NETWORK android.net.wifi.p2p.WifiP2pWfdInfo.setCoupledSinkSupportAtSource(Z)V
NETWORK android.net.wifi.p2p.WifiP2pWfdInfo.setDeviceType(I)Z
NETWORK android.net.wifi.p2p.WifiP2pWfdInfo.setSessionAvailable(Z)V
NETWORK android.net.wifi.ScanResult.writeToParcel(Landroid/os/Parcel;I)V
NETWORK android.net.wifi.SupplicantStateTracker$CompletedState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.SupplicantStateTracker$DefaultState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.SupplicantStateTracker$HandshakeState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiApConfigStore$ActiveState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiApConfigStore$DefaultState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiApConfigStore$InactiveState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiConfigStore.disableNetwork(II)Z
NETWORK android.net.wifi.WifiConfigStore.enableNetwork(IZ)Z
NETWORK android.net.wifi.WifiConfigStore.enableNetworkWithoutBroadcast(IZ)Z
NETWORK android.net.wifi.WifiConfigStore.selectNetwork(I)Z
NETWORK android.net.wifi.WifiConfigStore.setIpConfiguration(ILandroid/net/DhcpInfoInternal;)V
NETWORK android.net.wifi.WifiConfigStore.startWpsPbc(Landroid/net/wifi/WpsInfo;)Landroid/net/wifi/WpsResult;
NETWORK android.net.wifi.WifiConfigStore.startWpsWithPinFromAccessPoint(Landroid/net/wifi/WpsInfo;)Landroid/net/wifi/WpsResult;
NETWORK android.net.wifi.WifiConfigStore.startWpsWithPinFromDevice(Landroid/net/wifi/WpsInfo;)Landroid/net/wifi/WpsResult;
NETWORK android.net.wifi.WifiConfiguration.writeToParcel(Landroid/os/Parcel;I)V
NETWORK android.net.wifi.WifiInfo.setSupplicantState(Ljava/lang/String;)V
NETWORK android.net.wifi.WifiInfo.writeToParcel(Landroid/os/Parcel;I)V
NETWORK android.net.wifi.WifiManager.connect(ILandroid/net/wifi/WifiManager$ActionListener;)V
NETWORK android.net.wifi.WifiManager.connect(Landroid/net/wifi/WifiConfiguration;Landroid/net/wifi/WifiManager$ActionListener;)V
NETWORK android.net.wifi.WifiManager.disable(ILandroid/net/wifi/WifiManager$ActionListener;)V
NETWORK android.net.wifi.WifiManager.enableNetwork(IZ)Z
NETWORK android.net.wifi.WifiManager.forget(ILandroid/net/wifi/WifiManager$ActionListener;)V
NETWORK android.net.wifi.WifiManager.save(Landroid/net/wifi/WifiConfiguration;Landroid/net/wifi/WifiManager$ActionListener;)V
NETWORK android.net.wifi.WifiManager$ServiceHandler.handleMessage(Landroid/os/Message;)V
NETWORK android.net.wifi.WifiManager.setCountryCode(Ljava/lang/String;Z)V
NETWORK android.net.wifi.WifiManager.setFrequencyBand(IZ)V
NETWORK android.net.wifi.WifiManager.setWifiApConfiguration(Landroid/net/wifi/WifiConfiguration;)Z
NETWORK android.net.wifi.WifiManager.setWifiApEnabled(Landroid/net/wifi/WifiConfiguration;Z)Z
NETWORK android.net.wifi.WifiManager.setWifiEnabled(Z)Z
NETWORK android.net.wifi.WifiManager.startWps(Landroid/net/wifi/WpsInfo;Landroid/net/wifi/WifiManager$WpsListener;)V
NETWORK android.net.wifi.WifiManager$WifiLock.setWorkSource(Landroid/os/WorkSource;)V android.permission.STOP_APP_SWITCHES 
NETWORK android.net.wifi.WifiNative.setBand(I)Z
NETWORK android.net.wifi.WifiNative.setBluetoothCoexistenceMode(I)Z
NETWORK android.net.wifi.WifiNative.setBluetoothCoexistenceScanMode(Z)Z
NETWORK android.net.wifi.WifiNative.setConcurrencyPriority(Ljava/lang/String;)Z
NETWORK android.net.wifi.WifiNative.setConfigMethods(Ljava/lang/String;)Z
NETWORK android.net.wifi.WifiNative.setCountryCode(Ljava/lang/String;)Z
NETWORK android.net.wifi.WifiNative.setDeviceName(Ljava/lang/String;)Z
NETWORK android.net.wifi.WifiNative.setDeviceType(Ljava/lang/String;)Z
NETWORK android.net.wifi.WifiNative.setManufacturer(Ljava/lang/String;)Z
NETWORK android.net.wifi.WifiNative.setModelName(Ljava/lang/String;)Z
NETWORK android.net.wifi.WifiNative.setModelNumber(Ljava/lang/String;)Z
NETWORK android.net.wifi.WifiNative.setNetworkVariable(ILjava/lang/String;Ljava/lang/String;)Z
NETWORK android.net.wifi.WifiNative.setP2pGroupIdle(Ljava/lang/String;I)Z
NETWORK android.net.wifi.WifiNative.setP2pPowerSave(Ljava/lang/String;Z)Z
NETWORK android.net.wifi.WifiNative.setP2pSsidPostfix(Ljava/lang/String;)Z
NETWORK android.net.wifi.WifiNative.setPersistentReconnect(Z)Z
NETWORK android.net.wifi.WifiNative.setPowerSave(Z)V
NETWORK android.net.wifi.WifiNative.setScanInterval(I)V
NETWORK android.net.wifi.WifiNative.setScanMode(Z)Z
NETWORK android.net.wifi.WifiNative.setScanResultHandling(I)Z
NETWORK android.net.wifi.WifiNative.setSerialNumber(Ljava/lang/String;)Z
NETWORK android.net.wifi.WifiNative.setWfdDeviceInfo(Ljava/lang/String;)Z
NETWORK android.net.wifi.WifiNative.setWfdEnable(Z)Z
NETWORK android.net.wifi.WifiSsid$1.createFromParcel(Landroid/os/Parcel;)Landroid/net/wifi/WifiSsid;
NETWORK android.net.wifi.WifiSsid.createFromHex(Ljava/lang/String;)Landroid/net/wifi/WifiSsid;
NETWORK android.net.wifi.WifiStateMachine$CaptivePortalCheckState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$ConnectedState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$ConnectModeState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$DefaultState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$DisconnectedState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$DisconnectingState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$DriverFailedState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$DriverLoadedState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$DriverLoadingState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$DriverStartedState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$DriverStartingState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$DriverStoppedState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$DriverStoppingState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$DriverUnloadedState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$DriverUnloadingState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$L2ConnectedState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$ObtainingIpState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$ScanModeState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine.sendBluetoothAdapterStateChange(I)V
NETWORK android.net.wifi.WifiStateMachine.setCountryCode(Ljava/lang/String;Z)V android.permission.WRITE_SETTINGS 
NETWORK android.net.wifi.WifiStateMachine.setDriverStart(ZZ)V
NETWORK android.net.wifi.WifiStateMachine.setFrequencyBand(IZ)V
NETWORK android.net.wifi.WifiStateMachine.setHighPerfModeEnabled(Z)V
NETWORK android.net.wifi.WifiStateMachine.setScanOnlyMode(Z)V
NETWORK android.net.wifi.WifiStateMachine.setScanType(Z)V
NETWORK android.net.wifi.WifiStateMachine.setWifiApConfiguration(Landroid/net/wifi/WifiConfiguration;)V
NETWORK android.net.wifi.WifiStateMachine.setWifiApEnabled(Landroid/net/wifi/WifiConfiguration;Z)V
NETWORK android.net.wifi.WifiStateMachine.setWifiEnabled(Z)V
NETWORK android.net.wifi.WifiStateMachine$SoftApStartedState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$SoftApStartingState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$SoftApStoppingState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$SupplicantStartedState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$SupplicantStartingState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$SupplicantStoppingState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine.syncDisableNetwork(Lcom/android/internal/util/AsyncChannel;I)Z
NETWORK android.net.wifi.WifiStateMachine.syncEnableNetwork(Lcom/android/internal/util/AsyncChannel;IZ)Z
NETWORK android.net.wifi.WifiStateMachine.syncRemoveNetwork(Lcom/android/internal/util/AsyncChannel;I)Z
NETWORK android.net.wifi.WifiStateMachine$TetheredState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$TetheringState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$VerifyingLinkState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$WaitForP2pDisableState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateMachine$WpsRunningState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiStateTracker.setDependencyMet(Z)V
NETWORK android.net.wifi.WifiStateTracker.setPolicyDataEnable(Z)V
NETWORK android.net.wifi.WifiStateTracker.setRadio(Z)Z
NETWORK android.net.wifi.WifiStateTracker.setTeardownRequested(Z)V
NETWORK android.net.wifi.WifiStateTracker.setUserDataEnable(Z)V
NETWORK android.net.wifi.WifiWatchdogStateMachine$BssidStatistics.updateLoss(IDI)V
NETWORK android.net.wifi.WifiWatchdogStateMachine$ConnectedState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiWatchdogStateMachine$DefaultState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiWatchdogStateMachine$LinkMonitoringState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiWatchdogStateMachine.makeWifiWatchdogStateMachine(Landroid/content/Context;)Landroid/net/wifi/WifiWatchdogStateMachine;
NETWORK android.net.wifi.WifiWatchdogStateMachine$OnlineState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiWatchdogStateMachine$OnlineWatchState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiWatchdogStateMachine$VerifyingLinkState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiWatchdogStateMachine$WatchdogDisabledState.processMessage(Landroid/os/Message;)Z
NETWORK android.net.wifi.WifiWatchdogStateMachine$WatchdogEnabledState.processMessage(Landroid/os/Message;)Z
NETWORK com.android.providers.settings.SettingsBackupAgent$WifiNetworkSettings.write(Ljava/io/Writer;)V
NETWORK com.android.server.ConnectivityService$NetworkStateTrackerHandler.handleMessage(Landroid/os/Message;)V
NETWORK com.android.server.net.NetworkIdentitySet.writeToStream(Ljava/io/DataOutputStream;)V
NETWORK com.android.server.net.NetworkPolicyManagerService.setNetworkPolicies([Landroid/net/NetworkPolicy;)V
NETWORK com.android.server.net.NetworkPolicyManagerService.setUidPolicy(II)V
NETWORK com.android.server.net.NetworkPolicyManagerService.snoozeLimit(Landroid/net/NetworkTemplate;)V
NETWORK com.android.server.net.NetworkStatsCollection.write(Ljava/io/DataOutputStream;)V
NETWORK com.android.server.net.NetworkStatsRecorder$CombiningRewriter.write(Ljava/io/OutputStream;)V
NETWORK com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter.write(Ljava/io/OutputStream;)V
NETWORK com.android.server.net.NetworkStatsRecorder.setPersistThreshold(J)V
NETWORK com.android.server.net.NetworkStatsService.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z android.permission.ACCESS_NETWORK_STATE 
NETWORK com.android.server.net.NetworkStatsService.setUidForeground(IZ)V
NETWORK com.android.server.NetworkManagementService.addIdleTimer(Ljava/lang/String;ILjava/lang/String;)V
NETWORK com.android.server.NetworkManagementService.enableIpv6(Ljava/lang/String;)V
NETWORK com.android.server.NetworkManagementService.enableNat(Ljava/lang/String;Ljava/lang/String;)V
NETWORK com.android.server.NetworkManagementService.setAccessPoint(Landroid/net/wifi/WifiConfiguration;Ljava/lang/String;)V
NETWORK com.android.server.NetworkManagementService.setDefaultInterfaceForDns(Ljava/lang/String;)V
NETWORK com.android.server.NetworkManagementService.setDnsForwarders([Ljava/lang/String;)V
NETWORK com.android.server.NetworkManagementService.setDnsServersForInterface(Ljava/lang/String;[Ljava/lang/String;)V
NETWORK com.android.server.NetworkManagementService.setFirewallEgressDestRule(Ljava/lang/String;IZ)V
NETWORK com.android.server.NetworkManagementService.setFirewallEgressSourceRule(Ljava/lang/String;Z)V
NETWORK com.android.server.NetworkManagementService.setFirewallInterfaceRule(Ljava/lang/String;Z)V
NETWORK com.android.server.NetworkManagementService.setFirewallUidRule(IZ)V
NETWORK com.android.server.NetworkManagementService.setGlobalAlert(J)V
NETWORK com.android.server.NetworkManagementService.setInterfaceAlert(Ljava/lang/String;J)V
NETWORK com.android.server.NetworkManagementService.setInterfaceConfig(Ljava/lang/String;Landroid/net/InterfaceConfiguration;)V
NETWORK com.android.server.NetworkManagementService.setInterfaceDown(Ljava/lang/String;)V
NETWORK com.android.server.NetworkManagementService.setInterfaceIpv6PrivacyExtensions(Ljava/lang/String;Z)V
NETWORK com.android.server.NetworkManagementService.setInterfaceQuota(Ljava/lang/String;J)V
NETWORK com.android.server.NetworkManagementService.setInterfaceThrottle(Ljava/lang/String;II)V
NETWORK com.android.server.NetworkManagementService.setInterfaceUp(Ljava/lang/String;)V
NETWORK com.android.server.NetworkManagementService.setIpForwardingEnabled(Z)V
NETWORK com.android.server.NetworkManagementService.setUidNetworkRules(IZ)V
NETWORK com.android.server.NetworkManagementService.startReverseTethering(Ljava/lang/String;)V
NETWORK com.android.server.WifiService.setCountryCode(Ljava/lang/String;Z)V android.permission.WRITE_SETTINGS android.permission.CHANGE_WIFI_STATE 
NETWORK com.android.server.WifiService.setFrequencyBand(IZ)V
NETWORK com.android.server.WifiService.setWifiApConfiguration(Landroid/net/wifi/WifiConfiguration;)V
NETWORK com.android.server.WifiService.setWifiApEnabled(Landroid/net/wifi/WifiConfiguration;Z)V android.permission.CHANGE_WIFI_STATE 
NETWORK com.android.server.WifiService.setWifiEnabled(Z)Z
NETWORK com.android.server.WifiService.startScan(Z)V
NETWORK java.net.URL.openConnection()Ljava/net/URLConnection; android.permission.INTERNET 
NETWORK android.webkit.WebSettings.setUserAgent(I)V
NETWORK android.webkit.WebSettings.setUserAgentString(Ljava/lang/String;)V

# Lorg/apache/http/client/HttpClient  (INTERFACE)
NETWORK org.apache.http.client.HttpClient.execute(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;
NETWORK org.apache.http.client.HttpClient.execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;
NETWORK org.apache.http.client.HttpClient.execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;)Lorg/apache/http/HttpResponse;
NETWORK org.apache.http.client.HttpClient.execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;
NETWORK org.apache.http.client.HttpClient.execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/client/ResponseHandler;)Ljava/lang/Object;
NETWORK org.apache.http.client.HttpClient.execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/client/ResponseHandler;Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;
NETWORK org.apache.http.client.HttpClient.execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/client/ResponseHandler;)Ljava/lang/Object;
NETWORK org.apache.http.client.HttpClient.execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/client/ResponseHandler;Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;

# Lorg/apache/http/impl/client/DefaultHttpClient
NETWORK org.apache.http.impl.client.DefaultHttpClient.execute(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;
NETWORK org.apache.http.impl.client.DefaultHttpClient.execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;
NETWORK org.apache.http.impl.client.DefaultHttpClient.execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;)Lorg/apache/http/HttpResponse;
NETWORK org.apache.http.impl.client.DefaultHttpClient.execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;
NETWORK org.apache.http.impl.client.DefaultHttpClient.execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/client/ResponseHandler;)Ljava/lang/Object;
NETWORK org.apache.http.impl.client.DefaultHttpClient.execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/client/ResponseHandler;Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;
NETWORK org.apache.http.impl.client.DefaultHttpClient.execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/client/ResponseHandler;)Ljava/lang/Object;
NETWORK org.apache.http.impl.client.DefaultHttpClient.execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/client/ResponseHandler;Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;

# Landroid/net/http/AndroidHttpClient
NETWORK android.net.http.AndroidHttpClient.execute(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;
NETWORK android.net.http.AndroidHttpClient.execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;
NETWORK android.net.http.AndroidHttpClient.execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;)Lorg/apache/http/HttpResponse;
NETWORK android.net.http.AndroidHttpClient.execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;
NETWORK android.net.http.AndroidHttpClient.execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/client/ResponseHandler;)Ljava/lang/Object;
NETWORK android.net.http.AndroidHttpClient.execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/client/ResponseHandler;Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;
NETWORK android.net.http.AndroidHttpClient.execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/client/ResponseHandler;)Ljava/lang/Object;
NETWORK android.net.http.AndroidHttpClient.execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/client/ResponseHandler;Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;

# Lorg/apache/http/impl/client/AbstractHttpClient  (ABSTRACT)
NETWORK org.apache.http.impl.client.AbstractHttpClient.execute(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;
NETWORK org.apache.http.impl.client.AbstractHttpClient.execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;
NETWORK org.apache.http.impl.client.AbstractHttpClient.execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;)Lorg/apache/http/HttpResponse;
NETWORK org.apache.http.impl.client.AbstractHttpClient.execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;
NETWORK org.apache.http.impl.client.AbstractHttpClient.execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/client/ResponseHandler;)Ljava/lang/Object;
NETWORK org.apache.http.impl.client.AbstractHttpClient.execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/client/ResponseHandler;Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;
NETWORK org.apache.http.impl.client.AbstractHttpClient.execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/client/ResponseHandler;)Ljava/lang/Object;
NETWORK org.apache.http.impl.client.AbstractHttpClient.execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/client/ResponseHandler;Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;

# Lorg/apache/http/impl/AbstractHttpClientConnection  (ABSTRACT)
NETWORK org.apache.http.impl.AbstractHttpClientConnection.sendRequestHeader(Lorg/apache/http/HttpRequest;)V
NETWORK org.apache.http.impl.AbstractHttpClientConnection.sendRequestEntity(Lorg/apache/http/HttpEntityEnclosingRequest;)V

# Lsun/net/www/http/HttpClient
NETWORK sun.net.www.http.HttpClient.New(Ljava/net/URL;)Lsun/net/www/http/HttpClient;
NETWORK sun.net.www.http.HttpClient.New(Ljava/net/URL;Z)Lsun/net/www/http/HttpClient;
NETWORK sun.net.www.http.HttpClient.New(Ljava/net/URL;Ljava/net/Proxy;IZLsun/net/www/protocol/http/HttpURLConnection;)Lsun/net/www/http/HttpClient;
NETWORK sun.net.www.http.HttpClient.New(Ljava/net/URL;Ljava/net/Proxy;ILsun/net/www/protocol/http/HttpURLConnection;)Lsun/net/www/http/HttpClient;
NETWORK sun.net.www.http.HttpClient.New(Ljava/net/URL;Ljava/lang/String;IZ)Lsun/net/www/http/HttpClient;
NETWORK sun.net.www.http.HttpClient.New(Ljava/net/URL;Ljava/lang/String;IZILsun/net/www/protocol/http/HttpURLConnection;)Lsun/net/www/http/HttpClient;
NETWORK sun.net.www.http.HttpClient.openServer(Ljava/lang/String;I)V
NETWORK sun.net.www.http.HttpClient.privilegedOpenServer(Ljava/net/InetSocketAddress;)V
NETWORK sun.net.www.http.HttpClient.superOpenServer(Ljava/lang/String;I)V
NETWORK sun.net.www.http.HttpClient.openServer()V
NETWORK sun.net.www.http.HttpClient.writeRequests(Lsun/net/www/MessageHeader;)V
NETWORK sun.net.www.http.HttpClient.writeRequests(Lsun/net/www/MessageHeader;Lsun/net/www/http/PosterOutputStream;)V
NETWORK sun.net.www.http.HttpClient.writeRequests(Lsun/net/www/MessageHeader;Lsun/net/www/http/PosterOutputStream;Z)V
NETWORK sun.net.www.http.HttpClient.getOutputStream()Ljava/io/OutputStream;

# Lcom/sun/xml/internal/ws/transport/http/client/HttpClientTransport
NETWORK com.sun.xml.internal.ws.transport.http.client.HttpClientTransport.getOutput()Ljava/io/OutputStream;

# Lcom/sun/xml/internal/ws/transport/http/client/HttpClientTransport$WSChunkedOuputStream
NETWORK com.sun.xml.internal.ws.transport.http.client.HttpClientTransport$WSChunkedOuputStream.write([BII)V

# Ljava/net/URLConnection
NETWORK java.net.URLConnection.<init>(Ljava/net/URL;)V
NETWORK java.net.URLConnection.getOutputStream()Ljava/io/OutputStream;

# Ljavax/net/ssl/HttpsURLConnection
NETWORK javax.net.ssl.HttpsURLConnection.<init>(Ljava/net/URL;)V
NETWORK java.net.URLConnection.getOutputStream()Ljava/io/OutputStream;

# Ljava/net/JarURLConnection
NETWORK java.net.JarURLConnection.<init>(Ljava/net/URL;)V
NETWORK java.net.URLConnection.getOutputStream()Ljava/io/OutputStream;

# Ljava/net/HttpURLConnection
NETWORK java.net.HttpURLConnection.<init>(Ljava/net/URL;)V
NETWORK java.net.HttpURLConnection.getOutputStream()Ljava/io/OutputStream;
NETWORK java.net.HttpURLConnection.setRequestMethod(Ljava/lang/String;)V

NFC android.nfc.INdefPushCallback$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NFC android.nfc.INfcAdapterExtras$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NFC android.nfc.INfcAdapterExtras$Stub$Proxy.authenticate(Ljava/lang/String;[B)V android.permission.NFC 
NFC android.nfc.INfcAdapterExtras$Stub$Proxy.open(Ljava/lang/String;Landroid/os/IBinder;)Landroid/os/Bundle;
NFC android.nfc.INfcAdapterExtras$Stub$Proxy.setCardEmulationRoute(Ljava/lang/String;I)V
NFC android.nfc.INfcAdapter$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NFC android.nfc.INfcAdapter$Stub$Proxy.setForegroundDispatch(Landroid/app/PendingIntent;[Landroid/content/IntentFilter;Landroid/nfc/TechListParcel;)V
NFC android.nfc.INfcAdapter$Stub$Proxy.setNdefPushCallback(Landroid/nfc/INdefPushCallback;)V
NFC android.nfc.INfcAdapter$Stub$Proxy.setP2pModes(II)V
NFC android.nfc.INfcTag$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NFC android.nfc.INfcTag$Stub$Proxy.canMakeReadOnly(I)Z
NFC android.nfc.INfcTag$Stub$Proxy.close(I)I
NFC android.nfc.INfcTag$Stub$Proxy.connect(II)I
NFC android.nfc.INfcTag$Stub$Proxy.formatNdef(I[B)I
NFC android.nfc.INfcTag$Stub$Proxy.ndefIsWritable(I)Z
NFC android.nfc.INfcTag$Stub$Proxy.ndefMakeReadOnly(I)I
NFC android.nfc.INfcTag$Stub$Proxy.ndefWrite(ILandroid/nfc/NdefMessage;)I
NFC android.nfc.INfcTag$Stub$Proxy.reconnect(I)I
NFC android.nfc.INfcTag$Stub$Proxy.setTimeout(II)I
NFC android.nfc.NdefMessage.writeToParcel(Landroid/os/Parcel;I)V
NFC android.nfc.NfcActivityManager.setNdefPushContentUriCallback(Landroid/app/Activity;Landroid/nfc/NfcAdapter$CreateBeamUrisCallback;)V
NFC android.nfc.NfcActivityManager.setNdefPushContentUri(Landroid/app/Activity;[Landroid/net/Uri;)V
NFC android.nfc.NfcActivityManager.setNdefPushMessageCallback(Landroid/app/Activity;Landroid/nfc/NfcAdapter$CreateNdefMessageCallback;)V
NFC android.nfc.NfcActivityManager.setNdefPushMessage(Landroid/app/Activity;Landroid/nfc/NdefMessage;)V
NFC android.nfc.NfcActivityManager.setOnNdefPushCompleteCallback(Landroid/app/Activity;Landroid/nfc/NfcAdapter$OnNdefPushCompleteCallback;)V
NFC android.nfc.NfcAdapter.enableForegroundDispatch(Landroid/app/Activity;Landroid/app/PendingIntent;[Landroid/content/IntentFilter;[[Ljava/lang/String;)V
NFC android.nfc.NfcAdapter.setBeamPushUris([Landroid/net/Uri;Landroid/app/Activity;)V
NFC android.nfc.NfcAdapter.setNdefPushMessage(Landroid/nfc/NdefMessage;Landroid/app/Activity;[Landroid/app/Activity;)V
NFC android.nfc.NfcAdapter.setP2pModes(II)V
NFC android.nfc.Tag.writeToParcel(Landroid/os/Parcel;I)V
NFC android.nfc.tech.IsoDep.setTimeout(I)V
NFC android.nfc.tech.MifareClassic.decrement(II)V android.permission.NFC 
NFC android.nfc.tech.MifareClassic.increment(II)V android.permission.NFC 
NFC android.nfc.tech.MifareClassic.setTimeout(I)V
NFC android.nfc.tech.MifareUltralight.setTimeout(I)V
NFC android.nfc.tech.NfcA.setTimeout(I)V
NFC android.nfc.tech.NfcF.setTimeout(I)V
NFC com.android.nfc.dhimpl.NativeLlcpConnectionlessSocket.send(I[B)V
NFC com.android.nfc.dhimpl.NativeLlcpSocket.send([B)V
NFC com.android.nfc.dhimpl.NativeNfcManager.setP2pInitiatorModes(I)V
NFC com.android.nfc.dhimpl.NativeNfcManager.setP2pTargetModes(I)V
NFC com.android.nfc.dhimpl.NativeNfcManager.setTimeout(II)Z
NFC com.android.nfc.dhimpl.NativeNfcTag.addNdefTechnology(Landroid/nfc/NdefMessage;IIIII)V
NFC com.android.nfc.dhimpl.NativeP2pDevice.send([B)Z
NFC com.android.nfc.handover.HandoverClient.sendHandoverRequest(Landroid/nfc/NdefMessage;)Landroid/nfc/NdefMessage;
NFC com.android.nfc.handover.HandoverManager.whitelistOppDevice(Landroid/bluetooth/BluetoothDevice;)V
NFC com.android.nfc.handover.HandoverService$1.onReceive(Landroid/content/Context;Landroid/content/Intent;)V
NFC com.android.nfc.handover.HandoverService.createHandoverTransfer(Lcom/android/nfc/handover/PendingHandoverTransfer;)V
NFC com.android.nfc.handover.HandoverService.onTransferComplete(Lcom/android/nfc/handover/HandoverTransfer;Z)V
NFC com.android.nfc.handover.HandoverTransfer.onScanCompleted(Ljava/lang/String;Landroid/net/Uri;)V
NFC com.android.nfc.handover.HandoverTransfer.whitelistOppDevice(Landroid/bluetooth/BluetoothDevice;)V
NFC com.android.nfc.ndefpush.NdefPushClient.push(Landroid/nfc/NdefMessage;)Z
NFC com.android.nfc.NfcDispatcher$DispatchInfo.tryStartActivity(Landroid/content/Intent;)Z
NFC com.android.nfc.NfcDispatcher.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
NFC com.android.nfc.NfcDispatcher.tryTech(Lcom/android/nfc/NfcDispatcher$DispatchInfo;Landroid/nfc/Tag;)Z
NFC com.android.nfc.NfceeAccessControl.check(ILjava/lang/String;)Z
NFC com.android.nfc.NfceeAccessControl.check(Landroid/content/pm/ApplicationInfo;)Z
NFC com.android.nfc.NfceeAccessControl.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
NFC com.android.nfc.NfcService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
NFC com.android.nfc.NfcService$NfcAdapterExtrasService.open(Ljava/lang/String;Landroid/os/IBinder;)Landroid/os/Bundle; android.permission.NFC 
NFC com.android.nfc.NfcService$NfcAdapterExtrasService.setCardEmulationRoute(Ljava/lang/String;I)V
NFC com.android.nfc.NfcService$NfcAdapterService.dispatch(Landroid/nfc/Tag;)V
NFC com.android.nfc.NfcService$NfcAdapterService.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
NFC com.android.nfc.NfcService$NfcAdapterService.setForegroundDispatch(Landroid/app/PendingIntent;[Landroid/content/IntentFilter;Landroid/nfc/TechListParcel;)V
NFC com.android.nfc.NfcService$NfcAdapterService.setNdefPushCallback(Landroid/nfc/INdefPushCallback;)V
NFC com.android.nfc.NfcService$NfcAdapterService.setP2pModes(II)V
NFC com.android.nfc.NfcService$NfcServiceHandler.handleMessage(Landroid/os/Message;)V
NFC com.android.nfc.NfcService.onCardEmulationAidSelected([B)V
NFC com.android.nfc.NfcService.onSeApduReceived([B)V
NFC com.android.nfc.NfcService.onSeMifareAccess([B)V
NFC com.android.nfc.NfcService.saveNfcOnSetting(Z)V
NFC com.android.nfc.NfcService.sendMockNdefTag(Landroid/nfc/NdefMessage;)V android.permission.GET_TASKS android.permission.BLUETOOTH android.permission.WRITE_SETTINGS android.permission.VIBRATE android.permission.BLUETOOTH_ADMIN 
NFC com.android.nfc.NfcService$TagService.ndefWrite(ILandroid/nfc/NdefMessage;)I
NFC com.android.nfc.NfcService$TagService.rediscover(I)Landroid/nfc/Tag;
NFC com.android.nfc.NfcService$TagService.setTimeout(II)I
NFC com.android.nfc.P2pLinkManager.dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
NFC com.android.nfc.P2pLinkManager.handleMessage(Landroid/os/Message;)Z
NFC com.android.nfc.P2pLinkManager.onReceiveComplete(Landroid/nfc/NdefMessage;)V
NFC com.android.nfc.P2pLinkManager.onSendComplete(Landroid/nfc/NdefMessage;J)V
NFC com.android.nfc.snep.SnepMessenger.sendMessage(Lcom/android/nfc/snep/SnepMessage;)V
NO_CATEGORY android.accessibilityservice.AccessibilityService.bindService(Landroid/content/Intent;Landroid/content/ServiceConnection;I)Z android.permission.MANAGE_APP_TOKENS 
NO_CATEGORY android.accessibilityservice.AccessibilityService.setWallpaper(Landroid/graphics/Bitmap;)V android.permission.SET_WALLPAPER android.permission.MANAGE_APP_TOKENS 
NO_CATEGORY android.accessibilityservice.AccessibilityService.startService(Landroid/content/Intent;)Landroid/content/ComponentName; android.permission.MANAGE_APP_TOKENS 
NO_CATEGORY android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy.onGesture(I)V
NO_CATEGORY android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy.setConnection(Landroid/accessibilityservice/IAccessibilityServiceConnection;I)V
NO_CATEGORY android.accessibilityservice.IAccessibilityServiceConnection$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy.findAccessibilityNodeInfosByText(IJLjava/lang/String;ILandroid/view/accessibility/IAccessibilityInteractionConnectionCallback;J)F
NO_CATEGORY android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy.performAccessibilityAction(IJILandroid/os/Bundle;ILandroid/view/accessibility/IAccessibilityInteractionConnectionCallback;J)Z
NO_CATEGORY android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy.performGlobalAction(I)Z
NO_CATEGORY android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy.setServiceInfo(Landroid/accessibilityservice/AccessibilityServiceInfo;)V
NO_CATEGORY android.accessibilityservice.UiTestAutomationBridge.performAccessibilityAction(IJILandroid/os/Bundle;)Z
NO_CATEGORY android.accessibilityservice.UiTestAutomationBridge.performAccessibilityActionInActiveWindow(JILandroid/os/Bundle;)Z
#NO_CATEGORY android.animation.AnimatorSet$Builder.after(Landroid/animation/Animator;)Landroid/animation/AnimatorSet$Builder;
#NO_CATEGORY android.animation.AnimatorSet$Builder.before(Landroid/animation/Animator;)Landroid/animation/AnimatorSet$Builder;
#NO_CATEGORY android.animation.AnimatorSet$Builder.with(Landroid/animation/Animator;)Landroid/animation/AnimatorSet$Builder;
#NO_CATEGORY android.animation.AnimatorSet$DependencyListener.onAnimationEnd(Landroid/animation/Animator;)V
#NO_CATEGORY android.animation.AnimatorSet$DependencyListener.onAnimationStart(Landroid/animation/Animator;)V
#NO_CATEGORY android.animation.AnimatorSet.setDuration(J)Landroid/animation/Animator;
#NO_CATEGORY android.animation.AnimatorSet.setTarget(Ljava/lang/Object;)V
#NO_CATEGORY android.animation.Animator.setTarget(Ljava/lang/Object;)V
#NO_CATEGORY android.animation.Keyframe$FloatKeyframe.setValue(Ljava/lang/Object;)V
#NO_CATEGORY android.animation.Keyframe$IntKeyframe.setValue(Ljava/lang/Object;)V
#NO_CATEGORY android.animation.ObjectAnimator.setDuration(J)Landroid/animation/Animator;
#NO_CATEGORY android.animation.ObjectAnimator.setFloatValues([F)V
#NO_CATEGORY android.animation.ObjectAnimator.setIntValues([I)V
#NO_CATEGORY android.animation.ObjectAnimator.setObjectValues([Ljava/lang/Object;)V
#NO_CATEGORY android.animation.ObjectAnimator.setPropertyName(Ljava/lang/String;)V
#NO_CATEGORY android.animation.PropertyValuesHolder$FloatPropertyValuesHolder.setFloatValues([F)V
#NO_CATEGORY android.animation.PropertyValuesHolder$FloatPropertyValuesHolder.setupSetter(Ljava/lang/Class;)V
#NO_CATEGORY android.animation.PropertyValuesHolder$IntPropertyValuesHolder.setIntValues([I)V
#NO_CATEGORY android.animation.PropertyValuesHolder$IntPropertyValuesHolder.setupSetter(Ljava/lang/Class;)V
#NO_CATEGORY android.animation.PropertyValuesHolder.setFloatValues([F)V
#NO_CATEGORY android.animation.PropertyValuesHolder.setIntValues([I)V
#NO_CATEGORY android.animation.PropertyValuesHolder.setKeyframes([Landroid/animation/Keyframe;)V
#NO_CATEGORY android.animation.PropertyValuesHolder.setObjectValues([Ljava/lang/Object;)V
#NO_CATEGORY android.animation.PropertyValuesHolder.setupEndValue(Ljava/lang/Object;)V
#NO_CATEGORY android.animation.PropertyValuesHolder.setupSetter(Ljava/lang/Class;)V
#NO_CATEGORY android.animation.PropertyValuesHolder.setupStartValue(Ljava/lang/Object;)V
#NO_CATEGORY android.animation.ValueAnimator.setDuration(J)Landroid/animation/Animator;
#NO_CATEGORY android.animation.ValueAnimator.setFloatValues([F)V
#NO_CATEGORY android.animation.ValueAnimator.setFrameDelay(J)V
#NO_CATEGORY android.animation.ValueAnimator.setIntValues([I)V
#NO_CATEGORY android.animation.ValueAnimator.setObjectValues([Ljava/lang/Object;)V
#NO_CATEGORY android.animation.ValueAnimator.setValues([Landroid/animation/PropertyValuesHolder;)V
#NO_CATEGORY android.app.ActionBar.setHomeButtonEnabled(Z)V
#NO_CATEGORY android.app.ActionBar.setSplitBackgroundDrawable(Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY android.app.ActionBar.setStackedBackgroundDrawable(Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY android.app.ActivityManagerNative.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY android.app.ActivityManagerProxy.activityDestroyed(Landroid/os/IBinder;)V
#NO_CATEGORY android.app.ActivityManagerProxy.activityIdle(Landroid/os/IBinder;Landroid/content/res/Configuration;Z)V
#NO_CATEGORY android.app.ActivityManagerProxy.activityPaused(Landroid/os/IBinder;)V
#NO_CATEGORY android.app.ActivityManagerProxy.activityResumed(Landroid/os/IBinder;)V
#NO_CATEGORY android.app.ActivityManagerProxy.activitySlept(Landroid/os/IBinder;)V
#NO_CATEGORY android.app.ActivityManagerProxy.activityStopped(Landroid/os/IBinder;Landroid/os/Bundle;Landroid/graphics/Bitmap;Ljava/lang/CharSequence;)V
#NO_CATEGORY android.app.ActivityManagerProxy.attachApplication(Landroid/app/IApplicationThread;)V
#NO_CATEGORY android.app.ActivityManagerProxy.backupAgentCreated(Ljava/lang/String;Landroid/os/IBinder;)V
#NO_CATEGORY android.app.ActivityManagerProxy.bindBackupAgent(Landroid/content/pm/ApplicationInfo;I)Z
#NO_CATEGORY android.app.ActivityManagerProxy.bindService(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;II)I
#NO_CATEGORY android.app.ActivityManagerProxy.broadcastIntent(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;ZZI)I
#NO_CATEGORY android.app.ActivityManagerProxy.cancelIntentSender(Landroid/content/IIntentSender;)V
#NO_CATEGORY android.app.ActivityManagerProxy.checkGrantUriPermission(ILjava/lang/String;Landroid/net/Uri;I)I
#NO_CATEGORY android.app.ActivityManagerProxy.checkPermission(Ljava/lang/String;II)I
#NO_CATEGORY android.app.ActivityManagerProxy.checkUriPermission(Landroid/net/Uri;III)I
#NO_CATEGORY android.app.ActivityManagerProxy.clearApplicationUserData(Ljava/lang/String;Landroid/content/pm/IPackageDataObserver;I)Z
#NO_CATEGORY android.app.ActivityManagerProxy.closeSystemDialogs(Ljava/lang/String;)V
#NO_CATEGORY android.app.ActivityManagerProxy.crashApplication(IILjava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY android.app.ActivityManagerProxy.dumpHeap(Ljava/lang/String;IZLjava/lang/String;Landroid/os/ParcelFileDescriptor;)Z
#NO_CATEGORY android.app.ActivityManagerProxy.finishActivityAffinity(Landroid/os/IBinder;)Z
#NO_CATEGORY android.app.ActivityManagerProxy.finishActivity(Landroid/os/IBinder;ILandroid/content/Intent;)Z
#NO_CATEGORY android.app.ActivityManagerProxy.finishInstrumentation(Landroid/app/IApplicationThread;ILandroid/os/Bundle;)V
#NO_CATEGORY android.app.ActivityManagerProxy.finishReceiver(Landroid/os/IBinder;ILjava/lang/String;Landroid/os/Bundle;Z)V
#NO_CATEGORY android.app.ActivityManagerProxy.finishSubActivity(Landroid/os/IBinder;Ljava/lang/String;I)V
#NO_CATEGORY android.app.ActivityManagerProxy.forceStopPackage(Ljava/lang/String;I)V
#NO_CATEGORY android.app.ActivityManagerProxy.grantUriPermissionFromOwner(Landroid/os/IBinder;ILjava/lang/String;Landroid/net/Uri;I)V
#NO_CATEGORY android.app.ActivityManagerProxy.grantUriPermission(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/net/Uri;I)V
#NO_CATEGORY android.app.ActivityManagerProxy.handleApplicationCrash(Landroid/os/IBinder;Landroid/app/ApplicationErrorReport$CrashInfo;)V
#NO_CATEGORY android.app.ActivityManagerProxy.handleApplicationStrictModeViolation(Landroid/os/IBinder;ILandroid/os/StrictMode$ViolationInfo;)V
#NO_CATEGORY android.app.ActivityManagerProxy.handleApplicationWtf(Landroid/os/IBinder;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)Z
#NO_CATEGORY android.app.ActivityManagerProxy.handleIncomingUser(IIIZZLjava/lang/String;Ljava/lang/String;)I
#NO_CATEGORY android.app.ActivityManagerProxy.isImmersive(Landroid/os/IBinder;)Z
#NO_CATEGORY android.app.ActivityManagerProxy.isIntentSenderAnActivity(Landroid/content/IIntentSender;)Z
#NO_CATEGORY android.app.ActivityManagerProxy.isIntentSenderTargetedToPackage(Landroid/content/IIntentSender;)Z
#NO_CATEGORY android.app.ActivityManagerProxy.killApplicationProcess(Ljava/lang/String;I)V
#NO_CATEGORY android.app.ActivityManagerProxy.killApplicationWithAppId(Ljava/lang/String;I)V
#NO_CATEGORY android.app.ActivityManagerProxy.killBackgroundProcesses(Ljava/lang/String;I)V
#NO_CATEGORY android.app.ActivityManagerProxy.killPids([ILjava/lang/String;Z)Z
#NO_CATEGORY android.app.ActivityManagerProxy.killProcessesBelowForeground(Ljava/lang/String;)Z
#NO_CATEGORY android.app.ActivityManagerProxy.moveActivityTaskToBack(Landroid/os/IBinder;Z)Z
#NO_CATEGORY android.app.ActivityManagerProxy.moveTaskBackwards(I)V
#NO_CATEGORY android.app.ActivityManagerProxy.moveTaskToBack(I)V
#NO_CATEGORY android.app.ActivityManagerProxy.moveTaskToFront(IILandroid/os/Bundle;)V
#NO_CATEGORY android.app.ActivityManagerProxy.navigateUpTo(Landroid/os/IBinder;Landroid/content/Intent;ILandroid/content/Intent;)Z
#NO_CATEGORY android.app.ActivityManagerProxy.newUriPermissionOwner(Ljava/lang/String;)Landroid/os/IBinder;
#NO_CATEGORY android.app.ActivityManagerProxy.noteWakeupAlarm(Landroid/content/IIntentSender;)V
#NO_CATEGORY android.app.ActivityManagerProxy.overridePendingTransition(Landroid/os/IBinder;Ljava/lang/String;II)V
#NO_CATEGORY android.app.ActivityManagerProxy.peekService(Landroid/content/Intent;Ljava/lang/String;)Landroid/os/IBinder;
#NO_CATEGORY android.app.ActivityManagerProxy.profileControl(Ljava/lang/String;IZLjava/lang/String;Landroid/os/ParcelFileDescriptor;I)Z
#NO_CATEGORY android.app.ActivityManagerProxy.publishContentProviders(Landroid/app/IApplicationThread;Ljava/util/List;)V
#NO_CATEGORY android.app.ActivityManagerProxy.publishService(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/IBinder;)V
#NO_CATEGORY android.app.ActivityManagerProxy.refContentProvider(Landroid/os/IBinder;II)Z
#NO_CATEGORY android.app.ActivityManagerProxy.registerProcessObserver(Landroid/app/IProcessObserver;)V
#NO_CATEGORY android.app.ActivityManagerProxy.registerReceiver(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/IIntentReceiver;Landroid/content/IntentFilter;Ljava/lang/String;I)Landroid/content/Intent;
#NO_CATEGORY android.app.ActivityManagerProxy.registerUserSwitchObserver(Landroid/app/IUserSwitchObserver;)V
#NO_CATEGORY android.app.ActivityManagerProxy.removeContentProviderExternal(Ljava/lang/String;Landroid/os/IBinder;)V
#NO_CATEGORY android.app.ActivityManagerProxy.removeContentProvider(Landroid/os/IBinder;Z)V
#NO_CATEGORY android.app.ActivityManagerProxy.removeSubTask(II)Z
#NO_CATEGORY android.app.ActivityManagerProxy.removeTask(II)Z
#NO_CATEGORY android.app.ActivityManagerProxy.reportThumbnail(Landroid/os/IBinder;Landroid/graphics/Bitmap;Ljava/lang/CharSequence;)V
#NO_CATEGORY android.app.ActivityManagerProxy.serviceDoneExecuting(Landroid/os/IBinder;III)V
#NO_CATEGORY android.app.ActivityManagerProxy.setActivityController(Landroid/app/IActivityController;)V
#NO_CATEGORY android.app.ActivityManagerProxy.setAlwaysFinish(Z)V
#NO_CATEGORY android.app.ActivityManagerProxy.setDebugApp(Ljava/lang/String;ZZ)V
#NO_CATEGORY android.app.ActivityManagerProxy.setFrontActivityScreenCompatMode(I)V
#NO_CATEGORY android.app.ActivityManagerProxy.setImmersive(Landroid/os/IBinder;Z)V
#NO_CATEGORY android.app.ActivityManagerProxy.setLockScreenShown(Z)V
#NO_CATEGORY android.app.ActivityManagerProxy.setPackageAskScreenCompat(Ljava/lang/String;Z)V
#NO_CATEGORY android.app.ActivityManagerProxy.setPackageScreenCompatMode(Ljava/lang/String;I)V
#NO_CATEGORY android.app.ActivityManagerProxy.setProcessForeground(Landroid/os/IBinder;IZ)V
#NO_CATEGORY android.app.ActivityManagerProxy.setProcessLimit(I)V
#NO_CATEGORY android.app.ActivityManagerProxy.setRequestedOrientation(Landroid/os/IBinder;I)V
#NO_CATEGORY android.app.ActivityManagerProxy.setServiceForeground(Landroid/content/ComponentName;Landroid/os/IBinder;ILandroid/app/Notification;Z)V
#NO_CATEGORY android.app.ActivityManagerProxy.showWaitingForDebugger(Landroid/app/IApplicationThread;Z)V
#NO_CATEGORY android.app.ActivityManagerProxy.shutdown(I)Z
#NO_CATEGORY android.app.ActivityManagerProxy.signalPersistentProcesses(I)V
#NO_CATEGORY android.app.ActivityManagerProxy.startActivities(Landroid/app/IApplicationThread;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I
#NO_CATEGORY android.app.ActivityManagerProxy.startActivityAndWait(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILjava/lang/String;Landroid/os/ParcelFileDescriptor;Landroid/os/Bundle;I)Landroid/app/IActivityManager$WaitResult;
#NO_CATEGORY android.app.ActivityManagerProxy.startActivityAsUser(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILjava/lang/String;Landroid/os/ParcelFileDescriptor;Landroid/os/Bundle;I)I
#NO_CATEGORY android.app.ActivityManagerProxy.startActivityIntentSender(Landroid/app/IApplicationThread;Landroid/content/IntentSender;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I
#NO_CATEGORY android.app.ActivityManagerProxy.startActivity(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILjava/lang/String;Landroid/os/ParcelFileDescriptor;Landroid/os/Bundle;)I
#NO_CATEGORY android.app.ActivityManagerProxy.startActivityWithConfig(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/content/res/Configuration;Landroid/os/Bundle;I)I
#NO_CATEGORY android.app.ActivityManagerProxy.startInstrumentation(Landroid/content/ComponentName;Ljava/lang/String;ILandroid/os/Bundle;Landroid/app/IInstrumentationWatcher;I)Z
#NO_CATEGORY android.app.ActivityManagerProxy.startNextMatchingActivity(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/Bundle;)Z
#NO_CATEGORY android.app.ActivityManagerProxy.startRunning(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY android.app.ActivityManagerProxy.startService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;I)Landroid/content/ComponentName;
#NO_CATEGORY android.app.ActivityManagerProxy.stopService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;I)I
#NO_CATEGORY android.app.ActivityManagerProxy.stopServiceToken(Landroid/content/ComponentName;Landroid/os/IBinder;I)Z
#NO_CATEGORY android.app.ActivityManagerProxy.stopUser(ILandroid/app/IStopUserCallback;)I
#NO_CATEGORY android.app.ActivityManagerProxy.switchUser(I)Z
#NO_CATEGORY android.app.ActivityManagerProxy.targetTaskAffinityMatchesActivity(Landroid/os/IBinder;Ljava/lang/String;)Z
#NO_CATEGORY android.app.ActivityManagerProxy.unbindFinished(Landroid/os/IBinder;Landroid/content/Intent;Z)V
#NO_CATEGORY android.app.ActivityManagerProxy.unbindService(Landroid/app/IServiceConnection;)Z
#NO_CATEGORY android.app.ActivityManagerProxy.unbroadcastIntent(Landroid/app/IApplicationThread;Landroid/content/Intent;I)V
#NO_CATEGORY android.app.ActivityManagerProxy.unregisterProcessObserver(Landroid/app/IProcessObserver;)V
#NO_CATEGORY android.app.ActivityManagerProxy.unregisterReceiver(Landroid/content/IIntentReceiver;)V
#NO_CATEGORY android.app.ActivityManagerProxy.unregisterUserSwitchObserver(Landroid/app/IUserSwitchObserver;)V
#NO_CATEGORY android.app.ActivityManagerProxy.unstableProviderDied(Landroid/os/IBinder;)V
#NO_CATEGORY android.app.ActivityManagerProxy.willActivityBeVisible(Landroid/os/IBinder;)Z

NO_CATEGORY android.app.ActivityManager$RecentTaskInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.app.ActivityManager$RunningAppProcessInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.app.ActivityManager$RunningServiceInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.app.ActivityManager$RunningTaskInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.app.ActivityManager.setFrontActivityScreenCompatMode(I)V
NO_CATEGORY android.app.ActivityManager.setPackageAskScreenCompat(Ljava/lang/String;Z)V
NO_CATEGORY android.app.ActivityManager.setPackageScreenCompatMode(Ljava/lang/String;I)V
NO_CATEGORY android.app.ActivityManager$TaskThumbnails.writeToParcel(Landroid/os/Parcel;I)V
ICC android.app.Activity.setResult(I)V
ICC android.app.Activity.setResult(ILandroid/content/Intent;)V
ICC android.app.Activity.startActivities([Landroid/content/Intent;Landroid/os/Bundle;)V
ICC android.app.Activity.startActivities([Landroid/content/Intent;)V
ICC android.app.Activity.startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
ICC android.app.Activity.startActivityForResult(Landroid/content/Intent;ILandroid/os/Bundle;)V
ICC android.app.Activity.startActivityForResult(Landroid/content/Intent;I)V
ICC android.app.Activity.startActivityFromChild(Landroid/app/Activity;Landroid/content/Intent;ILandroid/os/Bundle;)V
ICC android.app.Activity.startActivityFromChild(Landroid/app/Activity;Landroid/content/Intent;I)V
ICC android.app.Activity.startActivityFromFragment(Landroid/app/Fragment;Landroid/content/Intent;ILandroid/os/Bundle;)V
ICC android.app.Activity.startActivityFromFragment(Landroid/app/Fragment;Landroid/content/Intent;I)V
ICC android.app.Activity.startActivityIfNeeded(Landroid/content/Intent;ILandroid/os/Bundle;)Z
ICC android.app.Activity.startActivityIfNeeded(Landroid/content/Intent;I)Z
ICC android.app.Activity.startActivity(Landroid/content/Intent;Landroid/os/Bundle;)V
ICC android.app.Activity.startActivity(Landroid/content/Intent;)V
ICC android.app.Activity.startIntentSenderForResult(Landroid/content/IntentSender;ILandroid/content/Intent;IIILandroid/os/Bundle;)V
ICC android.app.Activity.startIntentSenderForResult(Landroid/content/IntentSender;ILandroid/content/Intent;III)V
ICC android.app.Activity.startIntentSenderFromChild(Landroid/app/Activity;Landroid/content/IntentSender;ILandroid/content/Intent;IIILandroid/os/Bundle;)V
ICC android.app.Activity.startIntentSenderFromChild(Landroid/app/Activity;Landroid/content/IntentSender;ILandroid/content/Intent;III)V
ICC android.app.Activity.startIntentSender(Landroid/content/IntentSender;Landroid/content/Intent;IIILandroid/os/Bundle;)V
ICC android.app.Activity.startIntentSender(Landroid/content/IntentSender;Landroid/content/Intent;III)V
ICC android.app.Activity.startNextMatchingActivity(Landroid/content/Intent;Landroid/os/Bundle;)Z
ICC android.app.Activity.startNextMatchingActivity(Landroid/content/Intent;)Z android.permission.BROADCAST_STICKY android.permission.MANAGE_APP_TOKENS 

# NO_CATEGORY android.app.Activity.navigateUpTo(Landroid/content/Intent;)Z
# NO_CATEGORY android.app.Activity.onCreate(Landroid/os/Bundle;)V
# NO_CATEGORY android.app.Activity.onKeyDown(ILandroid/view/KeyEvent;)Z
# NO_CATEGORY android.app.Activity.onRestoreInstanceState(Landroid/os/Bundle;)V
# NO_CATEGORY android.app.Activity.onWindowAttributesChanged(Landroid/view/WindowManager$LayoutParams;)V
# NO_CATEGORY android.app.Activity.openContextMenu(Landroid/view/View;)V
# NO_CATEGORY android.app.Activity.setContentView(I)V
# NO_CATEGORY android.app.Activity.setContentView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V
# NO_CATEGORY android.app.Activity.setContentView(Landroid/view/View;)V
# NO_CATEGORY android.app.Activity.setFeatureDrawableAlpha(II)V
# NO_CATEGORY android.app.Activity.setFeatureDrawable(ILandroid/graphics/drawable/Drawable;)V
# NO_CATEGORY android.app.Activity.setFeatureDrawableResource(II)V
# NO_CATEGORY android.app.Activity.setFinishOnTouchOutside(Z)V
# NO_CATEGORY android.app.Activity.setImmersive(Z)V
# NO_CATEGORY android.app.Activity.setPersistent(Z)V
# NO_CATEGORY android.app.Activity.setProgressBarIndeterminateVisibility(Z)V
# NO_CATEGORY android.app.Activity.setProgressBarIndeterminate(Z)V
# NO_CATEGORY android.app.Activity.setProgressBarVisibility(Z)V
# NO_CATEGORY android.app.Activity.setProgress(I)V
# NO_CATEGORY android.app.Activity.setRequestedOrientation(I)V
# NO_CATEGORY android.app.Activity.setSecondaryProgress(I)V
# NO_CATEGORY android.app.Activity.setTitle(I)V
# NO_CATEGORY android.app.Activity.setVolumeControlStream(I)V
# NO_CATEGORY android.app.Activity.showDialog(ILandroid/os/Bundle;)Z
# NO_CATEGORY android.app.Activity.startActionMode(Landroid/view/ActionMode$Callback;)Landroid/view/ActionMode;
# NO_CATEGORY android.app.Activity.startSearch(Ljava/lang/String;ZLandroid/os/Bundle;Z)V android.permission.GLOBAL_SEARCH 
NO_CATEGORY android.app.ActivityThread$ApplicationThread.dispatchPackageBroadcast(I[Ljava/lang/String;)V
NO_CATEGORY android.app.ActivityThread$ApplicationThread.scheduleLaunchActivity(Landroid/content/Intent;Landroid/os/IBinder;ILandroid/content/pm/ActivityInfo;Landroid/content/res/Configuration;Landroid/content/res/CompatibilityInfo;Landroid/os/Bundle;Ljava/util/List;Ljava/util/List;ZZLjava/lang/String;Landroid/os/ParcelFileDescriptor;Z)V
NO_CATEGORY android.app.ActivityThread$ApplicationThread.setCoreSettings(Landroid/os/Bundle;)V
NO_CATEGORY android.app.ActivityThread$ApplicationThread.setHttpProxy(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.app.ActivityThread$ApplicationThread.setSchedulingGroup(I)V
NO_CATEGORY android.app.ActivityThread$EventLoggingReporter.report(I[Ljava/lang/Object;)V
NO_CATEGORY android.app.ActivityThread$H.handleMessage(Landroid/os/Message;)V
NO_CATEGORY android.app.ActivityThread.registerOnActivityPausedListener(Landroid/app/Activity;Landroid/app/OnActivityPausedListener;)V
NO_CATEGORY android.app.admin.DeviceAdminInfo.dump(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY android.app.admin.DeviceAdminInfo.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.app.AlarmManager.set(IJLandroid/app/PendingIntent;)V
#NO_CATEGORY android.app.AlarmManager.setInexactRepeating(IJJLandroid/app/PendingIntent;)V
#NO_CATEGORY android.app.AlarmManager.setRepeating(IJJLandroid/app/PendingIntent;)V
#NO_CATEGORY android.app.AlarmManager.setTime(J)V
#NO_CATEGORY android.app.AlarmManager.setTimeZone(Ljava/lang/String;)V
#NO_CATEGORY android.app.AlertDialog$Builder.setIconAttribute(I)Landroid/app/AlertDialog$Builder;
#NO_CATEGORY android.app.AlertDialog$Builder.setItems(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;
#NO_CATEGORY android.app.AlertDialog$Builder.setMessage(I)Landroid/app/AlertDialog$Builder;
#NO_CATEGORY android.app.AlertDialog$Builder.setMultiChoiceItems(I[ZLandroid/content/DialogInterface$OnMultiChoiceClickListener;)Landroid/app/AlertDialog$Builder;
#NO_CATEGORY android.app.AlertDialog$Builder.setNegativeButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;
#NO_CATEGORY android.app.AlertDialog$Builder.setNeutralButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;
#NO_CATEGORY android.app.AlertDialog$Builder.setPositiveButton(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;
#NO_CATEGORY android.app.AlertDialog$Builder.setSingleChoiceItems(IILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;
#NO_CATEGORY android.app.AlertDialog$Builder.setTitle(I)Landroid/app/AlertDialog$Builder;
#NO_CATEGORY android.app.AlertDialog.setButton(ILjava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)V
#NO_CATEGORY android.app.AlertDialog.setButton(ILjava/lang/CharSequence;Landroid/os/Message;)V
#NO_CATEGORY android.app.AlertDialog.setCustomTitle(Landroid/view/View;)V
#NO_CATEGORY android.app.AlertDialog.setIconAttribute(I)V
#NO_CATEGORY android.app.AlertDialog.setIcon(I)V
#NO_CATEGORY android.app.AlertDialog.setIcon(Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY android.app.AlertDialog.setInverseBackgroundForced(Z)V
#NO_CATEGORY android.app.AlertDialog.setView(Landroid/view/View;IIII)V
#NO_CATEGORY android.app.AlertDialog.setView(Landroid/view/View;)V
NO_CATEGORY android.app.Application.bindService(Landroid/content/Intent;Landroid/content/ServiceConnection;I)Z android.permission.MANAGE_APP_TOKENS 
NO_CATEGORY android.app.ApplicationErrorReport$AnrInfo.dump(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY android.app.ApplicationErrorReport$BatteryInfo.dump(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY android.app.ApplicationErrorReport$CrashInfo.dump(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY android.app.ApplicationErrorReport.dump(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY android.app.ApplicationErrorReport$RunningServiceInfo.dump(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY android.app.ApplicationErrorReport.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.app.ApplicationPackageManager.addPackageToPreferred(Ljava/lang/String;)V
NO_CATEGORY android.app.ApplicationPackageManager.addPermission(Landroid/content/pm/PermissionInfo;)Z
NO_CATEGORY android.app.ApplicationPackageManager.hasSystemFeature(Ljava/lang/String;)Z
NO_CATEGORY android.app.ApplicationPackageManager.setApplicationEnabledSetting(Ljava/lang/String;II)V
NO_CATEGORY android.app.ApplicationPackageManager.setComponentEnabledSetting(Landroid/content/ComponentName;II)V
NO_CATEGORY android.app.ApplicationPackageManager.setInstallerPackageName(Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY android.app.ApplicationThreadProxy.bindApplication(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/util/List;Landroid/content/ComponentName;Ljava/lang/String;Landroid/os/ParcelFileDescriptor;ZLandroid/os/Bundle;Landroid/app/IInstrumentationWatcher;IZZZLandroid/content/res/Configuration;Landroid/content/res/CompatibilityInfo;Ljava/util/Map;Landroid/os/Bundle;)V
#NO_CATEGORY android.app.ApplicationThreadProxy.dispatchPackageBroadcast(I[Ljava/lang/String;)V
#NO_CATEGORY android.app.ApplicationThreadProxy.dumpHeap(ZLjava/lang/String;Landroid/os/ParcelFileDescriptor;)V
#NO_CATEGORY android.app.ApplicationThreadProxy.profilerControl(ZLjava/lang/String;Landroid/os/ParcelFileDescriptor;I)V
#NO_CATEGORY android.app.ApplicationThreadProxy.requestThumbnail(Landroid/os/IBinder;)V
#NO_CATEGORY android.app.ApplicationThreadProxy.scheduleActivityConfigurationChanged(Landroid/os/IBinder;)V
#NO_CATEGORY android.app.ApplicationThreadProxy.scheduleBindService(Landroid/os/IBinder;Landroid/content/Intent;Z)V
#NO_CATEGORY android.app.ApplicationThreadProxy.scheduleCrash(Ljava/lang/String;)V
#NO_CATEGORY android.app.ApplicationThreadProxy.scheduleCreateBackupAgent(Landroid/content/pm/ApplicationInfo;Landroid/content/res/CompatibilityInfo;I)V
#NO_CATEGORY android.app.ApplicationThreadProxy.scheduleCreateService(Landroid/os/IBinder;Landroid/content/pm/ServiceInfo;Landroid/content/res/CompatibilityInfo;)V
#NO_CATEGORY android.app.ApplicationThreadProxy.scheduleDestroyActivity(Landroid/os/IBinder;ZI)V
#NO_CATEGORY android.app.ApplicationThreadProxy.scheduleLaunchActivity(Landroid/content/Intent;Landroid/os/IBinder;ILandroid/content/pm/ActivityInfo;Landroid/content/res/Configuration;Landroid/content/res/CompatibilityInfo;Landroid/os/Bundle;Ljava/util/List;Ljava/util/List;ZZLjava/lang/String;Landroid/os/ParcelFileDescriptor;Z)V
#NO_CATEGORY android.app.ApplicationThreadProxy.scheduleNewIntent(Ljava/util/List;Landroid/os/IBinder;)V
#NO_CATEGORY android.app.ApplicationThreadProxy.schedulePauseActivity(Landroid/os/IBinder;ZZI)V
#NO_CATEGORY android.app.ApplicationThreadProxy.scheduleReceiver(Landroid/content/Intent;Landroid/content/pm/ActivityInfo;Landroid/content/res/CompatibilityInfo;ILjava/lang/String;Landroid/os/Bundle;ZI)V
#NO_CATEGORY android.app.ApplicationThreadProxy.scheduleRegisteredReceiver(Landroid/content/IIntentReceiver;Landroid/content/Intent;ILjava/lang/String;Landroid/os/Bundle;ZZI)V
#NO_CATEGORY android.app.ApplicationThreadProxy.scheduleRelaunchActivity(Landroid/os/IBinder;Ljava/util/List;Ljava/util/List;IZLandroid/content/res/Configuration;)V
#NO_CATEGORY android.app.ApplicationThreadProxy.scheduleResumeActivity(Landroid/os/IBinder;Z)V
#NO_CATEGORY android.app.ApplicationThreadProxy.scheduleSendResult(Landroid/os/IBinder;Ljava/util/List;)V
#NO_CATEGORY android.app.ApplicationThreadProxy.scheduleServiceArgs(Landroid/os/IBinder;ZIILandroid/content/Intent;)V
#NO_CATEGORY android.app.ApplicationThreadProxy.scheduleSleeping(Landroid/os/IBinder;Z)V
#NO_CATEGORY android.app.ApplicationThreadProxy.scheduleStopActivity(Landroid/os/IBinder;ZI)V
#NO_CATEGORY android.app.ApplicationThreadProxy.scheduleStopService(Landroid/os/IBinder;)V
#NO_CATEGORY android.app.ApplicationThreadProxy.scheduleTrimMemory(I)V
#NO_CATEGORY android.app.ApplicationThreadProxy.scheduleUnbindService(Landroid/os/IBinder;Landroid/content/Intent;)V
#NO_CATEGORY android.app.ApplicationThreadProxy.scheduleWindowVisibility(Landroid/os/IBinder;Z)V
#NO_CATEGORY android.app.ApplicationThreadProxy.setCoreSettings(Landroid/os/Bundle;)V
#NO_CATEGORY android.app.ApplicationThreadProxy.setHttpProxy(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY android.app.ApplicationThreadProxy.setSchedulingGroup(I)V
#NO_CATEGORY android.app.ApplicationThreadProxy.unstableProviderDied(Landroid/os/IBinder;)V
#NO_CATEGORY android.app.ApplicationThreadProxy.updatePackageCompatibilityInfo(Ljava/lang/String;Landroid/content/res/CompatibilityInfo;)V
#NO_CATEGORY android.app.BackStackRecord.setCustomAnimations(II)Landroid/app/FragmentTransaction;
#NO_CATEGORY android.app.BackStackState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.app.backup.BackupAgentHelper.onBackup(Landroid/os/ParcelFileDescriptor;Landroid/app/backup/BackupDataOutput;Landroid/os/ParcelFileDescriptor;)V
#NO_CATEGORY android.app.backup.BackupAgentHelper.onRestore(Landroid/app/backup/BackupDataInput;ILandroid/os/ParcelFileDescriptor;)V
#NO_CATEGORY android.app.backup.BackupAgentHelper.setWallpaper(Landroid/graphics/Bitmap;)V android.permission.SET_WALLPAPER android.permission.MANAGE_APP_TOKENS 
#NO_CATEGORY android.app.backup.BackupDataOutput.setKeyPrefix(Ljava/lang/String;)V
#NO_CATEGORY android.app.backup.BackupDataOutput.writeEntityData([BI)I
#NO_CATEGORY android.app.backup.BackupDataOutput.writeEntityHeader(Ljava/lang/String;I)I
#NO_CATEGORY android.app.backup.BackupHelperDispatcher.addHelper(Ljava/lang/String;Landroid/app/backup/BackupHelper;)V
#NO_CATEGORY android.app.backup.IBackupManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z android.permission.WRITE_SETTINGS android.permission.WAKE_LOCK 
#NO_CATEGORY android.app.backup.IBackupManager$Stub$Proxy.acknowledgeFullBackupOrRestore(IZLjava/lang/String;Ljava/lang/String;Landroid/app/backup/IFullBackupRestoreObserver;)V
#NO_CATEGORY android.app.backup.IBackupManager$Stub$Proxy.agentConnected(Ljava/lang/String;Landroid/os/IBinder;)V
#NO_CATEGORY android.app.backup.IBackupManager$Stub$Proxy.agentDisconnected(Ljava/lang/String;)V
#NO_CATEGORY android.app.backup.IBackupManager$Stub$Proxy.beginRestoreSession(Ljava/lang/String;Ljava/lang/String;)Landroid/app/backup/IRestoreSession;
#NO_CATEGORY android.app.backup.IBackupManager$Stub$Proxy.clearBackupData(Ljava/lang/String;)V
#NO_CATEGORY android.app.backup.IBackupManager$Stub$Proxy.dataChanged(Ljava/lang/String;)V
#NO_CATEGORY android.app.backup.IBackupManager$Stub$Proxy.fullBackup(Landroid/os/ParcelFileDescriptor;ZZZZ[Ljava/lang/String;)V
#NO_CATEGORY android.app.backup.IBackupManager$Stub$Proxy.opComplete(I)V
#NO_CATEGORY android.app.backup.IBackupManager$Stub$Proxy.restoreAtInstall(Ljava/lang/String;I)V
#NO_CATEGORY android.app.backup.IBackupManager$Stub$Proxy.selectBackupTransport(Ljava/lang/String;)Ljava/lang/String;
#NO_CATEGORY android.app.backup.IBackupManager$Stub$Proxy.setAutoRestore(Z)V
#NO_CATEGORY android.app.backup.IBackupManager$Stub$Proxy.setBackupEnabled(Z)V
#NO_CATEGORY android.app.backup.IBackupManager$Stub$Proxy.setBackupPassword(Ljava/lang/String;Ljava/lang/String;)Z
#NO_CATEGORY android.app.backup.IBackupManager$Stub$Proxy.setBackupProvisioned(Z)V android.permission.STOP_APP_SWITCHES 
#NO_CATEGORY android.app.backup.IFullBackupRestoreObserver$Stub$Proxy.onBackupPackage(Ljava/lang/String;)V
#NO_CATEGORY android.app.backup.IFullBackupRestoreObserver$Stub$Proxy.onRestorePackage(Ljava/lang/String;)V
#NO_CATEGORY android.app.backup.IRestoreObserver$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY android.app.backup.IRestoreObserver$Stub$Proxy.onUpdate(ILjava/lang/String;)V
#NO_CATEGORY android.app.backup.IRestoreObserver$Stub$Proxy.restoreFinished(I)V android.permission.STOP_APP_SWITCHES 
#NO_CATEGORY android.app.backup.IRestoreObserver$Stub$Proxy.restoreSetsAvailable([Landroid/app/backup/RestoreSet;)V
#NO_CATEGORY android.app.backup.IRestoreObserver$Stub$Proxy.restoreStarting(I)V
#NO_CATEGORY android.app.backup.IRestoreSession$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY android.app.backup.IRestoreSession$Stub$Proxy.restoreAll(JLandroid/app/backup/IRestoreObserver;)I
#NO_CATEGORY android.app.backup.IRestoreSession$Stub$Proxy.restorePackage(Ljava/lang/String;Landroid/app/backup/IRestoreObserver;)I
#NO_CATEGORY android.app.backup.IRestoreSession$Stub$Proxy.restoreSome(JLandroid/app/backup/IRestoreObserver;[Ljava/lang/String;)I
#NO_CATEGORY android.app.backup.RestoreSession$RestoreObserverWrapper.restoreFinished(I)V
#NO_CATEGORY android.app.backup.RestoreSession$RestoreObserverWrapper.restoreSetsAvailable([Landroid/app/backup/RestoreSet;)V
#NO_CATEGORY android.app.backup.RestoreSession$RestoreObserverWrapper.restoreStarting(I)V
#NO_CATEGORY android.app.ContextImpl.bindService(Landroid/content/Intent;Landroid/content/ServiceConnection;II)Z
#NO_CATEGORY android.app.ContextImpl.bindService(Landroid/content/Intent;Landroid/content/ServiceConnection;I)Z
#NO_CATEGORY android.app.ContextImpl.openOrCreateDatabase(Ljava/lang/String;ILandroid/database/sqlite/SQLiteDatabase$CursorFactory;Landroid/database/DatabaseErrorHandler;)Landroid/database/sqlite/SQLiteDatabase;
#NO_CATEGORY android.app.ContextImpl.openOrCreateDatabase(Ljava/lang/String;ILandroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;
#NO_CATEGORY android.app.ContextImpl.sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;)V
#NO_CATEGORY android.app.ContextImpl.sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
#NO_CATEGORY android.app.ContextImpl.sendBroadcast(Landroid/content/Intent;Ljava/lang/String;)V
#NO_CATEGORY android.app.ContextImpl.sendBroadcast(Landroid/content/Intent;)V
#NO_CATEGORY android.app.ContextImpl.sendOrderedBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V
#NO_CATEGORY android.app.ContextImpl.sendOrderedBroadcast(Landroid/content/Intent;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V
#NO_CATEGORY android.app.ContextImpl.sendOrderedBroadcast(Landroid/content/Intent;Ljava/lang/String;)V
#NO_CATEGORY android.app.ContextImpl.sendStickyBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
#NO_CATEGORY android.app.ContextImpl.sendStickyBroadcast(Landroid/content/Intent;)V
#NO_CATEGORY android.app.ContextImpl.sendStickyOrderedBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V
#NO_CATEGORY android.app.ContextImpl.sendStickyOrderedBroadcast(Landroid/content/Intent;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V android.permission.BROADCAST_STICKY 
#NO_CATEGORY android.app.ContextImpl.setFilePermissionsFromMode(Ljava/lang/String;II)V
#NO_CATEGORY android.app.ContextImpl.setWallpaper(Landroid/graphics/Bitmap;)V
#NO_CATEGORY android.app.ContextImpl.setWallpaper(Ljava/io/InputStream;)V
#NO_CATEGORY android.app.ContextImpl.startActivities([Landroid/content/Intent;)V
#NO_CATEGORY android.app.ContextImpl.startActivityAsUser(Landroid/content/Intent;Landroid/os/Bundle;Landroid/os/UserHandle;)V
#NO_CATEGORY android.app.ContextImpl.startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
#NO_CATEGORY android.app.ContextImpl.startActivity(Landroid/content/Intent;)V
#NO_CATEGORY android.app.ContextImpl.startInstrumentation(Landroid/content/ComponentName;Ljava/lang/String;Landroid/os/Bundle;)Z
#NO_CATEGORY android.app.ContextImpl.startIntentSender(Landroid/content/IntentSender;Landroid/content/Intent;IIILandroid/os/Bundle;)V
#NO_CATEGORY android.app.ContextImpl.startIntentSender(Landroid/content/IntentSender;Landroid/content/Intent;III)V
#NO_CATEGORY android.app.ContextImpl.startServiceAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)Landroid/content/ComponentName;
#NO_CATEGORY android.app.ContextImpl.startService(Landroid/content/Intent;)Landroid/content/ComponentName;
#NO_CATEGORY android.app.DatePickerDialog.updateDate(III)V
#NO_CATEGORY android.app.Dialog.onRestoreInstanceState(Landroid/os/Bundle;)V
#NO_CATEGORY android.app.Dialog.setCanceledOnTouchOutside(Z)V
#NO_CATEGORY android.app.Dialog.setContentView(I)V
#NO_CATEGORY android.app.Dialog.setContentView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V
#NO_CATEGORY android.app.Dialog.setContentView(Landroid/view/View;)V
#NO_CATEGORY android.app.Dialog.setFeatureDrawableAlpha(II)V android.permission.STOP_APP_SWITCHES 
#NO_CATEGORY android.app.Dialog.setFeatureDrawable(ILandroid/graphics/drawable/Drawable;)V
#NO_CATEGORY android.app.Dialog.setFeatureDrawableResource(II)V
#NO_CATEGORY android.app.Dialog.setTitle(I)V
#NO_CATEGORY android.app.Dialog.setVolumeControlStream(I)V
#NO_CATEGORY android.app.DownloadManager.addCompletedDownload(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;JZ)J
#NO_CATEGORY android.app.DownloadManager$Query.setFilterByStatus(I)Landroid/app/DownloadManager$Query;
#NO_CATEGORY android.app.DownloadManager$Request.setDestinationInExternalPublicDir(Ljava/lang/String;Ljava/lang/String;)Landroid/app/DownloadManager$Request;
#NO_CATEGORY android.app.DownloadManager$Request.setShowRunningNotification(Z)Landroid/app/DownloadManager$Request;
#NO_CATEGORY android.app.DownloadManager$Request.toContentValues(Ljava/lang/String;)Landroid/content/ContentValues;
#NO_CATEGORY android.app.DownloadManager.restartDownload([J)V
#NO_CATEGORY android.app.DownloadManager.setAccessAllDownloads(Z)V
#NO_CATEGORY android.app.ExpandableListActivity.setSelectedChild(IIZ)Z android.permission.STOP_APP_SWITCHES 
#NO_CATEGORY android.app.ExpandableListActivity.setSelectedGroup(I)V
#NO_CATEGORY android.app.Fragment.instantiate(Landroid/content/Context;Ljava/lang/String;Landroid/os/Bundle;)Landroid/app/Fragment;
#NO_CATEGORY android.app.FragmentManagerImpl.dispatchContextItemSelected(Landroid/view/MenuItem;)Z
#NO_CATEGORY android.app.FragmentManagerImpl.dispatchCreateOptionsMenu(Landroid/view/Menu;Landroid/view/MenuInflater;)Z
#NO_CATEGORY android.app.FragmentManagerImpl.dispatchOptionsItemSelected(Landroid/view/MenuItem;)Z
#NO_CATEGORY android.app.FragmentManagerImpl.dispatchOptionsMenuClosed(Landroid/view/Menu;)V
#NO_CATEGORY android.app.FragmentManagerImpl.dispatchPrepareOptionsMenu(Landroid/view/Menu;)Z
#NO_CATEGORY android.app.FragmentManagerImpl.dispatchTrimMemory(I)V
#NO_CATEGORY android.app.FragmentManagerImpl.putFragment(Landroid/os/Bundle;Ljava/lang/String;Landroid/app/Fragment;)V
#NO_CATEGORY android.app.FragmentManagerImpl.saveFragmentBasicState(Landroid/app/Fragment;)Landroid/os/Bundle;
#NO_CATEGORY android.app.FragmentManagerImpl.saveFragmentInstanceState(Landroid/app/Fragment;)Landroid/app/Fragment$SavedState;
#NO_CATEGORY android.app.FragmentManagerState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.app.Fragment.setInitialSavedState(Landroid/app/Fragment$SavedState;)V

ICC android.app.Fragment.startActivityForResult(Landroid/content/Intent;ILandroid/os/Bundle;)V
ICC android.app.Fragment.startActivityForResult(Landroid/content/Intent;I)V
ICC android.app.Fragment.startActivity(Landroid/content/Intent;Landroid/os/Bundle;)V
ICC android.app.Fragment.startActivity(Landroid/content/Intent;)V

#NO_CATEGORY android.app.IActivityController$Stub$Proxy.activityResuming(Ljava/lang/String;)Z
#NO_CATEGORY android.app.IActivityController$Stub$Proxy.activityStarting(Landroid/content/Intent;Ljava/lang/String;)Z
#NO_CATEGORY android.app.IActivityController$Stub$Proxy.appCrashed(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;JLjava/lang/String;)Z
#NO_CATEGORY android.app.IActivityController$Stub$Proxy.appEarlyNotResponding(Ljava/lang/String;ILjava/lang/String;)I
#NO_CATEGORY android.app.IActivityController$Stub$Proxy.appNotResponding(Ljava/lang/String;ILjava/lang/String;)I
#NO_CATEGORY android.app.IActivityManager$ContentProviderHolder.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.app.IActivityManager$WaitResult.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.app.IAlarmManager$Stub$Proxy.set(IJLandroid/app/PendingIntent;)V
#NO_CATEGORY android.app.IAlarmManager$Stub$Proxy.setInexactRepeating(IJJLandroid/app/PendingIntent;)V
#NO_CATEGORY android.app.IAlarmManager$Stub$Proxy.setRepeating(IJJLandroid/app/PendingIntent;)V
#NO_CATEGORY android.app.IAlarmManager$Stub$Proxy.setTime(J)V
#NO_CATEGORY android.app.IAlarmManager$Stub$Proxy.setTimeZone(Ljava/lang/String;)V
#NO_CATEGORY android.app.IBackupAgent$Stub$Proxy.doBackup(Landroid/os/ParcelFileDescriptor;Landroid/os/ParcelFileDescriptor;Landroid/os/ParcelFileDescriptor;ILandroid/app/backup/IBackupManager;)V
#NO_CATEGORY android.app.IBackupAgent$Stub$Proxy.doFullBackup(Landroid/os/ParcelFileDescriptor;ILandroid/app/backup/IBackupManager;)V
#NO_CATEGORY android.app.IBackupAgent$Stub$Proxy.doRestoreFile(Landroid/os/ParcelFileDescriptor;JILjava/lang/String;Ljava/lang/String;JJILandroid/app/backup/IBackupManager;)V
#NO_CATEGORY android.app.IBackupAgent$Stub$Proxy.doRestore(Landroid/os/ParcelFileDescriptor;ILandroid/os/ParcelFileDescriptor;ILandroid/app/backup/IBackupManager;)V
#NO_CATEGORY android.app.IInstrumentationWatcher$Stub$Proxy.instrumentationFinished(Landroid/content/ComponentName;ILandroid/os/Bundle;)V
#NO_CATEGORY android.app.IInstrumentationWatcher$Stub$Proxy.instrumentationStatus(Landroid/content/ComponentName;ILandroid/os/Bundle;)V
#NO_CATEGORY android.app.INotificationManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY android.app.INotificationManager$Stub$Proxy.areNotificationsEnabledForPackage(Ljava/lang/String;)Z
#NO_CATEGORY android.app.INotificationManager$Stub$Proxy.cancelAllNotifications(Ljava/lang/String;I)V
#NO_CATEGORY android.app.INotificationManager$Stub$Proxy.cancelNotificationWithTag(Ljava/lang/String;Ljava/lang/String;II)V
#NO_CATEGORY android.app.INotificationManager$Stub$Proxy.cancelToast(Ljava/lang/String;Landroid/app/ITransientNotification;)V
#NO_CATEGORY android.app.INotificationManager$Stub$Proxy.enqueueNotificationWithTag(Ljava/lang/String;Ljava/lang/String;ILandroid/app/Notification;[II)V
#NO_CATEGORY android.app.INotificationManager$Stub$Proxy.enqueueToast(Ljava/lang/String;Landroid/app/ITransientNotification;I)V
#NO_CATEGORY android.app.INotificationManager$Stub$Proxy.setNotificationsEnabledForPackage(Ljava/lang/String;Z)V
#NO_CATEGORY android.app.Instrumentation.callActivityOnCreate(Landroid/app/Activity;Landroid/os/Bundle;)V
#NO_CATEGORY android.app.Instrumentation.callActivityOnRestoreInstanceState(Landroid/app/Activity;Landroid/os/Bundle;)V
#NO_CATEGORY android.app.Instrumentation.callActivityOnSaveInstanceState(Landroid/app/Activity;Landroid/os/Bundle;)V
#NO_CATEGORY android.app.Instrumentation.execStartActivitiesAsUser(Landroid/content/Context;Landroid/os/IBinder;Landroid/os/IBinder;Landroid/app/Activity;[Landroid/content/Intent;Landroid/os/Bundle;I)V
#NO_CATEGORY android.app.Instrumentation.setInTouchMode(Z)V
#NO_CATEGORY android.app.IProcessObserver$Stub$Proxy.onForegroundActivitiesChanged(IIZ)V
#NO_CATEGORY android.app.IProcessObserver$Stub$Proxy.onImportanceChanged(III)V
#NO_CATEGORY android.app.IProcessObserver$Stub$Proxy.onProcessDied(II)V
#NO_CATEGORY android.app.ISearchManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY android.app.IServiceConnection$Stub$Proxy.connected(Landroid/content/ComponentName;Landroid/os/IBinder;)V
#NO_CATEGORY android.app.IStopUserCallback$Stub$Proxy.userStopAborted(I)V
#NO_CATEGORY android.app.IStopUserCallback$Stub$Proxy.userStopped(I)V
#NO_CATEGORY android.app.IThumbnailReceiver$Stub$Proxy.newThumbnail(ILandroid/graphics/Bitmap;Ljava/lang/CharSequence;)V
#NO_CATEGORY android.app.IThumbnailRetriever$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY android.app.IUiModeManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY android.app.IUiModeManager$Stub$Proxy.disableCarMode(I)V
#NO_CATEGORY android.app.IUiModeManager$Stub$Proxy.enableCarMode(I)V
#NO_CATEGORY android.app.IUiModeManager$Stub$Proxy.setNightMode(I)V
#NO_CATEGORY android.app.IUserSwitchObserver$Stub$Proxy.onUserSwitchComplete(I)V
#NO_CATEGORY android.app.IUserSwitchObserver$Stub$Proxy.onUserSwitching(ILandroid/os/IRemoteCallback;)V
#NO_CATEGORY android.app.IWallpaperManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY android.app.IWallpaperManager$Stub$Proxy.hasNamedWallpaper(Ljava/lang/String;)Z
#NO_CATEGORY android.app.IWallpaperManager$Stub$Proxy.setDimensionHints(II)V
#NO_CATEGORY android.app.IWallpaperManager$Stub$Proxy.setWallpaperComponent(Landroid/content/ComponentName;)V android.permission.SET_WALLPAPER_COMPONENT android.permission.MANAGE_APP_TOKENS android.permission.DEVICE_POWER 
#NO_CATEGORY android.app.IWallpaperManager$Stub$Proxy.setWallpaper(Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;
#NO_CATEGORY android.app.ListActivity.setSelection(I)V
#NO_CATEGORY android.app.ListFragment.setListShownNoAnimation(Z)V
#NO_CATEGORY android.app.ListFragment.setListShown(Z)V
#NO_CATEGORY android.app.ListFragment.setSelection(I)V
#NO_CATEGORY android.app.LoadedApk.forgetReceiverDispatcher(Landroid/content/Context;Landroid/content/BroadcastReceiver;)Landroid/content/IIntentReceiver;
#NO_CATEGORY android.app.LoadedApk.forgetServiceDispatcher(Landroid/content/Context;Landroid/content/ServiceConnection;)Landroid/app/IServiceConnection;
#NO_CATEGORY android.app.LoadedApk$ReceiverDispatcher$InnerReceiver.performReceive(Landroid/content/Intent;ILjava/lang/String;Landroid/os/Bundle;ZZI)V
#NO_CATEGORY android.app.LoadedApk$ServiceDispatcher.doConnected(Landroid/content/ComponentName;Landroid/os/IBinder;)V
#NO_CATEGORY android.app.LoadedApk$WarningContextClassLoader.setClassAssertionStatus(Ljava/lang/String;Z)V
#NO_CATEGORY android.app.LoadedApk$WarningContextClassLoader.setDefaultAssertionStatus(Z)V
#NO_CATEGORY android.app.LoadedApk$WarningContextClassLoader.setPackageAssertionStatus(Ljava/lang/String;Z)V
#NO_CATEGORY android.app.LoaderManagerImpl.installLoader(Landroid/app/LoaderManagerImpl$LoaderInfo;)V
#NO_CATEGORY android.app.LocalActivityManager.dispatchDestroy(Z)V
#NO_CATEGORY android.app.LocalActivityManager.dispatchPause(Z)V
#NO_CATEGORY android.app.LocalActivityManager.startActivity(Ljava/lang/String;Landroid/content/Intent;)Landroid/view/Window;
#NO_CATEGORY android.app.Notification$Action.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.app.Notification$Builder.setAutoCancel(Z)Landroid/app/Notification$Builder;
#NO_CATEGORY android.app.Notification$Builder.setOngoing(Z)Landroid/app/Notification$Builder;
#NO_CATEGORY android.app.Notification$Builder.setOnlyAlertOnce(Z)Landroid/app/Notification$Builder;
#NO_CATEGORY android.app.NotificationManager.notify(ILandroid/app/Notification;)V
#NO_CATEGORY android.app.Notification.setUser(Landroid/os/UserHandle;)V
#NO_CATEGORY android.app.Notification.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.app.PendingIntent.send(ILandroid/app/PendingIntent$OnFinished;Landroid/os/Handler;)V
NO_CATEGORY android.app.PendingIntent.send(I)V
NO_CATEGORY android.app.PendingIntent.send(Landroid/content/Context;ILandroid/content/Intent;Landroid/app/PendingIntent$OnFinished;Landroid/os/Handler;Ljava/lang/String;)V
NO_CATEGORY android.app.PendingIntent.send(Landroid/content/Context;ILandroid/content/Intent;Landroid/app/PendingIntent$OnFinished;Landroid/os/Handler;)V
NO_CATEGORY android.app.PendingIntent.send(Landroid/content/Context;ILandroid/content/Intent;)V
NO_CATEGORY android.app.PendingIntent.writePendingIntentOrNullToParcel(Landroid/app/PendingIntent;Landroid/os/Parcel;)V
#NO_CATEGORY android.app.ReceiverRestrictedContext.bindService(Landroid/content/Intent;Landroid/content/ServiceConnection;I)Z
#NO_CATEGORY android.app.ReceiverRestrictedContext.registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;
#NO_CATEGORY android.app.ReceiverRestrictedContext.registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;
#NO_CATEGORY android.app.ResultInfo.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.app.SearchableInfo.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.app.SearchDialog.setListSelection(I)V
#NO_CATEGORY android.app.SearchDialog.setWorking(Z)V
#NO_CATEGORY android.app.SearchManager.startSearch(Ljava/lang/String;ZLandroid/content/ComponentName;Landroid/os/Bundle;ZLandroid/graphics/Rect;)V
#NO_CATEGORY android.app.SearchManager.startSearch(Ljava/lang/String;ZLandroid/content/ComponentName;Landroid/os/Bundle;Z)V
#NO_CATEGORY android.app.SearchManager.triggerSearch(Ljava/lang/String;Landroid/content/ComponentName;Landroid/os/Bundle;)V
NO_CATEGORY android.app.SharedPreferencesImpl$EditorImpl.putBoolean(Ljava/lang/String;Z)Landroid/content/SharedPreferences$Editor;
NO_CATEGORY android.app.SharedPreferencesImpl$EditorImpl.putFloat(Ljava/lang/String;F)Landroid/content/SharedPreferences$Editor;
NO_CATEGORY android.app.SharedPreferencesImpl$EditorImpl.putInt(Ljava/lang/String;I)Landroid/content/SharedPreferences$Editor;
NO_CATEGORY android.app.SharedPreferencesImpl$EditorImpl.putLong(Ljava/lang/String;J)Landroid/content/SharedPreferences$Editor;
NO_CATEGORY android.app.SharedPreferencesImpl$EditorImpl.putString(Ljava/lang/String;Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;
NO_CATEGORY android.app.SharedPreferencesImpl$EditorImpl.putStringSet(Ljava/lang/String;Ljava/util/Set;)Landroid/content/SharedPreferences$Editor;
NO_CATEGORY android.app.SharedPreferencesImpl$EditorImpl.remove(Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;
#NO_CATEGORY android.app.StatusBarManager.setIcon(Ljava/lang/String;IILjava/lang/String;)V
#NO_CATEGORY android.app.StatusBarManager.setIconVisibility(Ljava/lang/String;Z)V
#NO_CATEGORY android.app.TaskStackBuilder.startActivities(Landroid/os/Bundle;Landroid/os/UserHandle;)V
#NO_CATEGORY android.app.TaskStackBuilder.startActivities(Landroid/os/Bundle;)V
#NO_CATEGORY android.app.WallpaperInfo.dump(Landroid/util/Printer;Ljava/lang/String;)V
#NO_CATEGORY android.app.WallpaperInfo.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.app.WallpaperManager$FastBitmapDrawable.setAlpha(I)V
#NO_CATEGORY android.app.WallpaperManager$FastBitmapDrawable.setBounds(IIII)V
#NO_CATEGORY android.app.WallpaperManager$FastBitmapDrawable.setColorFilter(Landroid/graphics/ColorFilter;)V
#NO_CATEGORY android.app.WallpaperManager$FastBitmapDrawable.setDither(Z)V
#NO_CATEGORY android.app.WallpaperManager$FastBitmapDrawable.setFilterBitmap(Z)V
#NO_CATEGORY android.app.WallpaperManager.sendWallpaperCommand(Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)V
#NO_CATEGORY android.app.WallpaperManager.setWallpaperOffsets(Landroid/os/IBinder;FF)V
#NO_CATEGORY android.appwidget.AppWidgetHost.setUserId(I)V
#NO_CATEGORY android.appwidget.AppWidgetHost.startListeningAsUser(I)V
#NO_CATEGORY android.appwidget.AppWidgetHostView$ParcelableSparseArray$1.createFromParcel(Landroid/os/Parcel;)Landroid/appwidget/AppWidgetHostView$ParcelableSparseArray;
#NO_CATEGORY android.appwidget.AppWidgetHostView.setUserId(I)V
#NO_CATEGORY android.appwidget.AppWidgetHostView.updateAppWidgetOptions(Landroid/os/Bundle;)V
#NO_CATEGORY android.appwidget.AppWidgetHostView.updateAppWidgetSize(Landroid/os/Bundle;IIII)V
#NO_CATEGORY android.appwidget.AppWidgetHostView.updateAppWidgetSize(Landroid/os/Bundle;IIIIZ)V
#NO_CATEGORY android.appwidget.AppWidgetManager.bindAppWidgetIdIfAllowed(ILandroid/content/ComponentName;Landroid/os/Bundle;)Z
#NO_CATEGORY android.appwidget.AppWidgetManager.bindAppWidgetIdIfAllowed(ILandroid/content/ComponentName;)Z
#NO_CATEGORY android.appwidget.AppWidgetManager.bindAppWidgetId(ILandroid/content/ComponentName;Landroid/os/Bundle;)V
#NO_CATEGORY android.appwidget.AppWidgetManager.bindAppWidgetId(ILandroid/content/ComponentName;)V
#NO_CATEGORY android.appwidget.AppWidgetManager.bindRemoteViewsService(ILandroid/content/Intent;Landroid/os/IBinder;Landroid/os/UserHandle;)V
#NO_CATEGORY android.appwidget.AppWidgetManager.notifyAppWidgetViewDataChanged(II)V
#NO_CATEGORY android.appwidget.AppWidgetManager.notifyAppWidgetViewDataChanged([II)V
#NO_CATEGORY android.appwidget.AppWidgetManager.setBindAppWidgetPermission(Ljava/lang/String;Z)V
#NO_CATEGORY android.appwidget.AppWidgetManager.updateAppWidget(ILandroid/widget/RemoteViews;)V
#NO_CATEGORY android.appwidget.AppWidgetManager.updateAppWidget([ILandroid/widget/RemoteViews;)V
#NO_CATEGORY android.appwidget.AppWidgetManager.updateAppWidget(Landroid/content/ComponentName;Landroid/widget/RemoteViews;)V
#NO_CATEGORY android.appwidget.AppWidgetManager.updateAppWidgetOptions(ILandroid/os/Bundle;)V
#NO_CATEGORY android.appwidget.AppWidgetProviderInfo.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl.initialize(Landroid/accounts/Account;Ljava/lang/String;)V
#NO_CATEGORY android.content.BroadcastReceiver$PendingResult.setExtrasClassLoader(Ljava/lang/ClassLoader;)V
#NO_CATEGORY android.content.ClipboardManager.setPrimaryClip(Landroid/content/ClipData;)V
#NO_CATEGORY android.content.ClipboardManager.setText(Ljava/lang/CharSequence;)V
#NO_CATEGORY android.content.ClipData.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.content.ClipDescription.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.content.ComponentName.writeToParcel(Landroid/content/ComponentName;Landroid/os/Parcel;)V
#NO_CATEGORY android.content.ContentProviderNative.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY android.content.ContentProviderOperation$Builder.withSelectionBackReference(II)Landroid/content/ContentProviderOperation$Builder;
#NO_CATEGORY android.content.ContentProviderOperation$Builder.withValueBackReference(Ljava/lang/String;I)Landroid/content/ContentProviderOperation$Builder;
#NO_CATEGORY android.content.ContentProviderOperation$Builder.withValue(Ljava/lang/String;Ljava/lang/Object;)Landroid/content/ContentProviderOperation$Builder;
#NO_CATEGORY android.content.ContentProviderOperation$Builder.withValues(Landroid/content/ContentValues;)Landroid/content/ContentProviderOperation$Builder;
#NO_CATEGORY android.content.ContentProviderOperation.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.content.ContentProviderProxy.applyBatch(Ljava/util/ArrayList;)[Landroid/content/ContentProviderResult;
#NO_CATEGORY android.content.ContentProviderProxy.bulkInsert(Landroid/net/Uri;[Landroid/content/ContentValues;)I
#NO_CATEGORY android.content.ContentProviderProxy.call(Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle;
#NO_CATEGORY android.content.ContentProviderProxy.delete(Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)I
#NO_CATEGORY android.content.ContentProviderProxy.update(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
#NO_CATEGORY android.content.ContentProviderResult.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.content.ContentResolver.notifyChange(Landroid/net/Uri;Landroid/database/ContentObserver;)V
#NO_CATEGORY android.content.ContentResolver.notifyChange(Landroid/net/Uri;Landroid/database/ContentObserver;ZI)V
#NO_CATEGORY android.content.ContentResolver.notifyChange(Landroid/net/Uri;Landroid/database/ContentObserver;Z)V
#NO_CATEGORY android.content.ContentService.notifyChange(Landroid/net/Uri;Landroid/database/IContentObserver;ZZ)V
#NO_CATEGORY android.content.ContentValues.putAll(Landroid/content/ContentValues;)V
#NO_CATEGORY android.content.ContentValues.put(Ljava/lang/String;[B)V
#NO_CATEGORY android.content.ContentValues.put(Ljava/lang/String;Ljava/lang/Boolean;)V
#NO_CATEGORY android.content.ContentValues.put(Ljava/lang/String;Ljava/lang/Byte;)V
#NO_CATEGORY android.content.ContentValues.put(Ljava/lang/String;Ljava/lang/Double;)V
#NO_CATEGORY android.content.ContentValues.put(Ljava/lang/String;Ljava/lang/Float;)V
#NO_CATEGORY android.content.ContentValues.put(Ljava/lang/String;Ljava/lang/Integer;)V
#NO_CATEGORY android.content.ContentValues.put(Ljava/lang/String;Ljava/lang/Long;)V
#NO_CATEGORY android.content.ContentValues.put(Ljava/lang/String;Ljava/lang/Short;)V
#NO_CATEGORY android.content.ContentValues.put(Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY android.content.ContentValues.putNull(Ljava/lang/String;)V
#NO_CATEGORY android.content.ContentValues.putStringArrayList(Ljava/lang/String;Ljava/util/ArrayList;)V
NO_CATEGORY android.content.Context.bindService(Landroid/content/Intent;Landroid/content/ServiceConnection;II)Z
NO_CATEGORY android.content.ContextWrapper.bindService(Landroid/content/Intent;Landroid/content/ServiceConnection;II)Z
NO_CATEGORY android.content.ContextWrapper.bindService(Landroid/content/Intent;Landroid/content/ServiceConnection;I)Z
NO_CATEGORY android.content.ContextWrapper.openOrCreateDatabase(Ljava/lang/String;ILandroid/database/sqlite/SQLiteDatabase$CursorFactory;Landroid/database/DatabaseErrorHandler;)Landroid/database/sqlite/SQLiteDatabase;
NO_CATEGORY android.content.ContextWrapper.openOrCreateDatabase(Ljava/lang/String;ILandroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;
ICC android.content.ContextWrapper.sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;)V
ICC android.content.ContextWrapper.sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
ICC android.content.ContextWrapper.sendBroadcast(Landroid/content/Intent;Ljava/lang/String;)V
ICC android.content.ContextWrapper.sendBroadcast(Landroid/content/Intent;)V
ICC android.content.ContextWrapper.sendOrderedBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V
ICC android.content.ContextWrapper.sendOrderedBroadcast(Landroid/content/Intent;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V
ICC android.content.ContextWrapper.sendOrderedBroadcast(Landroid/content/Intent;Ljava/lang/String;)V
ICC android.content.ContextWrapper.sendStickyBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
ICC android.content.ContextWrapper.sendStickyBroadcast(Landroid/content/Intent;)V
ICC android.content.ContextWrapper.sendStickyOrderedBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V
NO_CATEGORY android.content.ContextWrapper.sendStickyOrderedBroadcast(Landroid/content/Intent;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V
NO_CATEGORY android.content.ContextWrapper.setTheme(I)V
NO_CATEGORY android.content.ContextWrapper.setWallpaper(Landroid/graphics/Bitmap;)V android.permission.SET_WALLPAPER 
ICC android.content.ContextWrapper.startActivitiesAsUser([Landroid/content/Intent;Landroid/os/Bundle;Landroid/os/UserHandle;)V
ICC android.content.ContextWrapper.startActivities([Landroid/content/Intent;Landroid/os/Bundle;)V
ICC android.content.ContextWrapper.startActivities([Landroid/content/Intent;)V
ICC android.content.ContextWrapper.startActivityAsUser(Landroid/content/Intent;Landroid/os/Bundle;Landroid/os/UserHandle;)V
ICC android.content.ContextWrapper.startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
ICC android.content.ContextWrapper.startActivity(Landroid/content/Intent;Landroid/os/Bundle;)V
ICC android.content.ContextWrapper.startActivity(Landroid/content/Intent;)V
ICC android.content.ContextWrapper.startInstrumentation(Landroid/content/ComponentName;Ljava/lang/String;Landroid/os/Bundle;)Z
ICC android.content.ContextWrapper.startIntentSender(Landroid/content/IntentSender;Landroid/content/Intent;IIILandroid/os/Bundle;)V
ICC android.content.ContextWrapper.startIntentSender(Landroid/content/IntentSender;Landroid/content/Intent;III)V
ICC android.content.ContextWrapper.startServiceAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)Landroid/content/ComponentName;
ICC android.content.ContextWrapper.startService(Landroid/content/Intent;)Landroid/content/ComponentName;
NO_CATEGORY android.content.IClipboard$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.content.IClipboard$Stub$Proxy.addPrimaryClipChangedListener(Landroid/content/IOnPrimaryClipChangedListener;)V
NO_CATEGORY android.content.IClipboard$Stub$Proxy.removePrimaryClipChangedListener(Landroid/content/IOnPrimaryClipChangedListener;)V
NO_CATEGORY android.content.IClipboard$Stub$Proxy.setPrimaryClip(Landroid/content/ClipData;)V
NO_CATEGORY android.content.IContentService$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.content.IContentService$Stub$Proxy.addStatusChangeListener(ILandroid/content/ISyncStatusObserver;)V
NO_CATEGORY android.content.IContentService$Stub$Proxy.notifyChange(Landroid/net/Uri;Landroid/database/IContentObserver;ZZI)V
NO_CATEGORY android.content.IContentService$Stub$Proxy.registerContentObserver(Landroid/net/Uri;ZLandroid/database/IContentObserver;I)V
NO_CATEGORY android.content.IContentService$Stub$Proxy.removeStatusChangeListener(Landroid/content/ISyncStatusObserver;)V
NO_CATEGORY android.content.IContentService$Stub$Proxy.unregisterContentObserver(Landroid/database/IContentObserver;)V
NO_CATEGORY android.content.IIntentReceiver$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.content.IIntentReceiver$Stub$Proxy.performReceive(Landroid/content/Intent;ILjava/lang/String;Landroid/os/Bundle;ZZI)V
NO_CATEGORY android.content.IIntentSender$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.content.IIntentSender$Stub$Proxy.send(ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;Ljava/lang/String;)I
NO_CATEGORY android.content.ISyncAdapter$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.content.ISyncAdapter$Stub$Proxy.initialize(Landroid/accounts/Account;Ljava/lang/String;)V
NO_CATEGORY android.content.ISyncStatusObserver$Stub$Proxy.onStatusChanged(I)V
NO_CATEGORY android.content.PeriodicSync.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.content.pm.ActivityInfo.dump(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY android.content.pm.ActivityInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.content.pm.ApplicationInfo.dump(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY android.content.pm.ApplicationInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.content.pm.ComponentInfo.dumpBack(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY android.content.pm.ComponentInfo.dumpFront(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY android.content.pm.ComponentInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.content.pm.InstrumentationInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.content.pm.IPackageDataObserver$Stub$Proxy.onRemoveCompleted(Ljava/lang/String;Z)V
NO_CATEGORY android.content.pm.IPackageDeleteObserver$Stub$Proxy.packageDeleted(Ljava/lang/String;I)V
NO_CATEGORY android.content.pm.IPackageInstallObserver$Stub$Proxy.packageInstalled(Ljava/lang/String;I)V
NO_CATEGORY android.content.pm.IPackageManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.addPackageToPreferred(Ljava/lang/String;)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.addPreferredActivity(Landroid/content/IntentFilter;I[Landroid/content/ComponentName;Landroid/content/ComponentName;I)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.checkPermission(Ljava/lang/String;Ljava/lang/String;)I
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.checkSignatures(Ljava/lang/String;Ljava/lang/String;)I
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.checkUidPermission(Ljava/lang/String;I)I
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.checkUidSignatures(II)I
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.clearApplicationUserData(Ljava/lang/String;Landroid/content/pm/IPackageDataObserver;I)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.clearPackagePreferredActivities(Ljava/lang/String;)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.deleteApplicationCacheFiles(Ljava/lang/String;Landroid/content/pm/IPackageDataObserver;)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.deletePackage(Ljava/lang/String;Landroid/content/pm/IPackageDeleteObserver;I)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.extendVerificationTimeout(IIJ)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.finishPackageInstall(I)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.freeStorageAndNotify(JLandroid/content/pm/IPackageDataObserver;)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.freeStorage(JLandroid/content/IntentSender;)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.grantPermission(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.hasSystemFeature(Ljava/lang/String;)Z
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.installExistingPackage(Ljava/lang/String;)I
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.installPackage(Landroid/net/Uri;Landroid/content/pm/IPackageInstallObserver;ILjava/lang/String;)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.installPackageWithVerificationAndEncryption(Landroid/net/Uri;Landroid/content/pm/IPackageInstallObserver;ILjava/lang/String;Landroid/content/pm/VerificationParams;Landroid/content/pm/ContainerEncryptionParams;)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.installPackageWithVerification(Landroid/net/Uri;Landroid/content/pm/IPackageInstallObserver;ILjava/lang/String;Landroid/net/Uri;Landroid/content/pm/ManifestDigest;Landroid/content/pm/ContainerEncryptionParams;)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.isPermissionEnforced(Ljava/lang/String;)Z
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.isProtectedBroadcast(Ljava/lang/String;)Z
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.movePackage(Ljava/lang/String;Landroid/content/pm/IPackageMoveObserver;I)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.performDexOpt(Ljava/lang/String;)Z
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.removePackageFromPreferred(Ljava/lang/String;)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.removePermission(Ljava/lang/String;)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.replacePreferredActivity(Landroid/content/IntentFilter;I[Landroid/content/ComponentName;Landroid/content/ComponentName;)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.revokePermission(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.setApplicationEnabledSetting(Ljava/lang/String;III)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.setComponentEnabledSetting(Landroid/content/ComponentName;III)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.setInstallerPackageName(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.setInstallLocation(I)Z
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.setPackageStoppedState(Ljava/lang/String;ZI)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.setPermissionEnforced(Ljava/lang/String;Z)V
NO_CATEGORY android.content.pm.IPackageManager$Stub$Proxy.verifyPendingInstall(II)V
NO_CATEGORY android.content.pm.IPackageMoveObserver$Stub$Proxy.packageMoved(Ljava/lang/String;I)V
NO_CATEGORY android.content.pm.LabeledIntent.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.content.pm.PackageInfoLite.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.content.pm.PackageInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.content.pm.PackageItemInfo.dumpFront(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY android.content.pm.PackageItemInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.content.pm.PackageParser$Component.setPackageName(Ljava/lang/String;)V
NO_CATEGORY android.content.pm.PackageParser$Service.setPackageName(Ljava/lang/String;)V android.permission.STOP_APP_SWITCHES 
NO_CATEGORY android.content.pm.PathPermission.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.content.pm.PermissionGroupInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.content.pm.PermissionInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.content.pm.ProviderInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.content.pm.ResolveInfo.dump(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY android.content.pm.ResolveInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.content.pm.ServiceInfo.dump(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY android.content.pm.ServiceInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.content.res.AssetFileDescriptor$AutoCloseOutputStream.write([BII)V
NO_CATEGORY android.content.res.AssetFileDescriptor$AutoCloseOutputStream.write([B)V
NO_CATEGORY android.content.res.AssetFileDescriptor$AutoCloseOutputStream.write(I)V
NO_CATEGORY android.content.res.AssetFileDescriptor.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.content.res.AssetManager.openFd(Ljava/lang/String;)Landroid/content/res/AssetFileDescriptor;
NO_CATEGORY android.content.res.AssetManager.open(Ljava/lang/String;I)Ljava/io/InputStream;
NO_CATEGORY android.content.res.AssetManager.open(Ljava/lang/String;)Ljava/io/InputStream;
NO_CATEGORY android.content.res.AssetManager.openNonAssetFd(ILjava/lang/String;)Landroid/content/res/AssetFileDescriptor;
NO_CATEGORY android.content.res.AssetManager.openNonAssetFd(Ljava/lang/String;)Landroid/content/res/AssetFileDescriptor;
NO_CATEGORY android.content.res.AssetManager.openNonAsset(ILjava/lang/String;I)Ljava/io/InputStream;
NO_CATEGORY android.content.res.AssetManager.openNonAsset(ILjava/lang/String;)Ljava/io/InputStream;
NO_CATEGORY android.content.res.AssetManager.openNonAsset(Ljava/lang/String;I)Ljava/io/InputStream;
NO_CATEGORY android.content.res.AssetManager.openNonAsset(Ljava/lang/String;)Ljava/io/InputStream;
NO_CATEGORY android.content.res.AssetManager.openXmlResourceParser(ILjava/lang/String;)Landroid/content/res/XmlResourceParser;
NO_CATEGORY android.content.res.AssetManager.openXmlResourceParser(Ljava/lang/String;)Landroid/content/res/XmlResourceParser;
NO_CATEGORY android.content.res.ColorStateList.valueOf(I)Landroid/content/res/ColorStateList;
NO_CATEGORY android.content.res.Configuration.setLayoutDirection(Ljava/util/Locale;)V
NO_CATEGORY android.content.res.Configuration.setTo(Landroid/content/res/Configuration;)V
NO_CATEGORY android.content.res.Resources$Theme.dump(ILjava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.content.res.Resources$Theme.setTo(Landroid/content/res/Resources$Theme;)V
NO_CATEGORY android.content.res.XmlBlock$Parser.setFeature(Ljava/lang/String;Z)V
NO_CATEGORY android.content.res.XmlBlock$Parser.setInput(Ljava/io/InputStream;Ljava/lang/String;)V
NO_CATEGORY android.content.res.XmlBlock$Parser.setInput(Ljava/io/Reader;)V
NO_CATEGORY android.content.res.XmlBlock$Parser.setProperty(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY android.content.SyncAdaptersCache$MySerializer.writeAsXml(Ljava/lang/Object;Lorg/xmlpull/v1/XmlSerializer;)V
NO_CATEGORY android.content.SyncContext.setStatusText(Ljava/lang/String;)V
NO_CATEGORY android.content.SyncInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.content.SyncManager$ActiveSyncContext.sendHeartbeat()V
NO_CATEGORY android.content.SyncManager$ActiveSyncContext.toString(Ljava/lang/StringBuilder;)V
NO_CATEGORY android.content.SyncResult.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.content.SyncStorageEngine.setBackoff(Landroid/accounts/Account;ILjava/lang/String;JJ)V
NO_CATEGORY android.content.SyncStorageEngine.setDelayUntilTime(Landroid/accounts/Account;ILjava/lang/String;J)V
NO_CATEGORY android.content.UriMatcher.addURI(Ljava/lang/String;Ljava/lang/String;I)V
NO_CATEGORY android.database.BulkCursorDescriptor.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.database.BulkCursorNative.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.database.BulkCursorProxy.onMove(I)V
NO_CATEGORY android.database.BulkCursorProxy.requery(Landroid/database/IContentObserver;)I
NO_CATEGORY android.database.BulkCursorProxy.respond(Landroid/os/Bundle;)Landroid/os/Bundle;
NO_CATEGORY android.database.ContentObservable.notifyChange(Z)V
NO_CATEGORY android.database.CursorWindow.setNumColumns(I)Z
NO_CATEGORY android.database.DatabaseUtils.dumpCurrentRow(Landroid/database/Cursor;Ljava/io/PrintStream;)V
NO_CATEGORY android.database.DatabaseUtils.dumpCursor(Landroid/database/Cursor;Ljava/io/PrintStream;)V
NO_CATEGORY android.database.DatabaseUtils$InsertHelper.bind(I[B)V
NO_CATEGORY android.database.DatabaseUtils$InsertHelper.bind(ID)V
NO_CATEGORY android.database.DatabaseUtils$InsertHelper.bind(IF)V
NO_CATEGORY android.database.DatabaseUtils$InsertHelper.bind(II)V
NO_CATEGORY android.database.DatabaseUtils$InsertHelper.bind(IJ)V
NO_CATEGORY android.database.DatabaseUtils$InsertHelper.bind(ILjava/lang/String;)V
NO_CATEGORY android.database.DatabaseUtils$InsertHelper.bind(IZ)V
NO_CATEGORY android.database.DatabaseUtils$InsertHelper.bindNull(I)V
NO_CATEGORY android.database.sqlite.SQLiteConnection.executeForBlobFileDescriptor(Ljava/lang/String;[Ljava/lang/Object;Landroid/os/CancellationSignal;)Landroid/os/ParcelFileDescriptor;
NO_CATEGORY android.database.sqlite.SQLiteConnection.executeForLastInsertedRowId(Ljava/lang/String;[Ljava/lang/Object;Landroid/os/CancellationSignal;)J
NO_CATEGORY android.database.sqlite.SQLiteConnection.executeForLong(Ljava/lang/String;[Ljava/lang/Object;Landroid/os/CancellationSignal;)J
NO_CATEGORY android.database.sqlite.SQLiteConnection.executeForString(Ljava/lang/String;[Ljava/lang/Object;Landroid/os/CancellationSignal;)Ljava/lang/String;
NO_CATEGORY android.database.sqlite.SQLiteConnection.execute(Ljava/lang/String;[Ljava/lang/Object;Landroid/os/CancellationSignal;)V
NO_CATEGORY android.database.sqlite.SQLiteCursor.setSelectionArguments([Ljava/lang/String;)V
NO_CATEGORY android.database.sqlite.SQLiteCursor.setWindow(Landroid/database/CursorWindow;)V
NO_CATEGORY android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(Ljava/io/File;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;
NO_CATEGORY android.database.sqlite.SQLiteDatabase.setLockingEnabled(Z)V
NO_CATEGORY android.database.sqlite.SQLiteDatabase.setMaximumSize(J)J
NO_CATEGORY android.database.sqlite.SQLiteDatabase.setPageSize(J)V
NO_CATEGORY android.database.sqlite.SQLiteDatabase.setVersion(I)V
NO_CATEGORY android.database.sqlite.SQLiteDatabase.update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
NO_CATEGORY android.database.sqlite.SQLiteDirectCursorDriver.setBindArguments([Ljava/lang/String;)V
NO_CATEGORY android.database.sqlite.SQLiteProgram.bindAllArgsAsStrings([Ljava/lang/String;)V
NO_CATEGORY android.database.sqlite.SQLiteProgram.bindBlob(I[B)V
NO_CATEGORY android.database.sqlite.SQLiteProgram.bindDouble(ID)V
NO_CATEGORY android.database.sqlite.SQLiteProgram.bindLong(IJ)V
NO_CATEGORY android.database.sqlite.SQLiteProgram.bindNull(I)V
NO_CATEGORY android.database.sqlite.SQLiteProgram.bindString(ILjava/lang/String;)V
NO_CATEGORY android.ddm.DdmHandleAppName.setAppName(Ljava/lang/String;I)V
NO_CATEGORY android.drm.DrmInfo.put(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY android.drm.DrmInfoRequest.put(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY android.drm.DrmManagerClient$EventHandler.handleMessage(Landroid/os/Message;)V
NO_CATEGORY android.drm.DrmManagerClient.notify(Ljava/lang/Object;IILjava/lang/String;)V
NO_CATEGORY android.drm.DrmManagerClient.saveRights(Landroid/drm/DrmRights;Ljava/lang/String;Ljava/lang/String;)I
#NO_CATEGORY android.filterfw.core.AsyncRunner.setGraph(Landroid/filterfw/core/FilterGraph;)V
#NO_CATEGORY android.filterfw.core.FieldPort.setFieldFrame(Landroid/filterfw/core/Frame;Z)V
#NO_CATEGORY android.filterfw.core.FieldPort.setFrame(Landroid/filterfw/core/Frame;)V
#NO_CATEGORY android.filterfw.core.FilterContext.storeFrame(Ljava/lang/String;Landroid/filterfw/core/Frame;)V
#NO_CATEGORY android.filterfw.core.FilterFunction.setInputFrame(Ljava/lang/String;Landroid/filterfw/core/Frame;)V
#NO_CATEGORY android.filterfw.core.FilterFunction.setInputValue(Ljava/lang/String;Ljava/lang/Object;)V
#NO_CATEGORY android.filterfw.core.FilterGraph.addFilter(Landroid/filterfw/core/Filter;)Z
#NO_CATEGORY android.filterfw.core.Filter.setInputFrame(Ljava/lang/String;Landroid/filterfw/core/Frame;)V
#NO_CATEGORY android.filterfw.core.Filter.setInputValue(Ljava/lang/String;Ljava/lang/Object;)V
#NO_CATEGORY android.filterfw.core.Filter.setWaitsOnInputPort(Ljava/lang/String;Z)V
#NO_CATEGORY android.filterfw.core.Filter.setWaitsOnOutputPort(Ljava/lang/String;Z)V
#NO_CATEGORY android.filterfw.core.FinalPort.setFieldFrame(Landroid/filterfw/core/Frame;Z)V
#NO_CATEGORY android.filterfw.core.Frame.setData([BII)V
#NO_CATEGORY android.filterfw.core.Frame.setDataFromFrame(Landroid/filterfw/core/Frame;)V
#NO_CATEGORY android.filterfw.core.Frame.setData(Ljava/nio/ByteBuffer;)V
#NO_CATEGORY android.filterfw.core.Frame.setFormat(Landroid/filterfw/core/FrameFormat;)V
#NO_CATEGORY android.filterfw.core.Frame.setGenericObjectValue(Ljava/lang/Object;)V
#NO_CATEGORY android.filterfw.core.Frame.setObjectValue(Ljava/lang/Object;)V
#NO_CATEGORY android.filterfw.core.GLEnvironment.setSurfaceTimestamp(J)V
#NO_CATEGORY android.filterfw.core.GLFrame.setBitmap(Landroid/graphics/Bitmap;)V
#NO_CATEGORY android.filterfw.core.GLFrame.setDataFromFrame(Landroid/filterfw/core/Frame;)V
#NO_CATEGORY android.filterfw.core.GLFrame.setData(Ljava/nio/ByteBuffer;II)V
#NO_CATEGORY android.filterfw.core.GLFrame.setFloats([F)V
#NO_CATEGORY android.filterfw.core.GLFrame.setInts([I)V
#NO_CATEGORY android.filterfw.core.GLFrame.setTextureParameter(II)V
#NO_CATEGORY android.filterfw.core.GLFrame.setViewport(IIII)V
#NO_CATEGORY android.filterfw.core.GLFrame.setViewport(Landroid/graphics/Rect;)V
#NO_CATEGORY android.filterfw.core.KeyValueMap.setKeyValues([Ljava/lang/Object;)V
#NO_CATEGORY android.filterfw.core.MutableFrameFormat.setDimensionCount(I)V
#NO_CATEGORY android.filterfw.core.MutableFrameFormat.setDimensions(III)V
#NO_CATEGORY android.filterfw.core.MutableFrameFormat.setDimensions(II)V
#NO_CATEGORY android.filterfw.core.MutableFrameFormat.setDimensions(I)V
#NO_CATEGORY android.filterfw.core.MutableFrameFormat.setDimensions([I)V
#NO_CATEGORY android.filterfw.core.MutableFrameFormat.setMetaValue(Ljava/lang/String;Ljava/lang/Object;)V
#NO_CATEGORY android.filterfw.core.NativeFrame.setBitmap(Landroid/graphics/Bitmap;)V
#NO_CATEGORY android.filterfw.core.NativeFrame.setDataFromFrame(Landroid/filterfw/core/Frame;)V
#NO_CATEGORY android.filterfw.core.NativeFrame.setData(Ljava/nio/ByteBuffer;II)V
#NO_CATEGORY android.filterfw.core.NativeFrame.setFloats([F)V
#NO_CATEGORY android.filterfw.core.NativeFrame.setInts([I)V
#NO_CATEGORY android.filterfw.core.NativeProgram.setHostValue(Ljava/lang/String;Ljava/lang/Object;)V
#NO_CATEGORY android.filterfw.core.OutputPort.setFrame(Landroid/filterfw/core/Frame;)V
#NO_CATEGORY android.filterfw.core.SerializedFrame$DirectByteOutputStream.write([B)V
#NO_CATEGORY android.filterfw.core.SerializedFrame.setBitmap(Landroid/graphics/Bitmap;)V
#NO_CATEGORY android.filterfw.core.SerializedFrame.setData(Ljava/nio/ByteBuffer;II)V
#NO_CATEGORY android.filterfw.core.SerializedFrame.setFloats([F)V
#NO_CATEGORY android.filterfw.core.SerializedFrame.setGenericObjectValue(Ljava/lang/Object;)V
#NO_CATEGORY android.filterfw.core.SerializedFrame.setInts([I)V
#NO_CATEGORY android.filterfw.core.ShaderProgram.setAttributeValues(Ljava/lang/String;[FI)V
#NO_CATEGORY android.filterfw.core.ShaderProgram.setAttributeValues(Ljava/lang/String;Landroid/filterfw/core/VertexFrame;IIIIZ)V
#NO_CATEGORY android.filterfw.core.ShaderProgram.setBlendEnabled(Z)V
#NO_CATEGORY android.filterfw.core.ShaderProgram.setBlendFunc(II)V
#NO_CATEGORY android.filterfw.core.ShaderProgram.setClearColor(FFF)V
#NO_CATEGORY android.filterfw.core.ShaderProgram.setClearsOutput(Z)V
#NO_CATEGORY android.filterfw.core.ShaderProgram.setDrawMode(I)V
#NO_CATEGORY android.filterfw.core.ShaderProgram.setHostValue(Ljava/lang/String;Ljava/lang/Object;)V
#NO_CATEGORY android.filterfw.core.ShaderProgram.setSourceRect(FFFF)V
#NO_CATEGORY android.filterfw.core.ShaderProgram.setSourceRegion(Landroid/filterfw/geometry/Quad;)V
#NO_CATEGORY android.filterfw.core.ShaderProgram.setTargetRect(FFFF)V
#NO_CATEGORY android.filterfw.core.ShaderProgram.setTargetRegion(Landroid/filterfw/geometry/Quad;)V
#NO_CATEGORY android.filterfw.core.ShaderProgram.setVertexCount(I)V
#NO_CATEGORY android.filterfw.core.SimpleFrame.setBitmap(Landroid/graphics/Bitmap;)V
#NO_CATEGORY android.filterfw.core.SimpleFrame.setData(Ljava/nio/ByteBuffer;II)V
#NO_CATEGORY android.filterfw.core.SimpleFrame.setFloats([F)V
#NO_CATEGORY android.filterfw.core.SimpleFrame.setInts([I)V
#NO_CATEGORY android.filterfw.core.StopWatchMap.start(Ljava/lang/String;)V
#NO_CATEGORY android.filterfw.core.StreamPort.setFrame(Landroid/filterfw/core/Frame;)V
#NO_CATEGORY android.filterfw.core.VertexFrame.setBitmap(Landroid/graphics/Bitmap;)V
#NO_CATEGORY android.filterfw.core.VertexFrame.setDataFromFrame(Landroid/filterfw/core/Frame;)V
#NO_CATEGORY android.filterfw.core.VertexFrame.setData(Ljava/nio/ByteBuffer;II)V
#NO_CATEGORY android.filterfw.core.VertexFrame.setFloats([F)V
#NO_CATEGORY android.filterfw.core.VertexFrame.setInts([I)V
#NO_CATEGORY android.filterfw.io.GraphReader.addReference(Ljava/lang/String;Ljava/lang/Object;)V
#NO_CATEGORY android.filterfw.io.GraphReader.addReferencesByMap(Landroid/filterfw/core/KeyValueMap;)V
#NO_CATEGORY android.filterpacks.imageproc.ImageCombineFilter.process(Landroid/filterfw/core/FilterContext;)V
#NO_CATEGORY android.filterpacks.imageproc.SimpleImageFilter.process(Landroid/filterfw/core/FilterContext;)V
#NO_CATEGORY android.filterpacks.ui.SurfaceRenderFilter.open(Landroid/filterfw/core/FilterContext;)V
#NO_CATEGORY android.filterpacks.videosink.MediaEncoderFilter.process(Landroid/filterfw/core/FilterContext;)V
NO_CATEGORY android.gesture.GestureLibrary.setOrientationStyle(I)V
NO_CATEGORY android.gesture.GestureLibrary.setSequenceType(I)V
NO_CATEGORY android.gesture.GestureStore.addGesture(Ljava/lang/String;Landroid/gesture/Gesture;)V
NO_CATEGORY android.gesture.GestureStore.save(Ljava/io/OutputStream;)V
#NO_CATEGORY android.graphics.Bitmap.setHasAlpha(Z)V
#NO_CATEGORY android.graphics.Bitmap.setHasMipMap(Z)V
#NO_CATEGORY android.graphics.Bitmap.setPixel(III)V
#NO_CATEGORY android.graphics.Bitmap.setPixels([IIIIIII)V
#NO_CATEGORY android.graphics.Canvas.setMatrix(Landroid/graphics/Matrix;)V
#NO_CATEGORY android.graphics.Canvas.setViewport(II)V
#NO_CATEGORY android.graphics.ColorMatrix.setConcat(Landroid/graphics/ColorMatrix;Landroid/graphics/ColorMatrix;)V
#NO_CATEGORY android.graphics.ColorMatrix.set([F)V
#NO_CATEGORY android.graphics.ColorMatrix.set(Landroid/graphics/ColorMatrix;)V
#NO_CATEGORY android.graphics.ColorMatrix.setRotate(IF)V
#NO_CATEGORY android.graphics.ColorMatrix.setSaturation(F)V
#NO_CATEGORY android.graphics.ColorMatrix.setScale(FFFF)V
#NO_CATEGORY android.graphics.drawable.AnimatedRotateDrawable.draw(Landroid/graphics/Canvas;)V
#NO_CATEGORY android.graphics.drawable.AnimatedRotateDrawable.setAlpha(I)V
#NO_CATEGORY android.graphics.drawable.AnimatedRotateDrawable.setColorFilter(Landroid/graphics/ColorFilter;)V
#NO_CATEGORY android.graphics.drawable.AnimatedRotateDrawable.setVisible(ZZ)Z
#NO_CATEGORY android.graphics.drawable.AnimationDrawable.setOneShot(Z)V
#NO_CATEGORY android.graphics.drawable.AnimationDrawable.setVisible(ZZ)Z
#NO_CATEGORY android.graphics.drawable.BitmapDrawable.setAlpha(I)V
#NO_CATEGORY android.graphics.drawable.BitmapDrawable.setAntiAlias(Z)V
#NO_CATEGORY android.graphics.drawable.BitmapDrawable.setColorFilter(Landroid/graphics/ColorFilter;)V
#NO_CATEGORY android.graphics.drawable.BitmapDrawable.setDither(Z)V
#NO_CATEGORY android.graphics.drawable.BitmapDrawable.setFilterBitmap(Z)V
#NO_CATEGORY android.graphics.drawable.BitmapDrawable.setTargetDensity(Landroid/graphics/Canvas;)V
#NO_CATEGORY android.graphics.drawable.BitmapDrawable.setTargetDensity(Landroid/util/DisplayMetrics;)V
#NO_CATEGORY android.graphics.drawable.BitmapDrawable.setTileModeX(Landroid/graphics/Shader$TileMode;)V
#NO_CATEGORY android.graphics.drawable.BitmapDrawable.setTileModeY(Landroid/graphics/Shader$TileMode;)V
#NO_CATEGORY android.graphics.drawable.ClipDrawable.setAlpha(I)V
#NO_CATEGORY android.graphics.drawable.ClipDrawable.setColorFilter(Landroid/graphics/ColorFilter;)V
#NO_CATEGORY android.graphics.drawable.ClipDrawable.setLayoutDirection(I)V
#NO_CATEGORY android.graphics.drawable.ClipDrawable.setVisible(ZZ)Z
#NO_CATEGORY android.graphics.drawable.ColorDrawable.setAlpha(I)V
#NO_CATEGORY android.graphics.drawable.ColorDrawable.setColorFilter(Landroid/graphics/ColorFilter;)V
#NO_CATEGORY android.graphics.drawable.DrawableContainer.setVisible(ZZ)Z
#NO_CATEGORY android.graphics.drawable.Drawable.setBounds(IIII)V
#NO_CATEGORY android.graphics.drawable.Drawable.setBounds(Landroid/graphics/Rect;)V
#NO_CATEGORY android.graphics.drawable.Drawable.setColorFilter(ILandroid/graphics/PorterDuff$Mode;)V
#NO_CATEGORY android.graphics.drawable.Drawable.setDither(Z)V
#NO_CATEGORY android.graphics.drawable.Drawable.setFilterBitmap(Z)V
#NO_CATEGORY android.graphics.drawable.GradientDrawable.setColor(I)V
#NO_CATEGORY android.graphics.drawable.GradientDrawable.setColors([I)V
#NO_CATEGORY android.graphics.drawable.GradientDrawable.setCornerRadii([F)V
#NO_CATEGORY android.graphics.drawable.GradientDrawable.setCornerRadius(F)V
#NO_CATEGORY android.graphics.drawable.GradientDrawable.setGradientCenter(FF)V
#NO_CATEGORY android.graphics.drawable.GradientDrawable.setGradientRadius(F)V
#NO_CATEGORY android.graphics.drawable.GradientDrawable.setGradientType(I)V
#NO_CATEGORY android.graphics.drawable.GradientDrawable.setShape(I)V
#NO_CATEGORY android.graphics.drawable.GradientDrawable.setSize(II)V
#NO_CATEGORY android.graphics.drawable.GradientDrawable.setStroke(IIFF)V
#NO_CATEGORY android.graphics.drawable.GradientDrawable.setStroke(II)V
#NO_CATEGORY android.graphics.drawable.GradientDrawable.setUseLevel(Z)V
#NO_CATEGORY android.graphics.drawable.InsetDrawable.setAlpha(I)V
#NO_CATEGORY android.graphics.drawable.InsetDrawable.setColorFilter(Landroid/graphics/ColorFilter;)V
#NO_CATEGORY android.graphics.drawable.InsetDrawable.setVisible(ZZ)Z
#NO_CATEGORY android.graphics.drawable.LayerDrawable.setAlpha(I)V
#NO_CATEGORY android.graphics.drawable.LayerDrawable.setColorFilter(Landroid/graphics/ColorFilter;)V
#NO_CATEGORY android.graphics.drawable.LayerDrawable.setDither(Z)V
#NO_CATEGORY android.graphics.drawable.LayerDrawable.setLayoutDirection(I)V
#NO_CATEGORY android.graphics.drawable.LayerDrawable.setVisible(ZZ)Z
#NO_CATEGORY android.graphics.drawable.NinePatchDrawable.setAlpha(I)V
#NO_CATEGORY android.graphics.drawable.NinePatchDrawable.setColorFilter(Landroid/graphics/ColorFilter;)V
#NO_CATEGORY android.graphics.drawable.NinePatchDrawable.setDither(Z)V
#NO_CATEGORY android.graphics.drawable.NinePatchDrawable.setFilterBitmap(Z)V
#NO_CATEGORY android.graphics.drawable.NinePatchDrawable.setTargetDensity(Landroid/graphics/Canvas;)V
#NO_CATEGORY android.graphics.drawable.NinePatchDrawable.setTargetDensity(Landroid/util/DisplayMetrics;)V
#NO_CATEGORY android.graphics.drawable.PaintDrawable.setCornerRadii([F)V
#NO_CATEGORY android.graphics.drawable.PaintDrawable.setCornerRadius(F)V
#NO_CATEGORY android.graphics.drawable.RotateDrawable.draw(Landroid/graphics/Canvas;)V
#NO_CATEGORY android.graphics.drawable.RotateDrawable.setAlpha(I)V
#NO_CATEGORY android.graphics.drawable.RotateDrawable.setColorFilter(Landroid/graphics/ColorFilter;)V
#NO_CATEGORY android.graphics.drawable.RotateDrawable.setVisible(ZZ)Z
#NO_CATEGORY android.graphics.drawable.ScaleDrawable.setAlpha(I)V
#NO_CATEGORY android.graphics.drawable.ScaleDrawable.setColorFilter(Landroid/graphics/ColorFilter;)V
#NO_CATEGORY android.graphics.drawable.ScaleDrawable.setVisible(ZZ)Z
#NO_CATEGORY android.graphics.drawable.ShapeDrawable.draw(Landroid/graphics/Canvas;)V
#NO_CATEGORY android.graphics.drawable.ShapeDrawable.setColorFilter(Landroid/graphics/ColorFilter;)V
#NO_CATEGORY android.graphics.drawable.ShapeDrawable.setDither(Z)V
#NO_CATEGORY android.graphics.drawable.ShapeDrawable.setPadding(IIII)V
#NO_CATEGORY android.graphics.drawable.ShapeDrawable.setPadding(Landroid/graphics/Rect;)V
#NO_CATEGORY android.graphics.drawable.StateListDrawable.setLayoutDirection(I)V
#NO_CATEGORY android.graphics.Interpolator.setKeyFrame(II[F[F)V
#NO_CATEGORY android.graphics.Interpolator.setKeyFrame(II[F)V
#NO_CATEGORY android.graphics.Interpolator.setRepeatMirror(FZ)V
#NO_CATEGORY android.graphics.Matrix$1.setConcat(Landroid/graphics/Matrix;Landroid/graphics/Matrix;)Z
#NO_CATEGORY android.graphics.Matrix$1.setPolyToPoly([FI[FII)Z
#NO_CATEGORY android.graphics.Matrix$1.setRectToRect(Landroid/graphics/RectF;Landroid/graphics/RectF;Landroid/graphics/Matrix$ScaleToFit;)Z
#NO_CATEGORY android.graphics.Matrix.setConcat(Landroid/graphics/Matrix;Landroid/graphics/Matrix;)Z
#NO_CATEGORY android.graphics.Matrix.set(Landroid/graphics/Matrix;)V
#NO_CATEGORY android.graphics.Matrix.setPolyToPoly([FI[FII)Z android.permission.STOP_APP_SWITCHES 
#NO_CATEGORY android.graphics.Matrix.setRectToRect(Landroid/graphics/RectF;Landroid/graphics/RectF;Landroid/graphics/Matrix$ScaleToFit;)Z
#NO_CATEGORY android.graphics.Matrix.setRotate(FFF)V
#NO_CATEGORY android.graphics.Matrix.setRotate(F)V
#NO_CATEGORY android.graphics.Matrix.setScale(FFFF)V
#NO_CATEGORY android.graphics.Matrix.setScale(FF)V
#NO_CATEGORY android.graphics.Matrix.setSinCos(FFFF)V
#NO_CATEGORY android.graphics.Matrix.setSinCos(FF)V
#NO_CATEGORY android.graphics.Matrix.setSkew(FFFF)V
#NO_CATEGORY android.graphics.Matrix.setSkew(FF)V
#NO_CATEGORY android.graphics.Matrix.setTranslate(FF)V
#NO_CATEGORY android.graphics.Matrix.setValues([F)V
#NO_CATEGORY android.graphics.Paint.setARGB(IIII)V
#NO_CATEGORY android.graphics.Paint.setBidiFlags(I)V
#NO_CATEGORY android.graphics.Paint.set(Landroid/graphics/Paint;)V
#NO_CATEGORY android.graphics.Paint.setStrokeCap(Landroid/graphics/Paint$Cap;)V
#NO_CATEGORY android.graphics.Paint.setStrokeJoin(Landroid/graphics/Paint$Join;)V
#NO_CATEGORY android.graphics.Paint.setStyle(Landroid/graphics/Paint$Style;)V
#NO_CATEGORY android.graphics.Paint.setTextAlign(Landroid/graphics/Paint$Align;)V
#NO_CATEGORY android.graphics.Path.setFillType(Landroid/graphics/Path$FillType;)V
#NO_CATEGORY android.graphics.Path.set(Landroid/graphics/Path;)V
#NO_CATEGORY android.graphics.Path.setLastPoint(FF)V
#NO_CATEGORY android.graphics.Picture$RecordingCanvas.setBitmap(Landroid/graphics/Bitmap;)V
#NO_CATEGORY android.graphics.PointF.set(Landroid/graphics/PointF;)V
#NO_CATEGORY android.graphics.RectF.setIntersect(Landroid/graphics/RectF;Landroid/graphics/RectF;)Z
#NO_CATEGORY android.graphics.RectF.set(Landroid/graphics/RectF;)V
#NO_CATEGORY android.graphics.RectF.set(Landroid/graphics/Rect;)V
#NO_CATEGORY android.graphics.Rect.setIntersect(Landroid/graphics/Rect;Landroid/graphics/Rect;)Z
#NO_CATEGORY android.graphics.Rect.set(Landroid/graphics/Rect;)V
#NO_CATEGORY android.graphics.Region.set(IIII)Z
#NO_CATEGORY android.graphics.Region.set(Landroid/graphics/Rect;)Z
#NO_CATEGORY android.graphics.Region.set(Landroid/graphics/Region;)Z
#NO_CATEGORY android.graphics.Region.setPath(Landroid/graphics/Path;Landroid/graphics/Region;)Z
#NO_CATEGORY android.graphics.SurfaceTexture.setDefaultBufferSize(II)V
#NO_CATEGORY android.graphics.Typeface.create(Landroid/graphics/Typeface;I)Landroid/graphics/Typeface;
#NO_CATEGORY android.hardware.Camera$Parameters.setAntibanding(Ljava/lang/String;)V
#NO_CATEGORY android.hardware.Camera$Parameters.setAutoExposureLock(Z)V
#NO_CATEGORY android.hardware.Camera$Parameters.setAutoWhiteBalanceLock(Z)V
#NO_CATEGORY android.hardware.Camera$Parameters.setColorEffect(Ljava/lang/String;)V
#NO_CATEGORY android.hardware.Camera$Parameters.setExposureCompensation(I)V
#NO_CATEGORY android.hardware.Camera$Parameters.setFlashMode(Ljava/lang/String;)V
#NO_CATEGORY android.hardware.Camera$Parameters.setFocusMode(Ljava/lang/String;)V
#NO_CATEGORY android.hardware.Camera$Parameters.setGpsAltitude(D)V
#NO_CATEGORY android.hardware.Camera$Parameters.setGpsLatitude(D)V
#NO_CATEGORY android.hardware.Camera$Parameters.setGpsLongitude(D)V
#NO_CATEGORY android.hardware.Camera$Parameters.setGpsProcessingMethod(Ljava/lang/String;)V
#NO_CATEGORY android.hardware.Camera$Parameters.setGpsTimestamp(J)V
#NO_CATEGORY android.hardware.Camera$Parameters.setJpegQuality(I)V
#NO_CATEGORY android.hardware.Camera$Parameters.setJpegThumbnailQuality(I)V
#NO_CATEGORY android.hardware.Camera$Parameters.setJpegThumbnailSize(II)V
#NO_CATEGORY android.hardware.Camera$Parameters.set(Ljava/lang/String;I)V
#NO_CATEGORY android.hardware.Camera$Parameters.setPictureFormat(I)V
#NO_CATEGORY android.hardware.Camera$Parameters.setPictureSize(II)V
#NO_CATEGORY android.hardware.Camera$Parameters.setPreviewFormat(I)V
#NO_CATEGORY android.hardware.Camera$Parameters.setPreviewFpsRange(II)V
#NO_CATEGORY android.hardware.Camera$Parameters.setPreviewFrameRate(I)V
#NO_CATEGORY android.hardware.Camera$Parameters.setPreviewSize(II)V
#NO_CATEGORY android.hardware.Camera$Parameters.setRecordingHint(Z)V
#NO_CATEGORY android.hardware.Camera$Parameters.setRotation(I)V
#NO_CATEGORY android.hardware.Camera$Parameters.setSceneMode(Ljava/lang/String;)V
#NO_CATEGORY android.hardware.Camera$Parameters.setVideoStabilization(Z)V
#NO_CATEGORY android.hardware.Camera$Parameters.setWhiteBalance(Ljava/lang/String;)V
#NO_CATEGORY android.hardware.Camera$Parameters.setZoom(I)V
NO_CATEGORY android.hardware.Camera.setParameters(Landroid/hardware/Camera$Parameters;)V
NO_CATEGORY android.hardware.display.DisplayManagerGlobal$DisplayListenerDelegate.sendDisplayEvent(II)V
NO_CATEGORY android.hardware.display.IDisplayManagerCallback$Stub$Proxy.onDisplayEvent(II)V
NO_CATEGORY android.hardware.display.IDisplayManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.hardware.display.IDisplayManager$Stub$Proxy.connectWifiDisplay(Ljava/lang/String;)V
NO_CATEGORY android.hardware.display.IDisplayManager$Stub$Proxy.forgetWifiDisplay(Ljava/lang/String;)V
NO_CATEGORY android.hardware.display.IDisplayManager$Stub$Proxy.registerCallback(Landroid/hardware/display/IDisplayManagerCallback;)V
NO_CATEGORY android.hardware.display.IDisplayManager$Stub$Proxy.renameWifiDisplay(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.hardware.display.WifiDisplayStatus.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.hardware.input.IInputDevicesChangedListener$Stub$Proxy.onInputDevicesChanged([I)V
NO_CATEGORY android.hardware.input.IInputManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.hardware.input.IInputManager$Stub$Proxy.addKeyboardLayoutForInputDevice(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.hardware.input.IInputManager$Stub$Proxy.cancelVibrate(ILandroid/os/IBinder;)V
NO_CATEGORY android.hardware.input.IInputManager$Stub$Proxy.hasKeys(II[I[Z)Z
NO_CATEGORY android.hardware.input.IInputManager$Stub$Proxy.injectInputEvent(Landroid/view/InputEvent;I)Z
NO_CATEGORY android.hardware.input.IInputManager$Stub$Proxy.registerInputDevicesChangedListener(Landroid/hardware/input/IInputDevicesChangedListener;)V
NO_CATEGORY android.hardware.input.IInputManager$Stub$Proxy.removeKeyboardLayoutForInputDevice(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.hardware.input.IInputManager$Stub$Proxy.setCurrentKeyboardLayoutForInputDevice(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.hardware.input.IInputManager$Stub$Proxy.tryPointerSpeed(I)V
NO_CATEGORY android.hardware.input.IInputManager$Stub$Proxy.vibrate(I[JILandroid/os/IBinder;)V
NO_CATEGORY android.hardware.input.InputManager.setPointerSpeed(Landroid/content/Context;I)V
NO_CATEGORY android.hardware.ISerialManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.hardware.ISerialManager$Stub$Proxy.openSerialPort(Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;
NO_CATEGORY android.hardware.SystemSensorManager$ListenerDelegate.addSensor(Landroid/hardware/Sensor;)V
NO_CATEGORY android.hardware.usb.IUsbManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.hardware.usb.IUsbManager$Stub$Proxy.allowUsbDebugging(ZLjava/lang/String;)V
NO_CATEGORY android.hardware.usb.IUsbManager$Stub$Proxy.clearDefaults(Ljava/lang/String;I)V
NO_CATEGORY android.hardware.usb.IUsbManager$Stub$Proxy.grantAccessoryPermission(Landroid/hardware/usb/UsbAccessory;I)V
NO_CATEGORY android.hardware.usb.IUsbManager$Stub$Proxy.grantDevicePermission(Landroid/hardware/usb/UsbDevice;I)V
NO_CATEGORY android.hardware.usb.IUsbManager$Stub$Proxy.hasDefaults(Ljava/lang/String;I)Z
NO_CATEGORY android.hardware.usb.IUsbManager$Stub$Proxy.openDevice(Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;
NO_CATEGORY android.hardware.usb.IUsbManager$Stub$Proxy.requestAccessoryPermission(Landroid/hardware/usb/UsbAccessory;Ljava/lang/String;Landroid/app/PendingIntent;)V
NO_CATEGORY android.hardware.usb.IUsbManager$Stub$Proxy.requestDevicePermission(Landroid/hardware/usb/UsbDevice;Ljava/lang/String;Landroid/app/PendingIntent;)V
NO_CATEGORY android.hardware.usb.IUsbManager$Stub$Proxy.setAccessoryPackage(Landroid/hardware/usb/UsbAccessory;Ljava/lang/String;I)V
NO_CATEGORY android.hardware.usb.IUsbManager$Stub$Proxy.setCurrentFunction(Ljava/lang/String;Z)V
NO_CATEGORY android.hardware.usb.IUsbManager$Stub$Proxy.setDevicePackage(Landroid/hardware/usb/UsbDevice;Ljava/lang/String;I)V
NO_CATEGORY android.hardware.usb.IUsbManager$Stub$Proxy.setMassStorageBackingFile(Ljava/lang/String;)V
NO_CATEGORY android.inputmethodservice.ExtractEditLayout$ExtractActionMode.setCustomView(Landroid/view/View;)V
NO_CATEGORY android.inputmethodservice.ExtractEditLayout$ExtractActionMode.setSubtitle(I)V
NO_CATEGORY android.inputmethodservice.ExtractEditLayout$ExtractActionMode.setTitle(I)V
NO_CATEGORY android.inputmethodservice.ExtractEditText.setCursorPosition_internal(II)V
NO_CATEGORY android.inputmethodservice.ExtractEditText.setExtractedText(Landroid/view/inputmethod/ExtractedText;)V
NO_CATEGORY android.inputmethodservice.ExtractEditText.setSpan_internal(Ljava/lang/Object;III)V
NO_CATEGORY android.inputmethodservice.IInputMethodSessionWrapper.executeMessage(Landroid/os/Message;)V
NO_CATEGORY android.inputmethodservice.InputMethodService.onExtractTextContextMenuItem(I)Z
NO_CATEGORY android.inputmethodservice.InputMethodService.sendDefaultEditorAction(Z)Z
NO_CATEGORY android.inputmethodservice.InputMethodService.sendDownUpKeyEvents(I)V
NO_CATEGORY android.inputmethodservice.InputMethodService.sendKeyChar(C)V
NO_CATEGORY android.inputmethodservice.InputMethodService.setCandidatesView(Landroid/view/View;)V
NO_CATEGORY android.inputmethodservice.InputMethodService.setCandidatesViewShown(Z)V
NO_CATEGORY android.inputmethodservice.InputMethodService.setExtractViewShown(Z)V
NO_CATEGORY android.inputmethodservice.KeyboardView.onLongPress(Landroid/inputmethodservice/Keyboard$Key;)Z
NO_CATEGORY android.inputmethodservice.KeyboardView.setShifted(Z)Z
NO_CATEGORY android.inputmethodservice.KeyboardView.setVerticalCorrection(I)V
NO_CATEGORY android.inputmethodservice.SoftInputWindow.setGravity(I)V
NO_CATEGORY android.inputmethodservice.SoftInputWindow.setSize(I)V
NO_CATEGORY android.location.Address$1.createFromParcel(Landroid/os/Parcel;)Landroid/location/Address;
NO_CATEGORY android.location.Address.setAddressLine(ILjava/lang/String;)V
NO_CATEGORY android.location.Address.setExtras(Landroid/os/Bundle;)V
#NO_CATEGORY android.location.Criteria.setAccuracy(I)V
NO_CATEGORY android.location.GpsStatus.setStatus(Landroid/location/GpsStatus;)V
NO_CATEGORY android.location.ICountryDetector$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.location.ICountryDetector$Stub$Proxy.addCountryListener(Landroid/location/ICountryListener;)V
NO_CATEGORY android.location.ICountryDetector$Stub$Proxy.removeCountryListener(Landroid/location/ICountryListener;)V
NO_CATEGORY android.location.IGeocodeProvider$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.location.IGpsStatusListener$Stub$Proxy.onFirstFix(I)V
NO_CATEGORY android.location.IGpsStatusListener$Stub$Proxy.onNmeaReceived(JLjava/lang/String;)V
NO_CATEGORY android.location.IGpsStatusListener$Stub$Proxy.onSvStatusChanged(I[I[F[F[FIII)V
NO_CATEGORY android.location.IGpsStatusProvider$Stub$Proxy.addGpsStatusListener(Landroid/location/IGpsStatusListener;)V
NO_CATEGORY android.location.IGpsStatusProvider$Stub$Proxy.removeGpsStatusListener(Landroid/location/IGpsStatusListener;)V
NO_CATEGORY android.location.ILocationListener$Stub$Proxy.onProviderDisabled(Ljava/lang/String;)V
NO_CATEGORY android.location.ILocationListener$Stub$Proxy.onProviderEnabled(Ljava/lang/String;)V
NO_CATEGORY android.location.ILocationListener$Stub$Proxy.onStatusChanged(Ljava/lang/String;ILandroid/os/Bundle;)V
NO_CATEGORY android.location.INetInitiatedListener$Stub$Proxy.sendNiResponse(II)Z
NO_CATEGORY android.location.Location.dump(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY android.location.LocationManager$ListenerTransport.onStatusChanged(Ljava/lang/String;ILandroid/os/Bundle;)V
NO_CATEGORY android.location.LocationRequest.setExpireIn(J)Landroid/location/LocationRequest;
NO_CATEGORY android.location.Location.setExtraLocation(Ljava/lang/String;Landroid/location/Location;)V
NO_CATEGORY android.location.Location.setExtras(Landroid/os/Bundle;)V
NO_CATEGORY android.location.Location.set(Landroid/location/Location;)V
NO_CATEGORY android.media.AsyncPlayer.setUsesWakeLock(Landroid/content/Context;)V
NO_CATEGORY android.media.effect.effects.BackDropperEffect.apply(IIII)V android.permission.CAMERA android.permission.RECORD_AUDIO 
NO_CATEGORY android.media.effect.effects.BackDropperEffect.setParameter(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY android.media.effect.FilterGraphEffect.apply(IIII)V android.permission.CAMERA android.permission.RECORD_AUDIO 
NO_CATEGORY android.media.effect.FilterGraphEffect.setParameter(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY android.media.effect.SingleFilterEffect.setParameter(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY android.media.ExifInterface.setAttribute(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.media.IMediaScannerListener$Stub$Proxy.scanCompleted(Ljava/lang/String;Landroid/net/Uri;)V
NO_CATEGORY android.media.IMediaScannerService$Stub$Proxy.requestScanFile(Ljava/lang/String;Ljava/lang/String;Landroid/media/IMediaScannerListener;)V
NO_CATEGORY android.media.IMediaScannerService$Stub$Proxy.scanFile(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.media.IRemoteControlClient$Stub$Proxy.onInformationRequested(IIII)V
NO_CATEGORY android.media.IRemoteControlClient$Stub$Proxy.plugRemoteControlDisplay(Landroid/media/IRemoteControlDisplay;)V
NO_CATEGORY android.media.IRemoteControlClient$Stub$Proxy.setCurrentClientGenerationId(I)V
NO_CATEGORY android.media.IRemoteControlClient$Stub$Proxy.unplugRemoteControlDisplay(Landroid/media/IRemoteControlDisplay;)V
NO_CATEGORY android.media.IRemoteControlDisplay$Stub$Proxy.setAllMetadata(ILandroid/os/Bundle;Landroid/graphics/Bitmap;)V
NO_CATEGORY android.media.IRemoteControlDisplay$Stub$Proxy.setArtwork(ILandroid/graphics/Bitmap;)V
NO_CATEGORY android.media.IRemoteControlDisplay$Stub$Proxy.setCurrentClientId(ILandroid/app/PendingIntent;Z)V
NO_CATEGORY android.media.IRemoteControlDisplay$Stub$Proxy.setMetadata(ILandroid/os/Bundle;)V
NO_CATEGORY android.media.IRemoteControlDisplay$Stub$Proxy.setPlaybackState(IIJ)V
NO_CATEGORY android.media.IRemoteControlDisplay$Stub$Proxy.setTransportControlFlags(II)V
NO_CATEGORY android.media.IRemoteVolumeObserver$Stub$Proxy.dispatchRemoteVolumeUpdate(II)V
NO_CATEGORY android.media.IRingtonePlayer$Stub$Proxy.isPlaying(Landroid/os/IBinder;)Z
NO_CATEGORY android.media.IRingtonePlayer$Stub$Proxy.stop(Landroid/os/IBinder;)V
NO_CATEGORY android.media.MediaFile.addFileType(Ljava/lang/String;ILjava/lang/String;I)V
NO_CATEGORY android.media.MediaFile.addFileType(Ljava/lang/String;ILjava/lang/String;)V
NO_CATEGORY android.media.MediaMetadataRetriever.setDataSource(Ljava/lang/String;Ljava/util/Map;)V
NO_CATEGORY android.media.MediaPlayer.setDataSource(Ljava/lang/String;Ljava/util/Map;)V
NO_CATEGORY android.media.MediaPlayer.setDataSource(Ljava/lang/String;)V
NO_CATEGORY android.media.MediaPlayer.setMetadataFilter(Ljava/util/Set;Ljava/util/Set;)I
NO_CATEGORY android.media.MediaPlayer.setParameter(II)Z
NO_CATEGORY android.media.MediaPlayer.setParameter(ILjava/lang/String;)Z
NO_CATEGORY android.media.MediaPlayer.setRetransmitEndpoint(Ljava/net/InetSocketAddress;)V
NO_CATEGORY android.media.MediaPlayer.setVideoScalingMode(I)V
NO_CATEGORY android.media.MediaPlayer.setWakeMode(Landroid/content/Context;I)V
NO_CATEGORY android.media.MediaRecorder.setAudioChannels(I)V
NO_CATEGORY android.media.MediaRecorder.setAudioEncodingBitRate(I)V
NO_CATEGORY android.media.MediaRecorder.setAudioSamplingRate(I)V
NO_CATEGORY android.media.MediaRecorder.setCaptureRate(D)V
NO_CATEGORY android.media.MediaRecorder.setLocation(FF)V
NO_CATEGORY android.media.MediaRecorder.setOrientationHint(I)V
NO_CATEGORY android.media.MediaRecorder.setProfile(Landroid/media/CamcorderProfile;)V
NO_CATEGORY android.media.MediaRecorder.setVideoEncodingBitRate(I)V
NO_CATEGORY android.media.MediaRouter$RouteGroup.setIconResource(I)V
NO_CATEGORY android.media.MediaRouter$Static.onDisplayAdded(I)V
NO_CATEGORY android.media.MediaRouter$Static.onDisplayChanged(I)V
NO_CATEGORY android.media.MediaRouter$Static.onDisplayRemoved(I)V
NO_CATEGORY android.media.MediaRouter$UserRouteInfo.setIconResource(I)V
NO_CATEGORY android.media.MediaRouter$UserRouteInfo.setVolumeCallback(Landroid/media/MediaRouter$VolumeCallback;)V
NO_CATEGORY android.media.MediaRouter$UserRouteInfo.setVolume(I)V
NO_CATEGORY android.media.MediaRouter$WifiDisplayStatusChangedReceiver.onReceive(Landroid/content/Context;Landroid/content/Intent;)V
NO_CATEGORY android.media.RemoteControlClient.setPlaybackState(I)V
NO_CATEGORY android.media.RingtoneManager.setActualDefaultRingtoneUri(Landroid/content/Context;ILandroid/net/Uri;)V
NO_CATEGORY android.media.ToneGenerator.startTone(I)Z
NO_CATEGORY android.media.videoeditor.MediaImageItem.setGeneratedImageClip(Ljava/lang/String;)V
NO_CATEGORY android.media.videoeditor.Overlay.setUserAttribute(Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY android.mtp.MtpDatabase.addStorage(Landroid/mtp/MtpStorage;)V
#NO_CATEGORY android.mtp.MtpServer.sendObjectAdded(I)V
#NO_CATEGORY android.mtp.MtpServer.sendObjectRemoved(I)V
#NO_CATEGORY android.opengl.GLSurfaceView.setEGLConfigChooser(IIIIII)V
#NO_CATEGORY android.opengl.GLSurfaceView.setEGLConfigChooser(Z)V
#NO_CATEGORY android.opengl.GLSurfaceView.setRenderMode(I)V
NO_CATEGORY android.os.BatteryStats.dumpCheckinLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Ljava/util/List;)V
NO_CATEGORY android.os.BatteryStats.dumpLocked(Ljava/io/PrintWriter;Ljava/lang/String;II)V
NO_CATEGORY android.os.BatteryStats.dumpLocked(Ljava/io/PrintWriter;)V
NO_CATEGORY android.os.BatteryStats$HistoryItem.setTo(Landroid/os/BatteryStats$HistoryItem;)V
NO_CATEGORY android.os.BatteryStats$HistoryItem.writeDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;)V
NO_CATEGORY android.os.Bundle.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.os.CommonTimeConfig.setAutoDisable(Z)I
NO_CATEGORY android.os.CommonTimeConfig.setMasterAnnounceInterval(I)I
NO_CATEGORY android.os.CommonTimeConfig.setMasterElectionEndpoint(Ljava/net/InetSocketAddress;)I
NO_CATEGORY android.os.CommonTimeConfig.setMasterElectionGroupId(J)I
NO_CATEGORY android.os.CommonTimeConfig.setMasterElectionPriority(B)I
NO_CATEGORY android.os.CommonTimeConfig.setNetworkBinding(Ljava/lang/String;)I
NO_CATEGORY android.os.CommonTimeConfig.setPanicThreshold(I)I
NO_CATEGORY android.os.CommonTimeUtils.transactSetInt(II)I
NO_CATEGORY android.os.CommonTimeUtils.transactSetLong(IJ)I
NO_CATEGORY android.os.CommonTimeUtils.transactSetSockaddr(ILjava/net/InetSocketAddress;)I
NO_CATEGORY android.os.CommonTimeUtils.transactSetString(ILjava/lang/String;)I
NO_CATEGORY android.os.Debug.setFieldsOn(Ljava/lang/Class;)V
NO_CATEGORY android.os.Debug.startMethodTracing(Ljava/lang/String;II)V
NO_CATEGORY android.os.Debug.startMethodTracing(Ljava/lang/String;I)V
NO_CATEGORY android.os.Debug.startMethodTracing(Ljava/lang/String;)V
NO_CATEGORY android.os.DropBoxManager$Entry.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.os.FileObserver$ObserverThread.startWatching(Ljava/lang/String;ILandroid/os/FileObserver;)I
NO_CATEGORY android.os.Handler.dump(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY android.os.Handler$MessengerImpl.send(Landroid/os/Message;)V
NO_CATEGORY android.os.Handler.sendEmptyMessageAtTime(IJ)Z
NO_CATEGORY android.os.Handler.sendEmptyMessageDelayed(IJ)Z
NO_CATEGORY android.os.Handler.sendEmptyMessage(I)Z
NO_CATEGORY android.os.Handler.sendMessageDelayed(Landroid/os/Message;J)Z
NO_CATEGORY android.os.Handler.sendMessage(Landroid/os/Message;)Z
NO_CATEGORY android.os.IHardwareService$Stub$Proxy.setFlashlightEnabled(Z)V
NO_CATEGORY android.os.IMessenger$Stub$Proxy.send(Landroid/os/Message;)V
NO_CATEGORY android.os.INetworkManagementService$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.addIdleTimer(Ljava/lang/String;ILjava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.addRoute(Ljava/lang/String;Landroid/net/RouteInfo;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.addSecondaryRoute(Ljava/lang/String;Landroid/net/RouteInfo;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.attachPppd(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.clearInterfaceAddresses(Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.detachPppd(Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.disableIpv6(Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.disableNat(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.enableIpv6(Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.enableNat(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.flushInterfaceDnsCache(Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.removeIdleTimer(Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.removeInterfaceAlert(Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.removeInterfaceQuota(Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.removeRoute(Ljava/lang/String;Landroid/net/RouteInfo;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.removeSecondaryRoute(Ljava/lang/String;Landroid/net/RouteInfo;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.setAccessPoint(Landroid/net/wifi/WifiConfiguration;Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.setDefaultInterfaceForDns(Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.setDnsForwarders([Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.setDnsServersForInterface(Ljava/lang/String;[Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.setFirewallEgressDestRule(Ljava/lang/String;IZ)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.setFirewallEgressSourceRule(Ljava/lang/String;Z)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.setFirewallEnabled(Z)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.setFirewallInterfaceRule(Ljava/lang/String;Z)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.setFirewallUidRule(IZ)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.setGlobalAlert(J)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.setInterfaceAlert(Ljava/lang/String;J)V android.permission.STOP_APP_SWITCHES 
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.setInterfaceConfig(Ljava/lang/String;Landroid/net/InterfaceConfiguration;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.setInterfaceDown(Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.setInterfaceIpv6PrivacyExtensions(Ljava/lang/String;Z)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.setInterfaceQuota(Ljava/lang/String;J)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.setInterfaceThrottle(Ljava/lang/String;II)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.setInterfaceUp(Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.setIpForwardingEnabled(Z)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.setUidNetworkRules(IZ)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.startAccessPoint(Landroid/net/wifi/WifiConfiguration;Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.startReverseTethering(Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.startTethering([Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.stopAccessPoint(Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.tetherInterface(Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.untetherInterface(Ljava/lang/String;)V
NO_CATEGORY android.os.INetworkManagementService$Stub$Proxy.wifiFirmwareReload(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.os.IPermissionController$Stub$Proxy.checkPermission(Ljava/lang/String;II)Z
NO_CATEGORY android.os.IPowerManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.os.IPowerManager$Stub$Proxy.acquireWakeLock(Landroid/os/IBinder;ILjava/lang/String;Landroid/os/WorkSource;)V
NO_CATEGORY android.os.IPowerManager$Stub$Proxy.crash(Ljava/lang/String;)V
NO_CATEGORY android.os.IPowerManager$Stub$Proxy.goToSleep(JI)V
NO_CATEGORY android.os.IPowerManager$Stub$Proxy.nap(J)V
NO_CATEGORY android.os.IPowerManager$Stub$Proxy.reboot(ZLjava/lang/String;Z)V
NO_CATEGORY android.os.IPowerManager$Stub$Proxy.releaseWakeLock(Landroid/os/IBinder;I)V
NO_CATEGORY android.os.IPowerManager$Stub$Proxy.setAttentionLight(ZI)V android.permission.DEVICE_POWER 
NO_CATEGORY android.os.IPowerManager$Stub$Proxy.setMaximumScreenOffTimeoutFromDeviceAdmin(I)V
NO_CATEGORY android.os.IPowerManager$Stub$Proxy.setStayOnSetting(I)V
NO_CATEGORY android.os.IPowerManager$Stub$Proxy.setTemporaryScreenAutoBrightnessAdjustmentSettingOverride(F)V
NO_CATEGORY android.os.IPowerManager$Stub$Proxy.setTemporaryScreenBrightnessSettingOverride(I)V
NO_CATEGORY android.os.IPowerManager$Stub$Proxy.updateWakeLockWorkSource(Landroid/os/IBinder;Landroid/os/WorkSource;)V
NO_CATEGORY android.os.IPowerManager$Stub$Proxy.userActivity(JII)V
NO_CATEGORY android.os.IPowerManager$Stub$Proxy.wakeUp(J)V
NO_CATEGORY android.os.IRemoteCallback$Stub$Proxy.sendResult(Landroid/os/Bundle;)V
NO_CATEGORY android.os.ISchedulingPolicyService$Stub$Proxy.requestPriority(III)I
NO_CATEGORY android.os.IUpdateLock$Stub$Proxy.acquireUpdateLock(Landroid/os/IBinder;Ljava/lang/String;)V
NO_CATEGORY android.os.IUpdateLock$Stub$Proxy.releaseUpdateLock(Landroid/os/IBinder;)V
NO_CATEGORY android.os.IUserManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.os.IUserManager$Stub$Proxy.removeUser(I)Z
NO_CATEGORY android.os.IUserManager$Stub$Proxy.setGuestEnabled(Z)V
NO_CATEGORY android.os.IUserManager$Stub$Proxy.setUserIcon(ILandroid/graphics/Bitmap;)V
NO_CATEGORY android.os.IUserManager$Stub$Proxy.setUserName(ILjava/lang/String;)V
NO_CATEGORY android.os.IUserManager$Stub$Proxy.wipeUser(I)V
NO_CATEGORY android.os.IVibratorService$Stub$Proxy.cancelVibrate(Landroid/os/IBinder;)V
NO_CATEGORY android.os.IVibratorService$Stub$Proxy.vibrate(JLandroid/os/IBinder;)V android.permission.VIBRATE android.permission.WAKE_LOCK 
NO_CATEGORY android.os.IVibratorService$Stub$Proxy.vibratePattern([JILandroid/os/IBinder;)V
NO_CATEGORY android.os.MemoryFile$MemoryOutputStream.write([BII)V
NO_CATEGORY android.os.Message.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.os.Messenger.send(Landroid/os/Message;)V
NO_CATEGORY android.os.Messenger.writeMessengerOrNullToParcel(Landroid/os/Messenger;Landroid/os/Parcel;)V
NO_CATEGORY android.os.Parcel.setDataCapacity(I)V
NO_CATEGORY android.os.Parcel.setDataPosition(I)V
NO_CATEGORY android.os.Parcel.setDataSize(I)V
NO_CATEGORY android.os.Parcel.writeArray([Ljava/lang/Object;)V
NO_CATEGORY android.os.Parcel.writeBinderArray([Landroid/os/IBinder;)V
NO_CATEGORY android.os.Parcel.writeByteArray([B)V
NO_CATEGORY android.os.Parcel.writeByte(B)V
NO_CATEGORY android.os.Parcel.writeCharArray([C)V
NO_CATEGORY android.os.Parcel.writeCharSequenceArray([Ljava/lang/CharSequence;)V
NO_CATEGORY android.os.Parcel.writeDoubleArray([D)V
NO_CATEGORY android.os.Parcel.writeException(Ljava/lang/Exception;)V
NO_CATEGORY android.os.Parcel.writeFloatArray([F)V
NO_CATEGORY android.os.Parcel.writeIntArray([I)V
NO_CATEGORY android.os.Parcel.writeLongArray([J)V
NO_CATEGORY android.os.Parcel.writeParcelableArray([Landroid/os/Parcelable;I)V
NO_CATEGORY android.os.Parcel.writeSparseArray(Landroid/util/SparseArray;)V
NO_CATEGORY android.os.Parcel.writeSparseBooleanArray(Landroid/util/SparseBooleanArray;)V
NO_CATEGORY android.os.Parcel.writeStringArray([Ljava/lang/String;)V
NO_CATEGORY android.os.Parcel.writeTypedArray([Landroid/os/Parcelable;I)V
NO_CATEGORY android.os.Parcel.writeValue(Ljava/lang/Object;)V
NO_CATEGORY android.os.PerformanceCollector.addIteration(Ljava/lang/String;)Landroid/os/Bundle;
NO_CATEGORY android.os.PerformanceCollector.addMeasurement(Ljava/lang/String;F)V
NO_CATEGORY android.os.PerformanceCollector.addMeasurement(Ljava/lang/String;J)V
NO_CATEGORY android.os.PerformanceCollector.addMeasurement(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.os.PerformanceCollector.beginSnapshot(Ljava/lang/String;)V
NO_CATEGORY android.os.PerformanceCollector.startTiming(Ljava/lang/String;)V
NO_CATEGORY android.os.PerformanceCollector.stopTiming(Ljava/lang/String;)Landroid/os/Bundle;
NO_CATEGORY android.os.PowerManager.setBacklightBrightness(I)V
NO_CATEGORY android.os.PowerManager$WakeLock.setWorkSource(Landroid/os/WorkSource;)V
NO_CATEGORY android.os.RegistrantList.notifyException(Ljava/lang/Throwable;)V
NO_CATEGORY android.os.RegistrantList.notifyRegistrants(Landroid/os/AsyncResult;)V
NO_CATEGORY android.os.RegistrantList.notifyResult(Ljava/lang/Object;)V
NO_CATEGORY android.os.Registrant.notifyException(Ljava/lang/Throwable;)V
NO_CATEGORY android.os.Registrant.notifyRegistrant(Landroid/os/AsyncResult;)V
NO_CATEGORY android.os.Registrant.notifyResult(Ljava/lang/Object;)V
NO_CATEGORY android.os.RemoteCallback$LocalCallback.sendResult(Landroid/os/Bundle;)V
NO_CATEGORY android.os.RemoteCallback.sendResult(Landroid/os/Bundle;)V
NO_CATEGORY android.os.ResultReceiver$MyResultReceiver.send(ILandroid/os/Bundle;)V
NO_CATEGORY android.os.ResultReceiver.send(ILandroid/os/Bundle;)V
NO_CATEGORY android.os.ServiceManagerNative.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.os.ServiceManagerProxy.addService(Ljava/lang/String;Landroid/os/IBinder;Z)V
NO_CATEGORY android.os.ServiceManagerProxy.checkService(Ljava/lang/String;)Landroid/os/IBinder;
NO_CATEGORY android.os.ServiceManagerProxy.setPermissionController(Landroid/os/IPermissionController;)V
NO_CATEGORY android.os.storage.IMountServiceListener$Stub$Proxy.onStorageStateChanged(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.os.storage.IMountService$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.changeEncryptionPassword(Ljava/lang/String;)I
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.createSecureContainer(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;IZ)I
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.decryptStorage(Ljava/lang/String;)I
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.destroySecureContainer(Ljava/lang/String;Z)I
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.encryptStorage(Ljava/lang/String;)I
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.finalizeSecureContainer(Ljava/lang/String;)I
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.fixPermissionsSecureContainer(Ljava/lang/String;ILjava/lang/String;)I
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.formatVolume(Ljava/lang/String;)I
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.isObbMounted(Ljava/lang/String;)Z
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.isSecureContainerMounted(Ljava/lang/String;)Z
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.mountObb(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/storage/IObbActionListener;I)V
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.mountSecureContainer(Ljava/lang/String;Ljava/lang/String;I)I
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.mountVolume(Ljava/lang/String;)I
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.registerListener(Landroid/os/storage/IMountServiceListener;)V
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.renameSecureContainer(Ljava/lang/String;Ljava/lang/String;)I
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.setUsbMassStorageEnabled(Z)V
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.shutdown(Landroid/os/storage/IMountShutdownObserver;)V android.permission.MOUNT_UNMOUNT_FILESYSTEMS 
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.unmountObb(Ljava/lang/String;ZLandroid/os/storage/IObbActionListener;I)V
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.unmountSecureContainer(Ljava/lang/String;Z)I
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.unmountVolume(Ljava/lang/String;ZZ)V android.permission.MOUNT_UNMOUNT_FILESYSTEMS 
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.unregisterListener(Landroid/os/storage/IMountServiceListener;)V
NO_CATEGORY android.os.storage.IMountService$Stub$Proxy.verifyEncryptionPassword(Ljava/lang/String;)I
NO_CATEGORY android.os.storage.IMountShutdownObserver$Stub$Proxy.onShutDownComplete(I)V
NO_CATEGORY android.os.storage.IObbActionListener$Stub$Proxy.onObbResult(Ljava/lang/String;II)V
NO_CATEGORY android.os.storage.StorageManager$ListenerDelegate.sendShareAvailabilityChanged(Z)V
NO_CATEGORY android.os.storage.StorageManager$ListenerDelegate.sendStorageStateChanged(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.os.storage.StorageManager$MountServiceBinderListener.onStorageStateChanged(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.os.storage.StorageManager$MountServiceBinderListener.onUsbMassStorageConnectionChanged(Z)V
NO_CATEGORY android.os.storage.StorageManager$ObbActionListener.addListener(Landroid/os/storage/OnObbStateChangeListener;)I
NO_CATEGORY android.os.storage.StorageManager$ObbListenerDelegate.sendObbStateChanged(Ljava/lang/String;I)V
NO_CATEGORY android.os.storage.StorageVolume.setStorageId(I)V
NO_CATEGORY android.os.StrictMode.incrementExpectedActivityCount(Ljava/lang/Class;)V
NO_CATEGORY android.os.StrictMode.setThreadPolicy(Landroid/os/StrictMode$ThreadPolicy;)V
NO_CATEGORY android.os.StrictMode$ViolationInfo.dump(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY android.os.StrictMode$ViolationInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.os.StrictMode$VmPolicy$Builder.setClassInstanceLimit(Ljava/lang/Class;I)Landroid/os/StrictMode$VmPolicy$Builder;
NO_CATEGORY android.os.SystemProperties.set(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.os.UserHandle.writeToParcel(Landroid/os/UserHandle;Landroid/os/Parcel;)V
NO_CATEGORY android.os.WorkSource.add(Landroid/os/WorkSource;)Z
NO_CATEGORY android.os.WorkSource.set(I)V
NO_CATEGORY android.os.WorkSource.set(Landroid/os/WorkSource;)V
NO_CATEGORY android.os.WorkSource.setReturningDiffs(Landroid/os/WorkSource;)[Landroid/os/WorkSource;
#NO_CATEGORY android.preference.DialogPreference$SavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.preference.DialogPreference.setDialogIcon(I)V
#NO_CATEGORY android.preference.DialogPreference.setDialogMessage(I)V
#NO_CATEGORY android.preference.DialogPreference.setDialogTitle(I)V
#NO_CATEGORY android.preference.DialogPreference.setNegativeButtonText(I)V
#NO_CATEGORY android.preference.DialogPreference.setPositiveButtonText(I)V
#NO_CATEGORY android.preference.EditTextPreference$SavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.preference.GenericInflater.createItem(Ljava/lang/String;Ljava/lang/String;Landroid/util/AttributeSet;)Ljava/lang/Object;
#NO_CATEGORY android.preference.ListPreference$SavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.preference.ListPreference.setEntries(I)V
#NO_CATEGORY android.preference.ListPreference.setEntryValues(I)V
#NO_CATEGORY android.preference.ListPreference.setValueIndex(I)V
#NO_CATEGORY android.preference.PreferenceActivity$Header.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.preference.PreferenceActivity.onBuildStartFragmentIntent(Ljava/lang/String;Landroid/os/Bundle;II)Landroid/content/Intent;
#NO_CATEGORY android.preference.PreferenceActivity.onPreferenceStartFragment(Landroid/preference/PreferenceFragment;Landroid/preference/Preference;)Z
#NO_CATEGORY android.preference.PreferenceActivity.setListFooter(Landroid/view/View;)V
#NO_CATEGORY android.preference.PreferenceActivity.setPreferenceScreen(Landroid/preference/PreferenceScreen;)V
#NO_CATEGORY android.preference.PreferenceActivity.startPreferencePanel(Ljava/lang/String;Landroid/os/Bundle;ILjava/lang/CharSequence;Landroid/app/Fragment;I)V
#NO_CATEGORY android.preference.PreferenceActivity.startWithFragment(Ljava/lang/String;Landroid/os/Bundle;Landroid/app/Fragment;III)V
#NO_CATEGORY android.preference.PreferenceActivity.startWithFragment(Ljava/lang/String;Landroid/os/Bundle;Landroid/app/Fragment;I)V
#NO_CATEGORY android.preference.PreferenceFragment.setPreferenceScreen(Landroid/preference/PreferenceScreen;)V
#NO_CATEGORY android.preference.PreferenceGroup.setEnabled(Z)V
#NO_CATEGORY android.preference.PreferenceManager.setDefaultValues(Landroid/content/Context;IZ)V
#NO_CATEGORY android.preference.PreferenceManager.setDefaultValues(Landroid/content/Context;Ljava/lang/String;IIZ)V
#NO_CATEGORY android.preference.Preference.notifyDependencyChange(Z)V
#NO_CATEGORY android.preference.Preference.persistBoolean(Z)Z
#NO_CATEGORY android.preference.Preference.persistFloat(F)Z
#NO_CATEGORY android.preference.Preference.persistInt(I)Z
#NO_CATEGORY android.preference.Preference.persistLong(J)Z
#NO_CATEGORY android.preference.Preference.persistString(Ljava/lang/String;)Z
#NO_CATEGORY android.preference.PreferenceScreen$SavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.preference.Preference.setSummary(I)V
#NO_CATEGORY android.preference.Preference.setTitle(I)V
#NO_CATEGORY android.preference.TwoStatePreference$SavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.preference.TwoStatePreference.setSummaryOff(I)V
#NO_CATEGORY android.preference.TwoStatePreference.setSummaryOn(I)V
#NO_CATEGORY android.preference.VolumePreference$SavedState.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.provider.BrowserContract$SyncState.set(Landroid/content/ContentProviderClient;Landroid/accounts/Account;[B)V
NO_CATEGORY android.provider.Browser.saveBookmark(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.provider.Browser.sendString(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.provider.Browser.sendString(Landroid/content/Context;Ljava/lang/String;)V
NO_CATEGORY android.provider.CalendarContract$CalendarAlerts.scheduleAlarm(Landroid/content/Context;Landroid/app/AlarmManager;J)V
NO_CATEGORY android.provider.CallLog$Calls.addCall(Lcom/android/internal/telephony/CallerInfo;Landroid/content/Context;Ljava/lang/String;IIJI)Landroid/net/Uri;
NO_CATEGORY android.provider.Settings$Secure.setLocationProviderEnabledForUser(Landroid/content/ContentResolver;Ljava/lang/String;ZI)V
NO_CATEGORY android.provider.Settings$System.setShowGTalkServiceStatusForUser(Landroid/content/ContentResolver;ZI)V
NO_CATEGORY android.provider.SyncStateContract$Helpers.set(Landroid/content/ContentProviderClient;Landroid/net/Uri;Landroid/accounts/Account;[B)V
NO_CATEGORY android.provider.SyncStateContract$Helpers.update(Landroid/content/ContentProviderClient;Landroid/net/Uri;[B)V
NO_CATEGORY android.provider.UserDictionary$Words.addWord(Landroid/content/Context;Ljava/lang/String;ILjava/lang/String;Ljava/util/Locale;)V
#NO_CATEGORY android.renderscript.AllocationAdapter.setLOD(I)V
#NO_CATEGORY android.renderscript.Allocation.setFromFieldPacker(IILandroid/renderscript/FieldPacker;)V
#NO_CATEGORY android.renderscript.Allocation.setFromFieldPacker(ILandroid/renderscript/FieldPacker;)V
#NO_CATEGORY android.renderscript.Allocation.setSurface(Landroid/view/Surface;)V
#NO_CATEGORY android.renderscript.Allocation.setSurfaceTexture(Landroid/graphics/SurfaceTexture;)V
#NO_CATEGORY android.renderscript.Matrix2f.set(IIF)V
#NO_CATEGORY android.renderscript.Matrix3f.set(IIF)V
#NO_CATEGORY android.renderscript.Matrix4f.set(IIF)V
#NO_CATEGORY android.renderscript.ProgramFragmentFixedFunction$Builder.setTexture(Landroid/renderscript/ProgramFragmentFixedFunction$Builder$EnvMode;Landroid/renderscript/ProgramFragmentFixedFunction$Builder$Format;I)Landroid/renderscript/ProgramFragmentFixedFunction$Builder;
#NO_CATEGORY android.renderscript.ProgramVertexFixedFunction.bindConstants(Landroid/renderscript/ProgramVertexFixedFunction$Constants;)V
#NO_CATEGORY android.renderscript.ProgramVertexFixedFunction$Constants.setModelview(Landroid/renderscript/Matrix4f;)V
#NO_CATEGORY android.renderscript.ProgramVertexFixedFunction$Constants.setProjection(Landroid/renderscript/Matrix4f;)V
#NO_CATEGORY android.renderscript.ProgramVertexFixedFunction$Constants.setTexture(Landroid/renderscript/Matrix4f;)V
#NO_CATEGORY android.renderscript.RenderScript.setPriority(Landroid/renderscript/RenderScript$Priority;)V
#NO_CATEGORY android.renderscript.RenderScript.setupDiskCache(Ljava/io/File;)V
#NO_CATEGORY android.renderscript.Script.createFieldID(ILandroid/renderscript/Element;)Landroid/renderscript/Script$FieldID;
#NO_CATEGORY android.renderscript.Script.createKernelID(IILandroid/renderscript/Element;Landroid/renderscript/Element;)Landroid/renderscript/Script$KernelID;
#NO_CATEGORY android.renderscript.Script.setTimeZone(Ljava/lang/String;)V
#NO_CATEGORY android.renderscript.Script.setVar(ID)V
#NO_CATEGORY android.renderscript.Script.setVar(IF)V
#NO_CATEGORY android.renderscript.Script.setVar(II)V
#NO_CATEGORY android.renderscript.Script.setVar(IJ)V
#NO_CATEGORY android.renderscript.Script.setVar(ILandroid/renderscript/BaseObj;)V
#NO_CATEGORY android.renderscript.Script.setVar(ILandroid/renderscript/FieldPacker;Landroid/renderscript/Element;[I)V
#NO_CATEGORY android.renderscript.Script.setVar(ILandroid/renderscript/FieldPacker;)V
#NO_CATEGORY android.renderscript.Script.setVar(IZ)V
#NO_CATEGORY android.sax.RootElement$Handler.startElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V
NO_CATEGORY android.security.Credentials.convertToPem([Ljava/security/cert/Certificate;)[B
NO_CATEGORY android.security.IKeyChainAliasCallback$Stub$Proxy.alias(Ljava/lang/String;)V
NO_CATEGORY android.security.IKeyChainService$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.security.IKeyChainService$Stub$Proxy.deleteCaCertificate(Ljava/lang/String;)Z
NO_CATEGORY android.security.IKeyChainService$Stub$Proxy.hasGrant(ILjava/lang/String;)Z
NO_CATEGORY android.security.IKeyChainService$Stub$Proxy.installCaCertificate([B)V
NO_CATEGORY android.security.IKeyChainService$Stub$Proxy.requestPrivateKey(Ljava/lang/String;)Ljava/lang/String;
NO_CATEGORY android.security.IKeyChainService$Stub$Proxy.setGrant(ILjava/lang/String;Z)V
NO_CATEGORY android.security.KeyChain.choosePrivateKeyAlias(Landroid/app/Activity;Landroid/security/KeyChainAliasCallback;[Ljava/lang/String;[Ljava/security/Principal;Ljava/lang/String;ILjava/lang/String;)V
NO_CATEGORY android.security.KeyStore.put(Ljava/lang/String;[B)Z
#NO_CATEGORY android.service.dreams.IDreamManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY android.service.dreams.IDreamManager$Stub$Proxy.finishSelf(Landroid/os/IBinder;)V
#NO_CATEGORY android.service.dreams.IDreamManager$Stub$Proxy.setDreamComponents([Landroid/content/ComponentName;)V
#NO_CATEGORY android.service.dreams.IDreamService$Stub$Proxy.attach(Landroid/os/IBinder;)V
#NO_CATEGORY android.service.wallpaper.IWallpaperConnection$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY android.service.wallpaper.IWallpaperConnection$Stub$Proxy.attachEngine(Landroid/service/wallpaper/IWallpaperEngine;)V
#NO_CATEGORY android.service.wallpaper.IWallpaperConnection$Stub$Proxy.engineShown(Landroid/service/wallpaper/IWallpaperEngine;)V
#NO_CATEGORY android.service.wallpaper.IWallpaperConnection$Stub$Proxy.setWallpaper(Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;
#NO_CATEGORY android.service.wallpaper.IWallpaperEngine$Stub$Proxy.dispatchWallpaperCommand(Ljava/lang/String;IIILandroid/os/Bundle;)V
#NO_CATEGORY android.service.wallpaper.IWallpaperEngine$Stub$Proxy.setDesiredSize(II)V
#NO_CATEGORY android.service.wallpaper.IWallpaperEngine$Stub$Proxy.setVisibility(Z)V
#NO_CATEGORY android.service.wallpaper.IWallpaperService$Stub$Proxy.attach(Landroid/service/wallpaper/IWallpaperConnection;Landroid/os/IBinder;IZII)V
#NO_CATEGORY android.service.wallpaper.WallpaperService$Engine$2.setFixedSize(II)V
#NO_CATEGORY android.service.wallpaper.WallpaperService$Engine.setOffsetNotificationsEnabled(Z)V
#NO_CATEGORY android.service.wallpaper.WallpaperService$Engine.setTouchEventsEnabled(Z)V
#NO_CATEGORY android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper.dispatchWallpaperCommand(Ljava/lang/String;IIILandroid/os/Bundle;)V
#NO_CATEGORY android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper.setDesiredSize(II)V
#NO_CATEGORY android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper.setVisibility(Z)V
#NO_CATEGORY android.speech.IRecognitionListener$Stub$Proxy.onBufferReceived([B)V
#NO_CATEGORY android.speech.IRecognitionListener$Stub$Proxy.onError(I)V
#NO_CATEGORY android.speech.IRecognitionListener$Stub$Proxy.onEvent(ILandroid/os/Bundle;)V
#NO_CATEGORY android.speech.IRecognitionListener$Stub$Proxy.onRmsChanged(F)V
#NO_CATEGORY android.speech.IRecognitionService$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY android.speech.IRecognitionService$Stub$Proxy.cancel(Landroid/speech/IRecognitionListener;)V
#NO_CATEGORY android.speech.IRecognitionService$Stub$Proxy.startListening(Landroid/content/Intent;Landroid/speech/IRecognitionListener;)V
#NO_CATEGORY android.speech.IRecognitionService$Stub$Proxy.stopListening(Landroid/speech/IRecognitionListener;)V
#NO_CATEGORY android.speech.RecognitionService$RecognitionServiceBinder.startListening(Landroid/content/Intent;Landroid/speech/IRecognitionListener;)V
#NO_CATEGORY android.speech.SpeechRecognizer.setRecognitionListener(Landroid/speech/RecognitionListener;)V
#NO_CATEGORY android.speech.tts.AudioPlaybackHandler.enqueue(Landroid/speech/tts/PlaybackQueueItem;)V
#NO_CATEGORY android.speech.tts.BlockingAudioTrack.write([B)I
#NO_CATEGORY android.speech.tts.ITextToSpeechCallback$Stub$Proxy.onDone(Ljava/lang/String;)V
#NO_CATEGORY android.speech.tts.ITextToSpeechCallback$Stub$Proxy.onError(Ljava/lang/String;)V
#NO_CATEGORY android.speech.tts.ITextToSpeechCallback$Stub$Proxy.onStart(Ljava/lang/String;)V
#NO_CATEGORY android.speech.tts.ITextToSpeechService$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY android.speech.tts.ITextToSpeechService$Stub$Proxy.loadLanguage(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
#NO_CATEGORY android.speech.tts.ITextToSpeechService$Stub$Proxy.playSilence(Landroid/os/IBinder;JILandroid/os/Bundle;)I
#NO_CATEGORY android.speech.tts.ITextToSpeechService$Stub$Proxy.setCallback(Landroid/os/IBinder;Landroid/speech/tts/ITextToSpeechCallback;)V
#NO_CATEGORY android.speech.tts.ITextToSpeechService$Stub$Proxy.speak(Landroid/os/IBinder;Ljava/lang/String;ILandroid/os/Bundle;)I
#NO_CATEGORY android.speech.tts.ITextToSpeechService$Stub$Proxy.stop(Landroid/os/IBinder;)I
#NO_CATEGORY android.speech.tts.ITextToSpeechService$Stub$Proxy.synthesizeToFile(Landroid/os/IBinder;Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)I
#NO_CATEGORY android.speech.tts.TextToSpeech.addEarcon(Ljava/lang/String;Ljava/lang/String;)I
#NO_CATEGORY android.speech.tts.TextToSpeech.addEarcon(Ljava/lang/String;Ljava/lang/String;I)I
#NO_CATEGORY android.speech.tts.TextToSpeech.addSpeech(Ljava/lang/String;Ljava/lang/String;)I
#NO_CATEGORY android.speech.tts.TextToSpeech.addSpeech(Ljava/lang/String;Ljava/lang/String;I)I
#NO_CATEGORY android.speech.tts.TextToSpeechService$CallbackMap.setCallback(Landroid/os/IBinder;Landroid/speech/tts/ITextToSpeechCallback;)V
#NO_CATEGORY android.speech.tts.TextToSpeech.setLanguage(Ljava/util/Locale;)I
#NO_CATEGORY android.speech.tts.TextToSpeech.setPitch(F)I
#NO_CATEGORY android.speech.tts.TextToSpeech.setSpeechRate(F)I
#NO_CATEGORY android.speech.tts.TtsEngines.updateLocalePrefForEngine(Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl.setMenuVisibility(Landroid/app/Fragment;Z)V
#NO_CATEGORY android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl.setUserVisibleHint(Landroid/app/Fragment;Z)V
#NO_CATEGORY android.support.v13.app.FragmentCompat$ICSFragmentCompatImpl.setMenuVisibility(Landroid/app/Fragment;Z)V
#NO_CATEGORY android.support.v13.app.FragmentCompat$ICSMR1FragmentCompatImpl.setUserVisibleHint(Landroid/app/Fragment;Z)V
#NO_CATEGORY android.support.v13.app.FragmentCompatICSMR1.setUserVisibleHint(Landroid/app/Fragment;Z)V
#NO_CATEGORY android.support.v13.app.FragmentCompatICS.setMenuVisibility(Landroid/app/Fragment;Z)V
#NO_CATEGORY android.support.v13.app.FragmentCompat.setMenuVisibility(Landroid/app/Fragment;Z)V
#NO_CATEGORY android.support.v13.app.FragmentCompat.setUserVisibleHint(Landroid/app/Fragment;Z)V
#NO_CATEGORY android.support.v13.app.FragmentPagerAdapter.setPrimaryItem(Landroid/view/ViewGroup;ILjava/lang/Object;)V
#NO_CATEGORY android.support.v4.app.NotificationCompat$Builder.setAutoCancel(Z)Landroid/support/v4/app/NotificationCompat$Builder;
#NO_CATEGORY android.support.v4.app.NotificationCompat$Builder.setOngoing(Z)Landroid/support/v4/app/NotificationCompat$Builder;
#NO_CATEGORY android.support.v4.app.NotificationCompat$Builder.setOnlyAlertOnce(Z)Landroid/support/v4/app/NotificationCompat$Builder;
#NO_CATEGORY android.support.v4.content.LocalBroadcastManager.registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)V
#NO_CATEGORY android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl.setThreadStatsTag(I)V
#NO_CATEGORY android.support.v4.net.TrafficStatsCompatIcs.setThreadStatsTag(I)V
#NO_CATEGORY android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl.setThreadStatsTag(I)V
#NO_CATEGORY android.support.v4.net.TrafficStatsCompat.setThreadStatsTag(I)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl.setBoundsInParent(Ljava/lang/Object;Landroid/graphics/Rect;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl.setBoundsInScreen(Ljava/lang/Object;Landroid/graphics/Rect;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl.setClassName(Ljava/lang/Object;Ljava/lang/CharSequence;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl.setContentDescription(Ljava/lang/Object;Ljava/lang/CharSequence;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl.setEnabled(Ljava/lang/Object;Z)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl.setPackageName(Ljava/lang/Object;Ljava/lang/CharSequence;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl.setParent(Ljava/lang/Object;Landroid/view/View;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl.setSource(Ljava/lang/Object;Landroid/view/View;I)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl.setVisibleToUser(Ljava/lang/Object;Z)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl.setBoundsInParent(Ljava/lang/Object;Landroid/graphics/Rect;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl.setBoundsInScreen(Ljava/lang/Object;Landroid/graphics/Rect;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl.setClassName(Ljava/lang/Object;Ljava/lang/CharSequence;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl.setContentDescription(Ljava/lang/Object;Ljava/lang/CharSequence;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl.setEnabled(Ljava/lang/Object;Z)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl.setPackageName(Ljava/lang/Object;Ljava/lang/CharSequence;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl.setParent(Ljava/lang/Object;Landroid/view/View;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl.setSource(Ljava/lang/Object;Landroid/view/View;I)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl.setVisibleToUser(Ljava/lang/Object;Z)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setBoundsInParent(Ljava/lang/Object;Landroid/graphics/Rect;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setBoundsInScreen(Ljava/lang/Object;Landroid/graphics/Rect;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setClassName(Ljava/lang/Object;Ljava/lang/CharSequence;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setContentDescription(Ljava/lang/Object;Ljava/lang/CharSequence;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setEnabled(Ljava/lang/Object;Z)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setPackageName(Ljava/lang/Object;Ljava/lang/CharSequence;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setParent(Ljava/lang/Object;Landroid/view/View;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean.setSource(Ljava/lang/Object;Landroid/view/View;I)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean.setVisibleToUser(Ljava/lang/Object;Z)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setBoundsInParent(Landroid/graphics/Rect;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setBoundsInScreen(Landroid/graphics/Rect;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setEnabled(Z)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setParent(Landroid/view/View;)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setSource(Landroid/view/View;I)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setVisibleToUser(Z)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl.setSource(Ljava/lang/Object;Landroid/view/View;I)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl.setSource(Ljava/lang/Object;Landroid/view/View;I)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean.setSource(Ljava/lang/Object;Landroid/view/View;I)V
#NO_CATEGORY android.support.v4.view.accessibility.AccessibilityRecordCompat.setSource(Landroid/view/View;I)V
#NO_CATEGORY android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1.sendAccessibilityEvent(Landroid/view/View;I)V
#NO_CATEGORY android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl.sendAccessibilityEvent(Ljava/lang/Object;Landroid/view/View;I)V
#NO_CATEGORY android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl.sendAccessibilityEventUnchecked(Ljava/lang/Object;Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V
#NO_CATEGORY android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1.sendAccessibilityEvent(Landroid/view/View;I)V
#NO_CATEGORY android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl.performAccessibilityAction(Ljava/lang/Object;Landroid/view/View;ILandroid/os/Bundle;)Z
#NO_CATEGORY android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl.sendAccessibilityEvent(Ljava/lang/Object;Landroid/view/View;I)V
#NO_CATEGORY android.support.v4.view.AccessibilityDelegateCompatIcs$1.sendAccessibilityEvent(Landroid/view/View;I)V
#NO_CATEGORY android.support.v4.view.AccessibilityDelegateCompatIcs.sendAccessibilityEvent(Ljava/lang/Object;Landroid/view/View;I)V
#NO_CATEGORY android.support.v4.view.AccessibilityDelegateCompatIcs.sendAccessibilityEventUnchecked(Ljava/lang/Object;Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V
#NO_CATEGORY android.support.v4.view.AccessibilityDelegateCompatJellyBean$1.sendAccessibilityEvent(Landroid/view/View;I)V
#NO_CATEGORY android.support.v4.view.AccessibilityDelegateCompatJellyBean.performAccessibilityAction(Ljava/lang/Object;Landroid/view/View;ILandroid/os/Bundle;)Z
#NO_CATEGORY android.support.v4.view.AccessibilityDelegateCompat.performAccessibilityAction(Landroid/view/View;ILandroid/os/Bundle;)Z
#NO_CATEGORY android.support.v4.view.AccessibilityDelegateCompat.sendAccessibilityEvent(Landroid/view/View;I)V
#NO_CATEGORY android.support.v4.view.AccessibilityDelegateCompat.sendAccessibilityEventUnchecked(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V
#NO_CATEGORY android.support.v4.view.PagerAdapter.setPrimaryItem(Landroid/view/ViewGroup;ILjava/lang/Object;)V
#NO_CATEGORY android.support.v4.view.PagerAdapter.setPrimaryItem(Landroid/view/View;ILjava/lang/Object;)V
#NO_CATEGORY android.support.v4.view.PagerAdapter.startUpdate(Landroid/view/ViewGroup;)V
#NO_CATEGORY android.support.v4.view.ViewCompat$BaseViewCompatImpl.setAccessibilityDelegate(Landroid/view/View;Landroid/support/v4/view/AccessibilityDelegateCompat;)V
#NO_CATEGORY android.support.v4.view.ViewCompatICS.setAccessibilityDelegate(Landroid/view/View;Ljava/lang/Object;)V
#NO_CATEGORY android.support.v4.view.ViewCompat$ICSViewCompatImpl.setAccessibilityDelegate(Landroid/view/View;Landroid/support/v4/view/AccessibilityDelegateCompat;)V
#NO_CATEGORY android.support.v4.view.ViewCompat.setAccessibilityDelegate(Landroid/view/View;Landroid/support/v4/view/AccessibilityDelegateCompat;)V
#NO_CATEGORY android.support.v4.view.ViewPager.draw(Landroid/graphics/Canvas;)V
#NO_CATEGORY android.support.v4.view.ViewPager$MyAccessibilityDelegate.performAccessibilityAction(Landroid/view/View;ILandroid/os/Bundle;)Z
#NO_CATEGORY android.support.v4.view.ViewPager$SavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.support.v4.view.ViewPager.setCurrentItemInternal(IZZI)V
#NO_CATEGORY android.support.v4.view.ViewPager.setCurrentItemInternal(IZZ)V
#NO_CATEGORY android.support.v4.view.ViewPager.setCurrentItem(I)V
#NO_CATEGORY android.support.v4.view.ViewPager.setCurrentItem(IZ)V
#NO_CATEGORY android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl.setSize(Ljava/lang/Object;II)V
#NO_CATEGORY android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl.setSize(Ljava/lang/Object;II)V
#NO_CATEGORY android.support.v4.widget.EdgeEffectCompatIcs.setSize(Ljava/lang/Object;II)V
#NO_CATEGORY android.support.v4.widget.EdgeEffectCompat.setSize(II)V
NO_CATEGORY android.telephony.CellInfoCdma.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.telephony.CellInfoGsm.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.telephony.CellInfoLte.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.telephony.CellInfo.writeToParcel(Landroid/os/Parcel;II)V
NO_CATEGORY android.telephony.CellSignalStrengthGsm.setDefaultValues()V
NO_CATEGORY android.telephony.CellSignalStrengthLte.setDefaultValues()V
#NO_CATEGORY android.test.InstrumentationTestCase.launchActivity(Ljava/lang/String;Ljava/lang/Class;Landroid/os/Bundle;)Landroid/app/Activity;
#NO_CATEGORY android.test.InstrumentationTestCase.launchActivityWithIntent(Ljava/lang/String;Ljava/lang/Class;Landroid/content/Intent;)Landroid/app/Activity;
#NO_CATEGORY android.test.InstrumentationTestCase.sendKeys([I)V
#NO_CATEGORY android.test.InstrumentationTestCase.sendRepeatedKeys([I)V
#NO_CATEGORY android.test.IsolatedContext.bindService(Landroid/content/Intent;Landroid/content/ServiceConnection;I)Z
#NO_CATEGORY android.test.IsolatedContext.sendBroadcast(Landroid/content/Intent;)V
#NO_CATEGORY android.test.IsolatedContext.sendOrderedBroadcast(Landroid/content/Intent;Ljava/lang/String;)V
#NO_CATEGORY android.test.mock.MockContentResolver.addProvider(Ljava/lang/String;Landroid/content/ContentProvider;)V
#NO_CATEGORY android.text.format.DateUtils.writeDateTime(Ljava/util/Calendar;Z)Ljava/lang/String;
#NO_CATEGORY android.text.format.Time.setJulianDay(I)J
#NO_CATEGORY android.text.format.Time.set(Landroid/text/format/Time;)V
#NO_CATEGORY android.text.HtmlToSpannedConverter.processingInstruction(Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY android.text.MeasuredText.setPos(I)V
#NO_CATEGORY android.text.PackedIntVector.setValue(III)V
#NO_CATEGORY android.text.PackedObjectVector.setValue(IILjava/lang/Object;)V
#NO_CATEGORY android.text.SpannableStringBuilder.setSpan(Ljava/lang/Object;III)V
#NO_CATEGORY android.text.SpannableStringInternal.setSpan(Ljava/lang/Object;III)V
#NO_CATEGORY android.text.SpannableString.setSpan(Ljava/lang/Object;III)V
#NO_CATEGORY android.text.style.CharacterStyle$Passthrough.updateDrawState(Landroid/text/TextPaint;)V
#NO_CATEGORY android.text.style.MetricAffectingSpan$Passthrough.updateDrawState(Landroid/text/TextPaint;)V
#NO_CATEGORY android.text.style.MetricAffectingSpan$Passthrough.updateMeasureState(Landroid/text/TextPaint;)V
#NO_CATEGORY android.text.style.TextAppearanceSpan.updateDrawState(Landroid/text/TextPaint;)V
#NO_CATEGORY android.text.style.TextAppearanceSpan.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.text.style.URLSpan.onClick(Landroid/view/View;)V
#NO_CATEGORY android.text.TextPaint.set(Landroid/text/TextPaint;)V
#NO_CATEGORY android.text.TextUtils.dumpSpans(Ljava/lang/CharSequence;Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY android.util.Base64$Decoder.process([BIIZ)Z
NO_CATEGORY android.util.Base64$Encoder.process([BIIZ)Z
NO_CATEGORY android.util.DisplayMetrics.setTo(Landroid/util/DisplayMetrics;)V
NO_CATEGORY android.util.FloatProperty.set(Ljava/lang/Object;Ljava/lang/Float;)V
NO_CATEGORY android.util.FloatProperty.set(Ljava/lang/Object;Ljava/lang/Object;)V
NO_CATEGORY android.util.IntProperty.set(Ljava/lang/Object;Ljava/lang/Integer;)V
NO_CATEGORY android.util.IntProperty.set(Ljava/lang/Object;Ljava/lang/Object;)V
NO_CATEGORY android.util.LongSparseArray.append(JLjava/lang/Object;)V
NO_CATEGORY android.util.LongSparseArray.setValueAt(ILjava/lang/Object;)V
NO_CATEGORY android.util.Patterns.concatGroups(Ljava/util/regex/Matcher;)Ljava/lang/String;
NO_CATEGORY android.util.PrefixPrinter.println(Ljava/lang/String;)V
NO_CATEGORY android.util.PrintWriterPrinter.println(Ljava/lang/String;)V
NO_CATEGORY android.util.Property.set(Ljava/lang/Object;Ljava/lang/Object;)V
NO_CATEGORY android.util.ReflectiveProperty.set(Ljava/lang/Object;Ljava/lang/Object;)V
NO_CATEGORY android.util.SparseArray.append(ILjava/lang/Object;)V
NO_CATEGORY android.util.SparseArray.setValueAt(ILjava/lang/Object;)V
NO_CATEGORY android.util.SparseBooleanArray.append(IZ)V
NO_CATEGORY android.util.SparseIntArray.append(II)V
NO_CATEGORY android.util.SparseLongArray.append(IJ)V
NO_CATEGORY android.util.TypedValue.complexToDimensionNoisy(ILandroid/util/DisplayMetrics;)F
NO_CATEGORY android.util.TypedValue.setTo(Landroid/util/TypedValue;)V
NO_CATEGORY android.view.AbsSavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.view.accessibility.AccessibilityEvent.setSealed(Z)V
#NO_CATEGORY android.view.accessibility.AccessibilityEvent.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.view.accessibility.AccessibilityInteractionClient.addConnection(ILandroid/accessibilityservice/IAccessibilityServiceConnection;)V
#NO_CATEGORY android.view.accessibility.AccessibilityInteractionClient.performAccessibilityAction(IIJILandroid/os/Bundle;)Z
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.addChild(Landroid/view/View;I)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfoCache.add(Landroid/view/accessibility/AccessibilityNodeInfo;)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.performAction(ILandroid/os/Bundle;)Z
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.performAction(I)Z
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setAccessibilityFocused(Z)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setBoundsInParent(Landroid/graphics/Rect;)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setBoundsInScreen(Landroid/graphics/Rect;)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setCheckable(Z)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setChecked(Z)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setClickable(Z)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setEnabled(Z)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setFocusable(Z)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setFocused(Z)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setLabeledBy(Landroid/view/View;I)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setLabeledBy(Landroid/view/View;)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setLabelFor(Landroid/view/View;I)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setLabelFor(Landroid/view/View;)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setLongClickable(Z)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setParent(Landroid/view/View;I)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setParent(Landroid/view/View;)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setPassword(Z)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setScrollable(Z)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setSelected(Z)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setSource(Landroid/view/View;I)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setSource(Landroid/view/View;)V
#NO_CATEGORY android.view.accessibility.AccessibilityNodeInfo.setVisibleToUser(Z)V
#NO_CATEGORY android.view.accessibility.AccessibilityRecord.setChecked(Z)V
#NO_CATEGORY android.view.accessibility.AccessibilityRecord.setEnabled(Z)V
#NO_CATEGORY android.view.accessibility.AccessibilityRecord.setFullScreen(Z)V
#NO_CATEGORY android.view.accessibility.AccessibilityRecord.setPassword(Z)V
#NO_CATEGORY android.view.accessibility.AccessibilityRecord.setScrollable(Z)V
#NO_CATEGORY android.view.accessibility.AccessibilityRecord.setSource(Landroid/view/View;I)V
#NO_CATEGORY android.view.accessibility.AccessibilityRecord.setSource(Landroid/view/View;)V
#NO_CATEGORY android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy.setFindAccessibilityNodeInfoResult(Landroid/view/accessibility/AccessibilityNodeInfo;I)V
#NO_CATEGORY android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy.setFindAccessibilityNodeInfosResult(Ljava/util/List;I)V
#NO_CATEGORY android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy.setPerformAccessibilityActionResult(ZI)V
#NO_CATEGORY android.view.accessibility.IAccessibilityInteractionConnection$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy.findAccessibilityNodeInfoByAccessibilityId(JILandroid/view/accessibility/IAccessibilityInteractionConnectionCallback;IIJ)V
#NO_CATEGORY android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy.findAccessibilityNodeInfoByViewId(JIILandroid/view/accessibility/IAccessibilityInteractionConnectionCallback;IIJ)V
#NO_CATEGORY android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy.findAccessibilityNodeInfosByText(JLjava/lang/String;ILandroid/view/accessibility/IAccessibilityInteractionConnectionCallback;IIJ)V
#NO_CATEGORY android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy.findFocus(JIILandroid/view/accessibility/IAccessibilityInteractionConnectionCallback;IIJ)V
#NO_CATEGORY android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy.focusSearch(JIILandroid/view/accessibility/IAccessibilityInteractionConnectionCallback;IIJ)V
#NO_CATEGORY android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy.performAccessibilityAction(JILandroid/os/Bundle;ILandroid/view/accessibility/IAccessibilityInteractionConnectionCallback;IIJ)V
#NO_CATEGORY android.view.accessibility.IAccessibilityManagerClient$Stub$Proxy.setState(I)V
#NO_CATEGORY android.view.accessibility.IAccessibilityManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY android.view.accessibility.IAccessibilityManager$Stub$Proxy.addAccessibilityInteractionConnection(Landroid/view/IWindow;Landroid/view/accessibility/IAccessibilityInteractionConnection;I)I
#NO_CATEGORY android.view.accessibility.IAccessibilityManager$Stub$Proxy.addClient(Landroid/view/accessibility/IAccessibilityManagerClient;I)I
#NO_CATEGORY android.view.accessibility.IAccessibilityManager$Stub$Proxy.interrupt(I)V
#NO_CATEGORY android.view.accessibility.IAccessibilityManager$Stub$Proxy.registerUiTestAutomationService(Landroid/accessibilityservice/IAccessibilityServiceClient;Landroid/accessibilityservice/AccessibilityServiceInfo;)V
#NO_CATEGORY android.view.accessibility.IAccessibilityManager$Stub$Proxy.removeAccessibilityInteractionConnection(Landroid/view/IWindow;)V
#NO_CATEGORY android.view.accessibility.IAccessibilityManager$Stub$Proxy.sendAccessibilityEvent(Landroid/view/accessibility/AccessibilityEvent;I)Z
#NO_CATEGORY android.view.accessibility.IAccessibilityManager$Stub$Proxy.unregisterUiTestAutomationService(Landroid/accessibilityservice/IAccessibilityServiceClient;)V
#NO_CATEGORY android.view.animation.Animation.setInterpolator(Landroid/content/Context;I)V
#NO_CATEGORY android.view.animation.AnimationSet.setDuration(J)V
#NO_CATEGORY android.view.animation.AnimationSet.setFillAfter(Z)V
#NO_CATEGORY android.view.animation.AnimationSet.setFillBefore(Z)V
#NO_CATEGORY android.view.animation.AnimationSet.setRepeatMode(I)V
#NO_CATEGORY android.view.animation.AnimationSet.setStartOffset(J)V
#NO_CATEGORY android.view.animation.AnimationSet.setStartTime(J)V
#NO_CATEGORY android.view.animation.LayoutAnimationController.setAnimation(Landroid/content/Context;I)V
#NO_CATEGORY android.view.animation.LayoutAnimationController.setInterpolator(Landroid/content/Context;I)V
#NO_CATEGORY android.view.animation.Transformation.set(Landroid/view/animation/Transformation;)V
NO_CATEGORY android.view.DragEvent.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.view.GLES20Canvas.restoreToCount(I)V
#NO_CATEGORY android.view.GLES20Canvas.saveLayer(FFFFLandroid/graphics/Paint;I)I
#NO_CATEGORY android.view.GLES20Canvas.saveLayer(Landroid/graphics/RectF;Landroid/graphics/Paint;I)I
#NO_CATEGORY android.view.GLES20Canvas.setMatrix(Landroid/graphics/Matrix;)V
#NO_CATEGORY android.view.GLES20DisplayList.setAlpha(F)V
#NO_CATEGORY android.view.GLES20DisplayList.setAnimationMatrix(Landroid/graphics/Matrix;)V
#NO_CATEGORY android.view.GLES20DisplayList.setBottom(I)V
#NO_CATEGORY android.view.GLES20DisplayList.setCaching(Z)V
#NO_CATEGORY android.view.GLES20DisplayList.setCameraDistance(F)V
#NO_CATEGORY android.view.GLES20DisplayList.setClipChildren(Z)V
#NO_CATEGORY android.view.GLES20DisplayList.setHasOverlappingRendering(Z)V
#NO_CATEGORY android.view.GLES20DisplayList.setLeft(I)V
#NO_CATEGORY android.view.GLES20DisplayList.setLeftTop(II)V
#NO_CATEGORY android.view.GLES20DisplayList.setLeftTopRightBottom(IIII)V
#NO_CATEGORY android.view.GLES20DisplayList.setPivotX(F)V
#NO_CATEGORY android.view.GLES20DisplayList.setPivotY(F)V
#NO_CATEGORY android.view.GLES20DisplayList.setRight(I)V
#NO_CATEGORY android.view.GLES20DisplayList.setRotation(F)V
#NO_CATEGORY android.view.GLES20DisplayList.setRotationX(F)V
#NO_CATEGORY android.view.GLES20DisplayList.setRotationY(F)V
#NO_CATEGORY android.view.GLES20DisplayList.setScaleX(F)V
#NO_CATEGORY android.view.GLES20DisplayList.setScaleY(F)V
#NO_CATEGORY android.view.GLES20DisplayList.setStaticMatrix(Landroid/graphics/Matrix;)V
#NO_CATEGORY android.view.GLES20DisplayList.setTop(I)V
#NO_CATEGORY android.view.GLES20DisplayList.setTransformationInfo(FFFFFFFF)V
#NO_CATEGORY android.view.GLES20DisplayList.setTranslationX(F)V
#NO_CATEGORY android.view.GLES20DisplayList.setTranslationY(F)V
#NO_CATEGORY android.view.GLES20Layer.setLayerPaint(Landroid/graphics/Paint;)V
#NO_CATEGORY android.view.GLES20RecordingCanvas.setNextPoolable(Ljava/lang/Object;)V
#NO_CATEGORY android.view.GLES20RenderLayer.setTransform(Landroid/graphics/Matrix;)V
#NO_CATEGORY android.view.GLES20TextureLayer.setOpaque(Z)V
#NO_CATEGORY android.view.GLES20TextureLayer.setTransform(Landroid/graphics/Matrix;)V
#NO_CATEGORY android.view.HardwareCanvas.setBitmap(Landroid/graphics/Bitmap;)V
#NO_CATEGORY android.view.HardwareLayer.setLayerPaint(Landroid/graphics/Paint;)V
#NO_CATEGORY android.view.HardwareRenderer$Gl20Renderer.setSurfaceTexture(Landroid/view/HardwareLayer;Landroid/graphics/SurfaceTexture;)V
#NO_CATEGORY android.view.HardwareRenderer$Gl20Renderer.setup(II)V
#NO_CATEGORY android.view.HardwareRenderer.setupDiskCache(Ljava/io/File;)V
#NO_CATEGORY android.view.IDisplayContentChangeListener$Stub$Proxy.onRectangleOnScreenRequested(ILandroid/graphics/Rect;Z)V
#NO_CATEGORY android.view.IDisplayContentChangeListener$Stub$Proxy.onRotationChanged(I)V
#NO_CATEGORY android.view.IDisplayContentChangeListener$Stub$Proxy.onWindowLayersChanged(I)V
#NO_CATEGORY android.view.IDisplayContentChangeListener$Stub$Proxy.onWindowTransition(IILandroid/view/WindowInfo;)V
NO_CATEGORY android.view.IInputFilterHost$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY android.view.IInputFilterHost$Stub$Proxy.sendInputEvent(Landroid/view/InputEvent;I)V
NO_CATEGORY android.view.IInputFilter$Stub$Proxy.filterInputEvent(Landroid/view/InputEvent;I)V
NO_CATEGORY android.view.IInputFilter$Stub$Proxy.install(Landroid/view/IInputFilterHost;)V android.permission.STOP_APP_SWITCHES 
NO_CATEGORY android.view.InputDevice.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.view.InputFilter.sendInputEvent(Landroid/view/InputEvent;I)V
NO_CATEGORY android.view.inputmethod.BaseInputConnection.setComposingRegion(II)Z
NO_CATEGORY android.view.inputmethod.BaseInputConnection.setSelection(II)Z
NO_CATEGORY android.view.inputmethod.CompletionInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.view.inputmethod.CorrectionInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.view.inputmethod.EditorInfo.dump(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY android.view.inputmethod.EditorInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.view.inputmethod.ExtractedText.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.view.inputmethod.InputConnectionWrapper.performContextMenuAction(I)Z
NO_CATEGORY android.view.inputmethod.InputConnectionWrapper.performEditorAction(I)Z
NO_CATEGORY android.view.inputmethod.InputConnectionWrapper.performPrivateCommand(Ljava/lang/String;Landroid/os/Bundle;)Z
NO_CATEGORY android.view.inputmethod.InputConnectionWrapper.sendKeyEvent(Landroid/view/KeyEvent;)Z
NO_CATEGORY android.view.inputmethod.InputConnectionWrapper.setComposingRegion(II)Z
NO_CATEGORY android.view.inputmethod.InputConnectionWrapper.setSelection(II)Z
NO_CATEGORY android.view.inputmethod.InputMethodInfo.dump(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY android.view.inputmethod.InputMethodInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.view.inputmethod.InputMethodManager.notifySuggestionPicked(Landroid/text/style/SuggestionSpan;Ljava/lang/String;I)V
NO_CATEGORY android.view.inputmethod.InputMethodManager.onWindowFocus(Landroid/view/View;Landroid/view/View;IZI)V
NO_CATEGORY android.view.inputmethod.InputMethodManager.setImeWindowStatus(Landroid/os/IBinder;II)V
NO_CATEGORY android.view.inputmethod.InputMethodManager.setInputMethodAndSubtype(Landroid/os/IBinder;Ljava/lang/String;Landroid/view/inputmethod/InputMethodSubtype;)V
NO_CATEGORY android.view.inputmethod.InputMethodManager.setInputMethod(Landroid/os/IBinder;Ljava/lang/String;)V
NO_CATEGORY android.view.inputmethod.InputMethodManager.updateExtractedText(Landroid/view/View;ILandroid/view/inputmethod/ExtractedText;)V
NO_CATEGORY android.view.IRotationWatcher$Stub$Proxy.onRotationChanged(I)V
#NO_CATEGORY android.view.IWindowManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.addAppToken(IILandroid/view/IApplicationToken;IIZZ)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.addDisplayContentChangeListener(ILandroid/view/IDisplayContentChangeListener;)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.addWindowToken(Landroid/os/IBinder;I)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.clearForcedDisplayDensity(I)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.clearForcedDisplaySize(I)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.closeSystemDialogs(Ljava/lang/String;)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.disableKeyguard(Landroid/os/IBinder;Ljava/lang/String;)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.freezeRotation(I)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.inputMethodClientHasFocus(Lcom/android/internal/view/IInputMethodClient;)Z
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.magnifyDisplay(IFFF)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.moveAppToken(ILandroid/os/IBinder;)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.openSession(Lcom/android/internal/view/IInputMethodClient;Lcom/android/internal/view/IInputContext;)Landroid/view/IWindowSession;
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.overridePendingAppTransition(Ljava/lang/String;IILandroid/os/IRemoteCallback;)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.overridePendingAppTransitionScaleUp(IIII)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.overridePendingAppTransitionThumb(Landroid/graphics/Bitmap;IILandroid/os/IRemoteCallback;Z)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.pauseKeyDispatching(Landroid/os/IBinder;)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.prepareAppTransition(IZ)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.reenableKeyguard(Landroid/os/IBinder;)V android.permission.DISABLE_KEYGUARD 
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.removeAppToken(Landroid/os/IBinder;)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.removeDisplayContentChangeListener(ILandroid/view/IDisplayContentChangeListener;)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.removeWindowToken(Landroid/os/IBinder;)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.resumeKeyDispatching(Landroid/os/IBinder;)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.setAnimationScale(IF)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.setAnimationScales([F)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.setAppGroupId(Landroid/os/IBinder;I)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.setAppOrientation(Landroid/view/IApplicationToken;I)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.setAppStartingWindow(Landroid/os/IBinder;Ljava/lang/String;ILandroid/content/res/CompatibilityInfo;Ljava/lang/CharSequence;IIILandroid/os/IBinder;Z)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.setAppVisibility(Landroid/os/IBinder;Z)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.setAppWillBeHidden(Landroid/os/IBinder;)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.setEventDispatching(Z)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.setFocusedApp(Landroid/os/IBinder;Z)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.setForcedDisplayDensity(II)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.setForcedDisplaySize(III)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.setInputFilter(Landroid/view/IInputFilter;)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.setInTouchMode(Z)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.setStrictModeVisualIndicatorPreference(Ljava/lang/String;)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.startAppFreezingScreen(Landroid/os/IBinder;I)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.startFreezingScreen(II)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.startViewServer(I)Z
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.statusBarVisibilityChanged(I)V
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.stopAppFreezingScreen(Landroid/os/IBinder;Z)V android.permission.MANAGE_APP_TOKENS android.permission.UPDATE_DEVICE_STATS android.permission.DEVICE_POWER android.permission.WAKE_LOCK 
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.updateOrientationFromAppTokens(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.waitForWindowDrawn(Landroid/os/IBinder;Landroid/os/IRemoteCallback;)Z
#NO_CATEGORY android.view.IWindowManager$Stub$Proxy.watchRotation(Landroid/view/IRotationWatcher;)I
#NO_CATEGORY android.view.IWindowSession$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z android.permission.SYSTEM_ALERT_WINDOW android.permission.WAKE_LOCK 
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.add(Landroid/view/IWindow;ILandroid/view/WindowManager$LayoutParams;ILandroid/graphics/Rect;Landroid/view/InputChannel;)I
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.addToDisplay(Landroid/view/IWindow;ILandroid/view/WindowManager$LayoutParams;IILandroid/graphics/Rect;Landroid/view/InputChannel;)I
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.addToDisplayWithoutInputChannel(Landroid/view/IWindow;ILandroid/view/WindowManager$LayoutParams;IILandroid/graphics/Rect;)I
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.addWithoutInputChannel(Landroid/view/IWindow;ILandroid/view/WindowManager$LayoutParams;ILandroid/graphics/Rect;)I
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.dragRecipientEntered(Landroid/view/IWindow;)V
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.dragRecipientExited(Landroid/view/IWindow;)V
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.finishDrawing(Landroid/view/IWindow;)V
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.onRectangleOnScreenRequested(Landroid/os/IBinder;Landroid/graphics/Rect;Z)V
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.outOfMemory(Landroid/view/IWindow;)Z
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.performDeferredDestroy(Landroid/view/IWindow;)V
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.performDrag(Landroid/view/IWindow;Landroid/os/IBinder;FFFFLandroid/content/ClipData;)Z
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.performHapticFeedback(Landroid/view/IWindow;IZ)Z
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.prepareDrag(Landroid/view/IWindow;IIILandroid/view/Surface;)Landroid/os/IBinder;
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.relayout(Landroid/view/IWindow;ILandroid/view/WindowManager$LayoutParams;IIIILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/content/res/Configuration;Landroid/view/Surface;)I
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.remove(Landroid/view/IWindow;)V
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.reportDropResult(Landroid/view/IWindow;Z)V
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.sendWallpaperCommand(Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;Z)Landroid/os/Bundle;
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.setInsets(Landroid/view/IWindow;ILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Region;)V
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.setInTouchMode(Z)V
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.setTransparentRegion(Landroid/view/IWindow;Landroid/graphics/Region;)V
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.setUniverseTransform(Landroid/os/IBinder;FFFFFFF)V
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.setWallpaperPosition(Landroid/os/IBinder;FFFF)V
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.wallpaperCommandComplete(Landroid/os/IBinder;Landroid/os/Bundle;)V
#NO_CATEGORY android.view.IWindowSession$Stub$Proxy.wallpaperOffsetsComplete(Landroid/os/IBinder;)V
#NO_CATEGORY android.view.IWindow$Stub$Proxy.closeSystemDialogs(Ljava/lang/String;)V
#NO_CATEGORY android.view.IWindow$Stub$Proxy.dispatchSystemUiVisibilityChanged(IIII)V
#NO_CATEGORY android.view.IWindow$Stub$Proxy.dispatchWallpaperCommand(Ljava/lang/String;IIILandroid/os/Bundle;Z)V
#NO_CATEGORY android.view.IWindow$Stub$Proxy.dispatchWallpaperOffsets(FFFFZ)V
#NO_CATEGORY android.view.IWindow$Stub$Proxy.executeCommand(Ljava/lang/String;Ljava/lang/String;Landroid/os/ParcelFileDescriptor;)V
#NO_CATEGORY android.view.IWindow$Stub$Proxy.moved(II)V
#NO_CATEGORY android.view.KeyEvent.setTainted(Z)V
#NO_CATEGORY android.view.LayoutInflater.createView(Ljava/lang/String;Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;
#NO_CATEGORY android.view.MotionEvent.setAction(I)V
#NO_CATEGORY android.view.MotionEvent.setDownTime(J)V
#NO_CATEGORY android.view.MotionEvent.setEdgeFlags(I)V
#NO_CATEGORY android.view.MotionEvent.setLocation(FF)V
#NO_CATEGORY android.view.MotionEvent.setSource(I)V
#NO_CATEGORY android.view.MotionEvent.setTainted(Z)V
NO_CATEGORY android.view.PointerIcon.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.view.Surface$CompatibleCanvas.setMatrix(Landroid/graphics/Matrix;)V
#NO_CATEGORY android.view.Surface.setAlpha(F)V
#NO_CATEGORY android.view.Surface.setCompatibilityTranslator(Landroid/content/res/CompatibilityInfo$Translator;)V
#NO_CATEGORY android.view.Surface.setFlags(II)V
#NO_CATEGORY android.view.Surface.setLayer(I)V
#NO_CATEGORY android.view.Surface.setLayerStack(I)V
#NO_CATEGORY android.view.Surface.setMatrix(FFFF)V
#NO_CATEGORY android.view.Surface.setPosition(FF)V
#NO_CATEGORY android.view.Surface.setPosition(II)V
#NO_CATEGORY android.view.Surface.setTransparentRegionHint(Landroid/graphics/Region;)V
#NO_CATEGORY android.view.Surface.setWindowCrop(Landroid/graphics/Rect;)V
#NO_CATEGORY android.view.SurfaceView.setFrame(IIII)Z
#NO_CATEGORY android.view.SurfaceView.setSecure(Z)V
#NO_CATEGORY android.view.SurfaceView.setVisibility(I)V
#NO_CATEGORY android.view.SurfaceView.setZOrderMediaOverlay(Z)V
#NO_CATEGORY android.view.SurfaceView.setZOrderOnTop(Z)V
NO_CATEGORY android.view.textservice.SpellCheckerInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl.onGetSentenceSuggestions([Landroid/view/textservice/SentenceSuggestionsInfo;)V
NO_CATEGORY android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl.onGetSuggestions([Landroid/view/textservice/SuggestionsInfo;)V
NO_CATEGORY android.view.textservice.TextServicesManager.setCurrentSpellChecker(Landroid/view/textservice/SpellCheckerInfo;)V
NO_CATEGORY android.view.textservice.TextServicesManager.setSpellCheckerEnabled(Z)V
NO_CATEGORY android.view.textservice.TextServicesManager.setSpellCheckerSubtype(Landroid/view/textservice/SpellCheckerSubtype;)V
NO_CATEGORY android.view.TextureView.setTransform(Landroid/graphics/Matrix;)V
NO_CATEGORY android.view.VelocityTracker.setNextPoolable(Ljava/lang/Object;)V
#NO_CATEGORY android.view.View$10.setValue(Landroid/view/View;F)V
#NO_CATEGORY android.view.View$10.setValue(Ljava/lang/Object;F)V
#NO_CATEGORY android.view.View$11.setValue(Landroid/view/View;F)V
#NO_CATEGORY android.view.View$11.setValue(Ljava/lang/Object;F)V
#NO_CATEGORY android.view.View$12.setValue(Landroid/view/View;F)V
#NO_CATEGORY android.view.View$12.setValue(Ljava/lang/Object;F)V
#NO_CATEGORY android.view.View$3.setValue(Landroid/view/View;F)V
#NO_CATEGORY android.view.View$3.setValue(Ljava/lang/Object;F)V
#NO_CATEGORY android.view.View$4.setValue(Landroid/view/View;F)V
#NO_CATEGORY android.view.View$4.setValue(Ljava/lang/Object;F)V
#NO_CATEGORY android.view.View$5.setValue(Landroid/view/View;F)V
#NO_CATEGORY android.view.View$5.setValue(Ljava/lang/Object;F)V
#NO_CATEGORY android.view.View$6.setValue(Landroid/view/View;F)V
#NO_CATEGORY android.view.View$6.setValue(Ljava/lang/Object;F)V
#NO_CATEGORY android.view.View$7.setValue(Landroid/view/View;F)V
#NO_CATEGORY android.view.View$7.setValue(Ljava/lang/Object;F)V
#NO_CATEGORY android.view.View$8.setValue(Landroid/view/View;F)V
#NO_CATEGORY android.view.View$8.setValue(Ljava/lang/Object;F)V
#NO_CATEGORY android.view.View$9.setValue(Landroid/view/View;F)V
#NO_CATEGORY android.view.View$9.setValue(Ljava/lang/Object;F)V
#NO_CATEGORY android.view.View$AccessibilityDelegate.performAccessibilityAction(Landroid/view/View;ILandroid/os/Bundle;)Z
#NO_CATEGORY android.view.View$AccessibilityDelegate.sendAccessibilityEvent(Landroid/view/View;I)V
#NO_CATEGORY android.view.View$AccessibilityDelegate.sendAccessibilityEventUnchecked(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V
#NO_CATEGORY android.view.View$AttachInfo$InvalidateInfo.setNextPoolable(Ljava/lang/Object;)V
#NO_CATEGORY android.view.View.dispatchAttachedToWindow(Landroid/view/View$AttachInfo;I)V
#NO_CATEGORY android.view.View.dispatchCollectViewAttributes(Landroid/view/View$AttachInfo;I)V
#NO_CATEGORY android.view.View.draw(Landroid/graphics/Canvas;)V
#NO_CATEGORY android.view.ViewGroup.dispatchDraw(Landroid/graphics/Canvas;)V
#NO_CATEGORY android.view.ViewGroup.dispatchTouchEvent(Landroid/view/MotionEvent;)Z
#NO_CATEGORY android.view.ViewGroup$LayoutParams.setBaseAttributes(Landroid/content/res/TypedArray;II)V
#NO_CATEGORY android.view.ViewGroup.setAddStatesFromChildren(Z)V
#NO_CATEGORY android.view.ViewGroup.setAlwaysDrawnWithCacheEnabled(Z)V
#NO_CATEGORY android.view.ViewGroup.setAnimationCacheEnabled(Z)V
#NO_CATEGORY android.view.ViewGroup.setChildrenDrawingCacheEnabled(Z)V
#NO_CATEGORY android.view.ViewGroup.setChildrenDrawingOrderEnabled(Z)V
#NO_CATEGORY android.view.ViewGroup.setChildrenDrawnWithCacheEnabled(Z)V
#NO_CATEGORY android.view.ViewGroup.setClipChildren(Z)V
#NO_CATEGORY android.view.ViewGroup.setClipToPadding(Z)V
#NO_CATEGORY android.view.ViewGroup.setDescendantFocusability(I)V
#NO_CATEGORY android.view.ViewGroup.setMotionEventSplittingEnabled(Z)V
#NO_CATEGORY android.view.ViewGroup.setPersistentDrawingCache(I)V
#NO_CATEGORY android.view.ViewGroup.setStaticTransformationsEnabled(Z)V
#NO_CATEGORY android.view.ViewGroup.startActionModeForChild(Landroid/view/View;Landroid/view/ActionMode$Callback;)Landroid/view/ActionMode;
#NO_CATEGORY android.view.View.performAccessibilityAction(ILandroid/os/Bundle;)Z
#NO_CATEGORY android.view.View.performHapticFeedback(II)Z
#NO_CATEGORY android.view.View.performHapticFeedback(I)Z
#NO_CATEGORY android.view.ViewRootImpl$AccessibilityInteractionConnection.performAccessibilityAction(JILandroid/os/Bundle;ILandroid/view/accessibility/IAccessibilityInteractionConnectionCallback;IIJ)V
#NO_CATEGORY android.view.ViewRootImpl.dispatchInvalidateDelayed(Landroid/view/View;J)V
#NO_CATEGORY android.view.ViewRootImpl.dispatchInvalidateRectDelayed(Landroid/view/View$AttachInfo$InvalidateInfo;J)V
#NO_CATEGORY android.view.ViewRootImpl.performHapticFeedback(IZ)Z
#NO_CATEGORY android.view.ViewRootImpl$TakenSurfaceHolder.setFixedSize(II)V
#NO_CATEGORY android.view.ViewRootImpl$TakenSurfaceHolder.setFormat(I)V
#NO_CATEGORY android.view.ViewRootImpl$TakenSurfaceHolder.setKeepScreenOn(Z)V
#NO_CATEGORY android.view.ViewRootImpl$TakenSurfaceHolder.setType(I)V
#NO_CATEGORY android.view.ViewRootImpl$W.dispatchAppVisibility(Z)V
#NO_CATEGORY android.view.ViewRootImpl$W.dispatchScreenState(Z)V
#NO_CATEGORY android.view.ViewRootImpl$W.dispatchSystemUiVisibilityChanged(IIII)V
#NO_CATEGORY android.view.ViewRootImpl$W.dispatchWallpaperCommand(Ljava/lang/String;IIILandroid/os/Bundle;Z)V
#NO_CATEGORY android.view.View.sendAccessibilityEventInternal(I)V
#NO_CATEGORY android.view.View.sendAccessibilityEvent(I)V
#NO_CATEGORY android.view.View.sendAccessibilityEventUnchecked(Landroid/view/accessibility/AccessibilityEvent;)V
#NO_CATEGORY android.view.View.setActivated(Z)V
#NO_CATEGORY android.view.View.setBackgroundColor(I)V
#NO_CATEGORY android.view.View.setBackground(Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY android.view.View.setBackgroundResource(I)V
#NO_CATEGORY android.view.View.setCameraDistance(F)V
NO_CATEGORY android.view.View.setClickable(Z)V
#NO_CATEGORY android.view.View.setDrawingCacheEnabled(Z)V
#NO_CATEGORY android.view.View.setDrawingCacheQuality(I)V
#NO_CATEGORY android.view.View.setDuplicateParentStateEnabled(Z)V
NO_CATEGORY android.view.View.setEnabled(Z)V
#NO_CATEGORY android.view.View.setFilterTouchesWhenObscured(Z)V
#NO_CATEGORY android.view.View.setFitsSystemWindows(Z)V
#NO_CATEGORY android.view.View.setFocusableInTouchMode(Z)V
#NO_CATEGORY android.view.View.setFocusable(Z)V
#NO_CATEGORY android.view.View.setHapticFeedbackEnabled(Z)V
#NO_CATEGORY android.view.View.setHorizontalFadingEdgeEnabled(Z)V
#NO_CATEGORY android.view.View.setHorizontalScrollBarEnabled(Z)V
#NO_CATEGORY android.view.View.setHovered(Z)V
#NO_CATEGORY android.view.View.setImportantForAccessibility(I)V
#NO_CATEGORY android.view.View.setIsRootNamespace(Z)V
#NO_CATEGORY android.view.View.setKeepScreenOn(Z)V
#NO_CATEGORY android.view.View.setLayerPaint(Landroid/graphics/Paint;)V
#NO_CATEGORY android.view.View.setLayoutDirection(I)V
#NO_CATEGORY android.view.View.setLongClickable(Z)V
#NO_CATEGORY android.view.View.setPressed(Z)V
#NO_CATEGORY android.view.View.setSaveEnabled(Z)V
#NO_CATEGORY android.view.View.setSaveFromParentEnabled(Z)V
#NO_CATEGORY android.view.View.setScrollBarStyle(I)V
#NO_CATEGORY android.view.View.setScrollContainer(Z)V
#NO_CATEGORY android.view.View.setScrollX(I)V
#NO_CATEGORY android.view.View.setScrollY(I)V
#NO_CATEGORY android.view.View.setSelected(Z)V
#NO_CATEGORY android.view.View.setSoundEffectsEnabled(Z)V
#NO_CATEGORY android.view.View.setTag(ILjava/lang/Object;)V
#NO_CATEGORY android.view.View.setTagInternal(ILjava/lang/Object;)V
#NO_CATEGORY android.view.View.setTextAlignment(I)V
#NO_CATEGORY android.view.View.setTextDirection(I)V
#NO_CATEGORY android.view.View.setVerticalFadingEdgeEnabled(Z)V
#NO_CATEGORY android.view.View.setVerticalScrollBarEnabled(Z)V
#NO_CATEGORY android.view.View.setVisibility(I)V
#NO_CATEGORY android.view.View.setWillNotCacheDrawing(Z)V
#NO_CATEGORY android.view.View.setWillNotDraw(Z)V
#NO_CATEGORY android.view.View.setX(F)V
#NO_CATEGORY android.view.View.setY(F)V
#NO_CATEGORY android.view.ViewStub.setVisibility(I)V
#NO_CATEGORY android.view.ViewTreeObserver$InternalInsetsInfo.set(Landroid/view/ViewTreeObserver$InternalInsetsInfo;)V
#NO_CATEGORY android.view.WindowManagerGlobal.startTrimMemory(I)V
#NO_CATEGORY android.view.WindowManagerImpl.updateViewLayout(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V
#NO_CATEGORY android.view.WindowManager$LayoutParams.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.view.Window.setAttributes(Landroid/view/WindowManager$LayoutParams;)V
#NO_CATEGORY android.view.Window.setBackgroundDrawableResource(I)V
#NO_CATEGORY android.view.Window.setFlags(II)V
#NO_CATEGORY android.view.Window.setUiOptions(II)V
#NO_CATEGORY android.view.Window.setUiOptions(I)V
NO_CATEGORY android.webkit.AccessibilityInjector.performAccessibilityAction(ILandroid/os/Bundle;)Z
NO_CATEGORY android.webkit.BrowserFrame.addJavascriptInterface(Ljava/lang/Object;Ljava/lang/String;Z)V
NO_CATEGORY android.webkit.CacheManager.saveCacheFile(Ljava/lang/String;Landroid/webkit/CacheManager$CacheResult;)V
NO_CATEGORY android.webkit.CallbackProxy.addMessageToConsole(Ljava/lang/String;ILjava/lang/String;I)V
NO_CATEGORY android.webkit.CallbackProxy.onDownloadStart(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)Z
NO_CATEGORY android.webkit.CallbackProxy.onExceededDatabaseQuota(Ljava/lang/String;Ljava/lang/String;JJJLandroid/webkit/WebStorage$QuotaUpdater;)V
NO_CATEGORY android.webkit.CallbackProxy.onFormResubmission(Landroid/os/Message;Landroid/os/Message;)V
NO_CATEGORY android.webkit.CallbackProxy.onGeolocationPermissionsShowPrompt(Ljava/lang/String;Landroid/webkit/GeolocationPermissions$Callback;)V
NO_CATEGORY android.webkit.CallbackProxy.onJsAlert(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.webkit.CallbackProxy.onJsBeforeUnload(Ljava/lang/String;Ljava/lang/String;)Z
NO_CATEGORY android.webkit.CallbackProxy.onJsConfirm(Ljava/lang/String;Ljava/lang/String;)Z
NO_CATEGORY android.webkit.CallbackProxy.onJsPrompt(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
NO_CATEGORY android.webkit.CallbackProxy.onPageStarted(Ljava/lang/String;Landroid/graphics/Bitmap;)V
NO_CATEGORY android.webkit.CallbackProxy.onReachedMaxAppCacheSize(JJLandroid/webkit/WebStorage$QuotaUpdater;)V
NO_CATEGORY android.webkit.CallbackProxy.onReceivedClientCertRequest(Landroid/webkit/ClientCertRequestHandler;Ljava/lang/String;)V
NO_CATEGORY android.webkit.CallbackProxy.onReceivedError(ILjava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.webkit.CallbackProxy.onReceivedHttpAuthCredentials(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.webkit.CallbackProxy.onReceivedHttpAuthRequest(Landroid/webkit/HttpAuthHandler;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.webkit.CallbackProxy.onReceivedLoginRequest(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.webkit.CallbackProxy.onReceivedSslError(Landroid/webkit/SslErrorHandler;Landroid/net/http/SslError;)V
NO_CATEGORY android.webkit.CallbackProxy.onSavePassword(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)Z
NO_CATEGORY android.webkit.CallbackProxy.onScaleChanged(FF)V
NO_CATEGORY android.webkit.CallbackProxy.shouldOverrideUrlLoading(Ljava/lang/String;)Z
NO_CATEGORY android.webkit.CallbackProxy.uiOverrideUrlLoading(Ljava/lang/String;)Z
NO_CATEGORY android.webkit.CookieManagerClassic.setAcceptCookie(Z)V
NO_CATEGORY android.webkit.CookieManagerClassic.setAcceptFileSchemeCookiesImpl(Z)V
NO_CATEGORY android.webkit.CookieManagerClassic.setCookie(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.webkit.CookieManager.setAcceptCookie(Z)V
NO_CATEGORY android.webkit.CookieManager.setAcceptFileSchemeCookiesImpl(Z)V
NO_CATEGORY android.webkit.CookieManager.setAcceptFileSchemeCookies(Z)V
NO_CATEGORY android.webkit.CookieManager.setCookie(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.webkit.FindActionModeCallback.setText(Ljava/lang/String;)V
NO_CATEGORY android.webkit.GeolocationPermissionsClassic.getAllowed(Ljava/lang/String;Landroid/webkit/ValueCallback;)V
NO_CATEGORY android.webkit.HTML5VideoViewProxy.onPrepared(Landroid/media/MediaPlayer;)V
NO_CATEGORY android.webkit.HTML5VideoViewProxy$PosterDownloader.data([BI)V
NO_CATEGORY android.webkit.HTML5VideoViewProxy.setBaseLayer(I)V
NO_CATEGORY android.webkit.HTML5VideoView.setOnCompletionListener(Landroid/webkit/HTML5VideoViewProxy;)V
NO_CATEGORY android.webkit.HTML5VideoView.setOnErrorListener(Landroid/webkit/HTML5VideoViewProxy;)V
NO_CATEGORY android.webkit.HTML5VideoView.setOnInfoListener(Landroid/webkit/HTML5VideoViewProxy;)V
NO_CATEGORY android.webkit.HTML5VideoView.setVideoURI(Ljava/lang/String;Landroid/webkit/HTML5VideoViewProxy;)V
NO_CATEGORY android.webkit.JWebCoreJavaBridge.storeFilePathForContentUri(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.webkit.MockGeolocation.setError(ILjava/lang/String;)V
NO_CATEGORY android.webkit.MockGeolocation.setPermission(Z)V
NO_CATEGORY android.webkit.MockGeolocation.setPosition(DDD)V
NO_CATEGORY android.webkit.OverScrollGlow.drawEdgeGlows(Landroid/graphics/Canvas;)Z
NO_CATEGORY android.webkit.SslCertLookupTable.setIsAllowed(Landroid/net/http/SslError;)V
NO_CATEGORY android.webkit.SslClientCertLookupTable.Allow(Ljava/lang/String;Ljava/security/PrivateKey;[[B)V
NO_CATEGORY android.webkit.ViewStateSerializer.serializeViewState(Ljava/io/OutputStream;Landroid/webkit/WebViewCore$DrawData;)Z
NO_CATEGORY android.webkit.WebChromeClient.setupAutoFill(Landroid/os/Message;)V
NO_CATEGORY android.webkit.WebIconDatabaseClassic.requestIconForPageUrl(Ljava/lang/String;Landroid/webkit/WebIconDatabase$IconListener;)V
NO_CATEGORY android.webkit.WebSettingsClassic.setAutoFillEnabled(Z)V
NO_CATEGORY android.webkit.WebSettingsClassic.setDefaultFixedFontSize(I)V
NO_CATEGORY android.webkit.WebSettingsClassic.setDefaultFontSize(I)V
NO_CATEGORY android.webkit.WebSettingsClassic.setMinimumFontSize(I)V
NO_CATEGORY android.webkit.WebSettingsClassic.setMinimumLogicalFontSize(I)V
NO_CATEGORY android.webkit.WebSettingsClassic.setPluginsEnabled(Z)V
NO_CATEGORY android.webkit.WebSettingsClassic.setPluginsPath(Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebSettingsClassic.setProperty(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebSettingsClassic.setUseDoubleTree(Z)V
NO_CATEGORY android.webkit.WebSettingsClassic.setUserAgent(I)V
NO_CATEGORY android.webkit.WebSettings.setAllowContentAccess(Z)V
NO_CATEGORY android.webkit.WebSettings.setAllowFileAccess(Z)V
NO_CATEGORY android.webkit.WebSettings.setAppCacheEnabled(Z)V
NO_CATEGORY android.webkit.WebSettings.setAppCacheMaxSize(J)V
NO_CATEGORY android.webkit.WebSettings.setAppCachePath(Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebSettings.setBlockNetworkImage(Z)V
NO_CATEGORY android.webkit.WebSettings.setBlockNetworkLoads(Z)V
NO_CATEGORY android.webkit.WebSettings.setBuiltInZoomControls(Z)V
NO_CATEGORY android.webkit.WebSettings.setCacheMode(I)V
NO_CATEGORY android.webkit.WebSettings.setCursiveFontFamily(Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebSettings.setDatabaseEnabled(Z)V
NO_CATEGORY android.webkit.WebSettings.setDatabasePath(Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebSettings.setDefaultFixedFontSize(I)V
NO_CATEGORY android.webkit.WebSettings.setDefaultFontSize(I)V
NO_CATEGORY android.webkit.WebSettings.setDefaultTextEncodingName(Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebSettings.setDefaultZoom(Landroid/webkit/WebSettings$ZoomDensity;)V
NO_CATEGORY android.webkit.WebSettings.setDisplayZoomControls(Z)V
NO_CATEGORY android.webkit.WebSettings.setDomStorageEnabled(Z)V
NO_CATEGORY android.webkit.WebSettings.setEnableSmoothTransition(Z)V
NO_CATEGORY android.webkit.WebSettings.setFantasyFontFamily(Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebSettings.setFixedFontFamily(Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebSettings.setGeolocationDatabasePath(Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebSettings.setGeolocationEnabled(Z)V
NO_CATEGORY android.webkit.WebSettings.setJavaScriptCanOpenWindowsAutomatically(Z)V
NO_CATEGORY android.webkit.WebSettings.setJavaScriptEnabled(Z)V
NO_CATEGORY android.webkit.WebSettings.setLayoutAlgorithm(Landroid/webkit/WebSettings$LayoutAlgorithm;)V
NO_CATEGORY android.webkit.WebSettings.setLightTouchEnabled(Z)V
NO_CATEGORY android.webkit.WebSettings.setLoadsImagesAutomatically(Z)V
NO_CATEGORY android.webkit.WebSettings.setLoadWithOverviewMode(Z)V
NO_CATEGORY android.webkit.WebSettings.setMediaPlaybackRequiresUserGesture(Z)V
NO_CATEGORY android.webkit.WebSettings.setMinimumFontSize(I)V
NO_CATEGORY android.webkit.WebSettings.setMinimumLogicalFontSize(I)V
NO_CATEGORY android.webkit.WebSettings.setNavDump(Z)V
NO_CATEGORY android.webkit.WebSettings.setNeedInitialFocus(Z)V
NO_CATEGORY android.webkit.WebSettings.setPluginsEnabled(Z)V
NO_CATEGORY android.webkit.WebSettings.setPluginsPath(Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebSettings.setPluginState(Landroid/webkit/WebSettings$PluginState;)V
NO_CATEGORY android.webkit.WebSettings.setRenderPriority(Landroid/webkit/WebSettings$RenderPriority;)V
NO_CATEGORY android.webkit.WebSettings.setSansSerifFontFamily(Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebSettings.setSaveFormData(Z)V
NO_CATEGORY android.webkit.WebSettings.setSavePassword(Z)V
NO_CATEGORY android.webkit.WebSettings.setSerifFontFamily(Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebSettings.setStandardFontFamily(Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebSettings.setSupportMultipleWindows(Z)V
NO_CATEGORY android.webkit.WebSettings.setSupportZoom(Z)V
NO_CATEGORY android.webkit.WebSettings.setTextSize(Landroid/webkit/WebSettings$TextSize;)V
NO_CATEGORY android.webkit.WebSettings.setTextZoom(I)V
NO_CATEGORY android.webkit.WebSettings.setUseDoubleTree(Z)V
NO_CATEGORY android.webkit.WebSettings.setUseWebViewBackgroundForOverscrollBackground(Z)V
NO_CATEGORY android.webkit.WebSettings.setUseWideViewPort(Z)V
NO_CATEGORY android.webkit.WebStorageClassic.setAppCacheMaximumSize(J)V
NO_CATEGORY android.webkit.WebStorageClassic.setQuotaForOrigin(Ljava/lang/String;J)V
NO_CATEGORY android.webkit.WebStorage.setQuotaForOrigin(Ljava/lang/String;J)V
NO_CATEGORY android.webkit.WebViewClassic.dumpViewHierarchyWithProperties(Ljava/io/BufferedWriter;I)V
NO_CATEGORY android.webkit.WebViewClassic$Factory.setPlatformNotificationsEnabled(Z)V
NO_CATEGORY android.webkit.WebViewClassic$FocusTransitionDrawable.draw(Landroid/graphics/Canvas;)V
NO_CATEGORY android.webkit.WebViewClassic$FocusTransitionDrawable.setAlpha(I)V
NO_CATEGORY android.webkit.WebViewClassic$FocusTransitionDrawable.setColorFilter(Landroid/graphics/ColorFilter;)V
NO_CATEGORY android.webkit.WebViewClassic.onSavePassword(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)Z
NO_CATEGORY android.webkit.WebViewClassic.performAccessibilityAction(ILandroid/os/Bundle;)Z
NO_CATEGORY android.webkit.WebViewClassic$PrivateHandler.handleMessage(Landroid/os/Message;)V
NO_CATEGORY android.webkit.WebViewClassic.restorePicture(Landroid/os/Bundle;Ljava/io/File;)Z
NO_CATEGORY android.webkit.WebViewClassic.restoreState(Landroid/os/Bundle;)Landroid/webkit/WebBackForwardList;
NO_CATEGORY android.webkit.WebViewClassic.savePicture(Landroid/os/Bundle;Ljava/io/File;)Z
NO_CATEGORY android.webkit.WebViewClassic.saveViewState(Ljava/io/OutputStream;Landroid/webkit/ValueCallback;)V
NO_CATEGORY android.webkit.WebViewClassic.saveWebArchive(Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebViewClassic.saveWebArchive(Ljava/lang/String;ZLandroid/webkit/ValueCallback;)V
NO_CATEGORY android.webkit.WebViewClassic.sendBatchableInputMessage(IIILjava/lang/Object;)V
NO_CATEGORY android.webkit.WebViewClassic.setFrame(IIII)Z
NO_CATEGORY android.webkit.WebViewClassic.setHttpAuthUsernamePassword(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebViewClassic.setInitialScale(I)V
NO_CATEGORY android.webkit.WebViewClassic.setJsFlags(Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebViewClassic.setLayerType(ILandroid/graphics/Paint;)V
NO_CATEGORY android.webkit.WebViewClassic.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V
NO_CATEGORY android.webkit.WebViewClassic.setMockDeviceOrientation(ZDZDZD)V
NO_CATEGORY android.webkit.WebViewClassic.setMockGeolocationError(ILjava/lang/String;)V
NO_CATEGORY android.webkit.WebViewClassic.setMockGeolocationPermission(Z)V
NO_CATEGORY android.webkit.WebViewClassic.setMockGeolocationPosition(DDD)V
NO_CATEGORY android.webkit.WebViewClassic.setNetworkAvailable(Z)V
NO_CATEGORY android.webkit.WebViewClassic.setNetworkType(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebViewClassic.setOverScrollMode(I)V
NO_CATEGORY android.webkit.WebViewClassic.setScrollBarStyle(I)V
NO_CATEGORY android.webkit.WebViewClassic.setSelection(II)V
NO_CATEGORY android.webkit.WebViewClassic.setWebBackForwardListClient(Landroid/webkit/WebBackForwardListClient;)V
NO_CATEGORY android.webkit.WebViewClassic.setWebChromeClient(Landroid/webkit/WebChromeClient;)V
NO_CATEGORY android.webkit.WebViewClassic.setWebViewClient(Landroid/webkit/WebViewClient;)V
NO_CATEGORY android.webkit.WebViewClassic$WebViewInputConnection.performEditorAction(I)Z
NO_CATEGORY android.webkit.WebViewClassic$WebViewInputConnection.sendKeyEvent(Landroid/view/KeyEvent;)Z
NO_CATEGORY android.webkit.WebViewClassic$WebViewInputConnection.setAutoFillable(I)V
NO_CATEGORY android.webkit.WebViewClassic$WebViewInputConnection.setComposingRegion(II)Z
NO_CATEGORY android.webkit.WebViewClassic$WebViewInputConnection.setSelection(II)Z
NO_CATEGORY android.webkit.WebViewClassic$WebViewInputConnection.setupEditorInfo(Landroid/view/inputmethod/EditorInfo;)V
NO_CATEGORY android.webkit.WebViewCore.setMockDeviceOrientation(ZDZDZD)V
NO_CATEGORY android.webkit.WebViewCore.setMockGeolocationError(ILjava/lang/String;)V android.permission.STOP_APP_SWITCHES 
NO_CATEGORY android.webkit.WebViewCore.setMockGeolocationPermission(Z)V
NO_CATEGORY android.webkit.WebViewCore.setMockGeolocationPosition(DDD)V
NO_CATEGORY android.webkit.WebViewDatabaseClassic.setHttpAuthUsernamePassword(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebViewDatabaseClassic.setUsernamePassword(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebView.dumpViewHierarchyWithProperties(Ljava/io/BufferedWriter;I)V
NO_CATEGORY android.webkit.WebView.performAccessibilityAction(ILandroid/os/Bundle;)Z
NO_CATEGORY android.webkit.WebView$PrivateAccess.setMeasuredDimension(II)V
NO_CATEGORY android.webkit.WebView$PrivateAccess.setScrollXRaw(I)V
NO_CATEGORY android.webkit.WebView$PrivateAccess.setScrollYRaw(I)V
NO_CATEGORY android.webkit.WebView.restorePicture(Landroid/os/Bundle;Ljava/io/File;)Z
NO_CATEGORY android.webkit.WebView.savePassword(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebView.savePicture(Landroid/os/Bundle;Ljava/io/File;)Z
NO_CATEGORY android.webkit.WebView.saveWebArchive(Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebView.saveWebArchive(Ljava/lang/String;ZLandroid/webkit/ValueCallback;)V
NO_CATEGORY android.webkit.WebView.setBackgroundColor(I)V
NO_CATEGORY android.webkit.WebView.setCertificate(Landroid/net/http/SslCertificate;)V
NO_CATEGORY android.webkit.WebView.setFrame(IIII)Z
NO_CATEGORY android.webkit.WebView.setHorizontalScrollbarOverlay(Z)V
NO_CATEGORY android.webkit.WebView.setHttpAuthUsernamePassword(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY android.webkit.WebView.setInitialScale(I)V
NO_CATEGORY android.webkit.WebView.setLayerType(ILandroid/graphics/Paint;)V
NO_CATEGORY android.webkit.WebView.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V
NO_CATEGORY android.webkit.WebView.setMapTrackballToArrowKeys(Z)V
NO_CATEGORY android.webkit.WebView.setNetworkAvailable(Z)V
NO_CATEGORY android.webkit.WebView.setOverScrollMode(I)V
NO_CATEGORY android.webkit.WebView.setScrollBarStyle(I)V
NO_CATEGORY android.webkit.WebView.setVerticalScrollbarOverlay(Z)V
NO_CATEGORY android.webkit.WebView.setWebChromeClient(Landroid/webkit/WebChromeClient;)V
NO_CATEGORY android.webkit.WebView.setWebViewClient(Landroid/webkit/WebViewClient;)V
NO_CATEGORY android.webkit.ZoomManager.onFirstLayout(Landroid/webkit/WebViewCore$DrawData;)V
NO_CATEGORY android.webkit.ZoomManager.onNewPicture(Landroid/webkit/WebViewCore$DrawData;)Z
NO_CATEGORY android.webkit.ZoomManager.restoreZoomState(Landroid/os/Bundle;)V
NO_CATEGORY android.webkit.ZoomManager.setHardwareAccelerated()V
NO_CATEGORY android.webkit.ZoomManager.setInitialScaleInPercent(I)V
NO_CATEGORY android.webkit.ZoomManager.setZoomScale(FZ)V
#NO_CATEGORY android.widget.AbsListView.dispatchDraw(Landroid/graphics/Canvas;)V
#NO_CATEGORY android.widget.AbsListView$FlingRunnable.startScroll(IIZ)V
#NO_CATEGORY android.widget.AbsListView$ListItemAccessibilityDelegate.performAccessibilityAction(Landroid/view/View;ILandroid/os/Bundle;)Z
#NO_CATEGORY android.widget.AbsListView.onTouchEvent(Landroid/view/MotionEvent;)Z
#NO_CATEGORY android.widget.AbsListView.performAccessibilityAction(ILandroid/os/Bundle;)Z
#NO_CATEGORY android.widget.AbsListView.performItemClick(Landroid/view/View;IJ)Z
#NO_CATEGORY android.widget.AbsListView$PositionScroller.start(II)V
#NO_CATEGORY android.widget.AbsListView$PositionScroller.startWithOffset(II)V
#NO_CATEGORY android.widget.AbsListView$RecycleBin.addScrapView(Landroid/view/View;I)V
#NO_CATEGORY android.widget.AbsListView$RecycleBin.setCacheColorHint(I)V
#NO_CATEGORY android.widget.AbsListView$SavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.widget.AbsListView.sendAccessibilityEvent(I)V
#NO_CATEGORY android.widget.AbsListView.setFastScrollAlwaysVisible(Z)V
#NO_CATEGORY android.widget.AbsListView.setFilterText(Ljava/lang/String;)V
#NO_CATEGORY android.widget.AbsListView.setFrame(IIII)Z
#NO_CATEGORY android.widget.AbsListView.setFriction(F)V
#NO_CATEGORY android.widget.AbsListView.setItemChecked(IZ)V
#NO_CATEGORY android.widget.AbsListView.setOverScrollMode(I)V
#NO_CATEGORY android.widget.AbsListView.setRemoteViewsAdapter(Landroid/content/Intent;)V
#NO_CATEGORY android.widget.AbsListView.setRemoteViewsOnClickHandler(Landroid/widget/RemoteViews$OnClickHandler;)V
#NO_CATEGORY android.widget.AbsListView.setSelector(I)V
#NO_CATEGORY android.widget.AbsListView.setVerticalScrollbarPosition(I)V
#NO_CATEGORY android.widget.AbsListView.setVisibleRangeHint(II)V
#NO_CATEGORY android.widget.AbsSeekBar.performAccessibilityAction(ILandroid/os/Bundle;)Z
#NO_CATEGORY android.widget.AbsSeekBar.setMax(I)V
#NO_CATEGORY android.widget.AbsSpinner$RecycleBin.put(ILandroid/view/View;)V
#NO_CATEGORY android.widget.AbsSpinner$SavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.widget.AbsSpinner.setSelectionInt(IZ)V
#NO_CATEGORY android.widget.AbsSpinner.setSelection(I)V
#NO_CATEGORY android.widget.AbsSpinner.setSelection(IZ)V
#NO_CATEGORY android.widget.ActivityChooserModel$DefaultSorter.sort(Landroid/content/Intent;Ljava/util/List;Ljava/util/List;)V
#NO_CATEGORY android.widget.ActivityChooserModel.setDefaultActivity(I)V
#NO_CATEGORY android.widget.ActivityChooserView.setActivityChooserModel(Landroid/widget/ActivityChooserModel;)V android.permission.STOP_APP_SWITCHES 
#NO_CATEGORY android.widget.ActivityChooserView.setExpandActivityOverflowButtonContentDescription(I)V
#NO_CATEGORY android.widget.ActivityChooserView.setExpandActivityOverflowButtonDrawable(Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY android.widget.AdapterViewAnimator$SavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.widget.AdapterViewAnimator.setDisplayedChild(I)V
#NO_CATEGORY android.widget.AdapterViewAnimator.setInAnimation(Landroid/content/Context;I)V
#NO_CATEGORY android.widget.AdapterViewAnimator.setOutAnimation(Landroid/content/Context;I)V
#NO_CATEGORY android.widget.AdapterViewAnimator.setRemoteViewsAdapter(Landroid/content/Intent;)V
#NO_CATEGORY android.widget.AdapterViewAnimator.setRemoteViewsOnClickHandler(Landroid/widget/RemoteViews$OnClickHandler;)V
#NO_CATEGORY android.widget.AdapterViewAnimator.setSelection(I)V
#NO_CATEGORY android.widget.AutoCompleteTextView.onCommitCompletion(Landroid/view/inputmethod/CompletionInfo;)V
#NO_CATEGORY android.widget.AutoCompleteTextView.setDropDownAlwaysVisible(Z)V
#NO_CATEGORY android.widget.AutoCompleteTextView.setDropDownAnimationStyle(I)V
#NO_CATEGORY android.widget.AutoCompleteTextView.setDropDownBackgroundDrawable(Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY android.widget.AutoCompleteTextView.setDropDownBackgroundResource(I)V
#NO_CATEGORY android.widget.AutoCompleteTextView.setDropDownHeight(I)V
#NO_CATEGORY android.widget.AutoCompleteTextView.setDropDownHorizontalOffset(I)V
#NO_CATEGORY android.widget.AutoCompleteTextView.setDropDownVerticalOffset(I)V
#NO_CATEGORY android.widget.AutoCompleteTextView.setDropDownWidth(I)V
#NO_CATEGORY android.widget.AutoCompleteTextView.setForceIgnoreOutsideTouch(Z)V
#NO_CATEGORY android.widget.AutoCompleteTextView.setFrame(IIII)Z
#NO_CATEGORY android.widget.AutoCompleteTextView.setListSelection(I)V
#NO_CATEGORY android.widget.CalendarView.setDate(J)V
#NO_CATEGORY android.widget.CalendarView.setDate(JZZ)V
#NO_CATEGORY android.widget.CalendarView.setEnabled(Z)V
#NO_CATEGORY android.widget.CalendarView.setMaxDate(J)V
#NO_CATEGORY android.widget.CalendarView.setMinDate(J)V
#NO_CATEGORY android.widget.CalendarView.setSelectedDateVerticalBar(I)V
#NO_CATEGORY android.widget.CalendarView$WeeksAdapter.setSelectedDay(Ljava/util/Calendar;)V
#NO_CATEGORY android.widget.CompoundButton$SavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.widget.CursorTreeAdapter.notifyDataSetChanged(Z)V
#NO_CATEGORY android.widget.CursorTreeAdapter.setChildrenCursor(ILandroid/database/Cursor;)V
#NO_CATEGORY android.widget.DatePicker$SavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.widget.DatePicker.setCalendarViewShown(Z)V
#NO_CATEGORY android.widget.DatePicker.setMaxDate(J)V
#NO_CATEGORY android.widget.DatePicker.setMinDate(J)V
#NO_CATEGORY android.widget.DatePicker.setSpinnersShown(Z)V
#NO_CATEGORY android.widget.DateTimeView.setTime(J)V
#NO_CATEGORY android.widget.Editor$ErrorPopup.update(IIIIZ)V
#NO_CATEGORY android.widget.Editor$PinnedPopupWindow.updatePosition(IIZZ)V
#NO_CATEGORY android.widget.Editor.sendOnTextChanged(II)V
#NO_CATEGORY android.widget.EditText.setEllipsize(Landroid/text/TextUtils$TruncateAt;)V
#NO_CATEGORY android.widget.EditText.setSelection(II)V
#NO_CATEGORY android.widget.EditText.setSelection(I)V
#NO_CATEGORY android.widget.ExpandableListView.dispatchDraw(Landroid/graphics/Canvas;)V
#NO_CATEGORY android.widget.ExpandableListView.performItemClick(Landroid/view/View;IJ)Z
#NO_CATEGORY android.widget.ExpandableListView$SavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.widget.ExpandableListView.setSelectedChild(IIZ)Z
#NO_CATEGORY android.widget.ExpandableListView.setSelectedGroup(I)V
#NO_CATEGORY android.widget.Gallery.performAccessibilityAction(ILandroid/os/Bundle;)Z
#NO_CATEGORY android.widget.Gallery.setSelectedPositionInt(I)V
#NO_CATEGORY android.widget.GridLayout$LayoutParams.setBaseAttributes(Landroid/content/res/TypedArray;II)V
#NO_CATEGORY android.widget.GridLayout$LayoutParams.setGravity(I)V
#NO_CATEGORY android.widget.GridLayout.setColumnCount(I)V
#NO_CATEGORY android.widget.GridLayout.setColumnOrderPreserved(Z)V
#NO_CATEGORY android.widget.GridLayout.setRowCount(I)V
#NO_CATEGORY android.widget.GridLayout.setRowOrderPreserved(Z)V
#NO_CATEGORY android.widget.GridView.setRemoteViewsAdapter(Landroid/content/Intent;)V
#NO_CATEGORY android.widget.GridView.setSelectionInt(I)V
#NO_CATEGORY android.widget.HorizontalScrollView.draw(Landroid/graphics/Canvas;)V
#NO_CATEGORY android.widget.HorizontalScrollView.performAccessibilityAction(ILandroid/os/Bundle;)Z
#NO_CATEGORY android.widget.HorizontalScrollView.setOverScrollMode(I)V
#NO_CATEGORY android.widget.ImageSwitcher.setImageDrawable(Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY android.widget.ImageSwitcher.setImageResource(I)V
#NO_CATEGORY android.widget.ImageSwitcher.setImageURI(Landroid/net/Uri;)V
#NO_CATEGORY android.widget.ImageView.setAlpha(I)V
#NO_CATEGORY android.widget.ImageView.setColorFilter(ILandroid/graphics/PorterDuff$Mode;)V
#NO_CATEGORY android.widget.ImageView.setColorFilter(I)V
#NO_CATEGORY android.widget.ImageView.setFrame(IIII)Z
#NO_CATEGORY android.widget.ImageView.setImageAlpha(I)V
#NO_CATEGORY android.widget.ImageView.setImageBitmap(Landroid/graphics/Bitmap;)V
#NO_CATEGORY android.widget.ImageView.setImageDrawable(Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY android.widget.ImageView.setImageMatrix(Landroid/graphics/Matrix;)V
#NO_CATEGORY android.widget.ImageView.setSelected(Z)V
#NO_CATEGORY android.widget.ImageView.setVisibility(I)V
#NO_CATEGORY android.widget.LinearLayout.setHorizontalGravity(I)V
#NO_CATEGORY android.widget.LinearLayout.setVerticalGravity(I)V
#NO_CATEGORY android.widget.LinearLayout.setWeightSum(F)V
#NO_CATEGORY android.widget.ListPopupWindow.setAnimationStyle(I)V
#NO_CATEGORY android.widget.ListPopupWindow.setBackgroundDrawable(Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY android.widget.ListPopupWindow.setContentWidth(I)V
#NO_CATEGORY android.widget.ListPopupWindow.setInputMethodMode(I)V
#NO_CATEGORY android.widget.ListPopupWindow.setModal(Z)V
#NO_CATEGORY android.widget.ListPopupWindow.setSelection(I)V
#NO_CATEGORY android.widget.ListPopupWindow.setSoftInputMode(I)V
#NO_CATEGORY android.widget.ListView.setCacheColorHint(I)V
#NO_CATEGORY android.widget.ListView.setRemoteViewsAdapter(Landroid/content/Intent;)V
#NO_CATEGORY android.widget.ListView.setSelectionInt(I)V
#NO_CATEGORY android.widget.ListView.setSelection(I)V
#NO_CATEGORY android.widget.MediaController.setEnabled(Z)V
#NO_CATEGORY android.widget.NumberPicker$AccessibilityNodeProviderImpl.performAction(IILandroid/os/Bundle;)Z
#NO_CATEGORY android.widget.NumberPicker$AccessibilityNodeProviderImpl.sendAccessibilityEventForVirtualView(II)V
#NO_CATEGORY android.widget.NumberPicker.setEnabled(Z)V
#NO_CATEGORY android.widget.NumberPicker.setValue(I)V
#NO_CATEGORY android.widget.OverScroller.notifyHorizontalEdgeReached(III)V
#NO_CATEGORY android.widget.OverScroller.notifyVerticalEdgeReached(III)V
#NO_CATEGORY android.widget.OverScroller.setFinalX(I)V
#NO_CATEGORY android.widget.OverScroller.setFinalY(I)V
#NO_CATEGORY android.widget.OverScroller.setFriction(F)V
#NO_CATEGORY android.widget.OverScroller$SplineOverScroller.notifyEdgeReached(III)V
#NO_CATEGORY android.widget.OverScroller.startScroll(IIIII)V
#NO_CATEGORY android.widget.OverScroller.startScroll(IIII)V
#NO_CATEGORY android.widget.PopupWindow$PopupViewContainer.dispatchKeyEvent(Landroid/view/KeyEvent;)Z
#NO_CATEGORY android.widget.PopupWindow$PopupViewContainer.sendAccessibilityEvent(I)V
#NO_CATEGORY android.widget.PopupWindow.setSplitTouchEnabled(Z)V
#NO_CATEGORY android.widget.PopupWindow.setTouchModal(Z)V
#NO_CATEGORY android.widget.PopupWindow.update(IIII)V
#NO_CATEGORY android.widget.PopupWindow.update(IIIIZ)V
#NO_CATEGORY android.widget.PopupWindow.update(II)V
#NO_CATEGORY android.widget.PopupWindow.update(Landroid/view/View;IIII)V
#NO_CATEGORY android.widget.PopupWindow.update(Landroid/view/View;II)V
#NO_CATEGORY android.widget.ProgressBar$RefreshData.setNextPoolable(Ljava/lang/Object;)V
#NO_CATEGORY android.widget.ProgressBar$SavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.widget.ProgressBar.setInterpolator(Landroid/content/Context;I)V
#NO_CATEGORY android.widget.ProgressBar.setProgress(I)V
#NO_CATEGORY android.widget.ProgressBar.setVisibility(I)V
#NO_CATEGORY android.widget.RadioGroup$LayoutParams.setBaseAttributes(Landroid/content/res/TypedArray;II)V
#NO_CATEGORY android.widget.RelativeLayout$DependencyGraph.add(Landroid/view/View;)V
#NO_CATEGORY android.widget.RelativeLayout$DependencyGraph$Node.setNextPoolable(Ljava/lang/Object;)V
#NO_CATEGORY android.widget.RelativeLayout.setHorizontalGravity(I)V
#NO_CATEGORY android.widget.RelativeLayout.setVerticalGravity(I)V
#NO_CATEGORY android.widget.RemoteViews$Action.setBitmapCache(Landroid/widget/RemoteViews$BitmapCache;)V
#NO_CATEGORY android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache.insert(ILandroid/widget/RemoteViews;JLjava/util/ArrayList;)V
#NO_CATEGORY android.widget.RemoteViewsAdapter$RemoteViewsFrameLayoutRefSet.add(ILandroid/widget/RemoteViewsAdapter$RemoteViewsFrameLayout;)V
#NO_CATEGORY android.widget.RemoteViewsAdapter$RemoteViewsMetaData.set(Landroid/widget/RemoteViewsAdapter$RemoteViewsMetaData;)V
#NO_CATEGORY android.widget.RemoteViews$BitmapCache.writeBitmapsToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.widget.RemoteViews$BitmapReflectionAction.setBitmapCache(Landroid/widget/RemoteViews$BitmapCache;)V
#NO_CATEGORY android.widget.RemoteViews.reapply(Landroid/content/Context;Landroid/view/View;Landroid/widget/RemoteViews$OnClickHandler;)V
#NO_CATEGORY android.widget.RemoteViews$ReflectionAction.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.widget.RemoteViewsService.onBind(Landroid/content/Intent;)Landroid/os/IBinder;
#NO_CATEGORY android.widget.RemoteViews.setBitmap(ILjava/lang/String;Landroid/graphics/Bitmap;)V
#NO_CATEGORY android.widget.RemoteViews.setBoolean(ILjava/lang/String;Z)V
#NO_CATEGORY android.widget.RemoteViews.setBundle(ILjava/lang/String;Landroid/os/Bundle;)V
#NO_CATEGORY android.widget.RemoteViews.setByte(ILjava/lang/String;B)V
#NO_CATEGORY android.widget.RemoteViews.setChar(ILjava/lang/String;C)V
#NO_CATEGORY android.widget.RemoteViews.setCharSequence(ILjava/lang/String;Ljava/lang/CharSequence;)V
#NO_CATEGORY android.widget.RemoteViews.setChronometer(IJLjava/lang/String;Z)V
#NO_CATEGORY android.widget.RemoteViews.setContentDescription(ILjava/lang/CharSequence;)V
#NO_CATEGORY android.widget.RemoteViews.setDisplayedChild(II)V
#NO_CATEGORY android.widget.RemoteViews.setDouble(ILjava/lang/String;D)V
#NO_CATEGORY android.widget.RemoteViews.setDrawableParameters(IZIILandroid/graphics/PorterDuff$Mode;I)V
#NO_CATEGORY android.widget.RemoteViews.setEmptyView(II)V
#NO_CATEGORY android.widget.RemoteViews.setFloat(ILjava/lang/String;F)V
#NO_CATEGORY android.widget.RemoteViews.setImageViewBitmap(ILandroid/graphics/Bitmap;)V
#NO_CATEGORY android.widget.RemoteViews.setImageViewResource(II)V
#NO_CATEGORY android.widget.RemoteViews.setImageViewUri(ILandroid/net/Uri;)V
#NO_CATEGORY android.widget.RemoteViews.setIntent(ILjava/lang/String;Landroid/content/Intent;)V
#NO_CATEGORY android.widget.RemoteViews.setInt(ILjava/lang/String;I)V
#NO_CATEGORY android.widget.RemoteViews.setLabelFor(II)V
#NO_CATEGORY android.widget.RemoteViews.setLong(ILjava/lang/String;J)V
#NO_CATEGORY android.widget.RemoteViews.setOnClickFillInIntent(ILandroid/content/Intent;)V
#NO_CATEGORY android.widget.RemoteViews$SetOnClickFillInIntent.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.widget.RemoteViews.setOnClickPendingIntent(ILandroid/app/PendingIntent;)V
#NO_CATEGORY android.widget.RemoteViews$SetOnClickPendingIntent.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.widget.RemoteViews.setPendingIntentTemplate(ILandroid/app/PendingIntent;)V
#NO_CATEGORY android.widget.RemoteViews$SetPendingIntentTemplate.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.widget.RemoteViews.setProgressBar(IIIZ)V
#NO_CATEGORY android.widget.RemoteViews.setRelativeScrollPosition(II)V
#NO_CATEGORY android.widget.RemoteViews.setRemoteAdapter(IILandroid/content/Intent;)V
#NO_CATEGORY android.widget.RemoteViews.setRemoteAdapter(ILandroid/content/Intent;)V
#NO_CATEGORY android.widget.RemoteViews$SetRemoteViewsAdapterIntent.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.widget.RemoteViews.setScrollPosition(II)V
#NO_CATEGORY android.widget.RemoteViews.setShort(ILjava/lang/String;S)V
#NO_CATEGORY android.widget.RemoteViews.setString(ILjava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY android.widget.RemoteViews.setTextColor(II)V
#NO_CATEGORY android.widget.RemoteViews.setTextViewCompoundDrawables(IIIII)V
#NO_CATEGORY android.widget.RemoteViews.setTextViewCompoundDrawablesRelative(IIIII)V
#NO_CATEGORY android.widget.RemoteViews.setTextViewText(ILjava/lang/CharSequence;)V
#NO_CATEGORY android.widget.RemoteViews.setTextViewTextSize(IIF)V
#NO_CATEGORY android.widget.RemoteViews.setUri(ILjava/lang/String;Landroid/net/Uri;)V
#NO_CATEGORY android.widget.RemoteViews.setViewPadding(IIIII)V
#NO_CATEGORY android.widget.RemoteViews.setViewVisibility(II)V
#NO_CATEGORY android.widget.RemoteViews$ViewGroupAction.setBitmapCache(Landroid/widget/RemoteViews$BitmapCache;)V
#NO_CATEGORY android.widget.RemoteViews$ViewGroupAction.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.widget.RemoteViews.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.widget.ScrollBarDrawable.setAlpha(I)V
#NO_CATEGORY android.widget.ScrollBarDrawable.setColorFilter(Landroid/graphics/ColorFilter;)V
#NO_CATEGORY android.widget.Scroller.startScroll(IIII)V
#NO_CATEGORY android.widget.ScrollView.draw(Landroid/graphics/Canvas;)V
#NO_CATEGORY android.widget.ScrollView.performAccessibilityAction(ILandroid/os/Bundle;)Z
#NO_CATEGORY android.widget.ScrollView.setOverScrollMode(I)V
#NO_CATEGORY android.widget.SearchView.setIconifiedByDefault(Z)V
#NO_CATEGORY android.widget.SearchView.setIconified(Z)V
#NO_CATEGORY android.widget.SearchView.setImeOptions(I)V
#NO_CATEGORY android.widget.SearchView.setInputType(I)V
#NO_CATEGORY android.widget.ShareActionProvider.setShareIntent(Landroid/content/Intent;)V
#NO_CATEGORY android.widget.SimpleAdapter.setViewImage(Landroid/widget/ImageView;I)V
#NO_CATEGORY android.widget.SimpleAdapter.setViewImage(Landroid/widget/ImageView;Ljava/lang/String;)V
#NO_CATEGORY android.widget.SimpleAdapter.setViewText(Landroid/widget/TextView;Ljava/lang/String;)V
#NO_CATEGORY android.widget.SimpleCursorAdapter.setViewImage(Landroid/widget/ImageView;Ljava/lang/String;)V
#NO_CATEGORY android.widget.SimpleCursorAdapter.setViewText(Landroid/widget/TextView;Ljava/lang/String;)V
#NO_CATEGORY android.widget.Spinner.setDropDownHorizontalOffset(I)V
#NO_CATEGORY android.widget.Spinner.setDropDownVerticalOffset(I)V
#NO_CATEGORY android.widget.Spinner.setEnabled(Z)V
#NO_CATEGORY android.widget.Spinner.setPopupBackgroundResource(I)V
#NO_CATEGORY android.widget.Spinner.setPromptId(I)V
#NO_CATEGORY android.widget.Switch.setChecked(Z)V
#NO_CATEGORY android.widget.Switch.setSwitchTextAppearance(Landroid/content/Context;I)V
#NO_CATEGORY android.widget.Switch.setSwitchTypeface(Landroid/graphics/Typeface;I)V android.permission.STOP_APP_SWITCHES 
#NO_CATEGORY android.widget.Switch.setSwitchTypeface(Landroid/graphics/Typeface;)V
#NO_CATEGORY android.widget.Switch.setThumbResource(I)V
#NO_CATEGORY android.widget.Switch.setTrackResource(I)V
#NO_CATEGORY android.widget.TabHost.sendAccessibilityEvent(I)V
#NO_CATEGORY android.widget.TabHost.setCurrentTabByTag(Ljava/lang/String;)V
#NO_CATEGORY android.widget.TabHost$TabSpec.setContent(I)Landroid/widget/TabHost$TabSpec;
#NO_CATEGORY android.widget.TabHost$TabSpec.setContent(Landroid/content/Intent;)Landroid/widget/TabHost$TabSpec;
#NO_CATEGORY android.widget.TabHost$TabSpec.setIndicator(Landroid/view/View;)Landroid/widget/TabHost$TabSpec;
#NO_CATEGORY android.widget.TableLayout$LayoutParams.setBaseAttributes(Landroid/content/res/TypedArray;II)V
#NO_CATEGORY android.widget.TableLayout.setColumnCollapsed(IZ)V
#NO_CATEGORY android.widget.TableLayout.setColumnShrinkable(IZ)V
#NO_CATEGORY android.widget.TableLayout.setColumnStretchable(IZ)V
#NO_CATEGORY android.widget.TableRow$LayoutParams.setBaseAttributes(Landroid/content/res/TypedArray;II)V
#NO_CATEGORY android.widget.TabWidget.sendAccessibilityEventUnchecked(Landroid/view/accessibility/AccessibilityEvent;)V
#NO_CATEGORY android.widget.TabWidget.setDividerDrawable(I)V
#NO_CATEGORY android.widget.TabWidget.setDividerDrawable(Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY android.widget.TabWidget.setEnabled(Z)V
#NO_CATEGORY android.widget.TabWidget.setLeftStripDrawable(I)V
#NO_CATEGORY android.widget.TabWidget.setRightStripDrawable(I)V
#NO_CATEGORY android.widget.TextView$Drawables.resolveWithLayoutDirection(I)V
#NO_CATEGORY android.widget.TextView$SavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.widget.TextView.sendAccessibilityEvent(I)V
#NO_CATEGORY android.widget.TextView.setAccessibilityCursorPosition(I)V
#NO_CATEGORY android.widget.TextView.setAllCaps(Z)V
#NO_CATEGORY android.widget.TextView.setCompoundDrawablesRelativeWithIntrinsicBounds(IIII)V
#NO_CATEGORY android.widget.TextView.setCompoundDrawablesRelativeWithIntrinsicBounds(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY android.widget.TextView.setCompoundDrawablesWithIntrinsicBounds(IIII)V
#NO_CATEGORY android.widget.TextView.setCompoundDrawablesWithIntrinsicBounds(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY android.widget.TextView.setCursorPosition_internal(II)V
#NO_CATEGORY android.widget.TextView.setEnabled(Z)V
#NO_CATEGORY android.widget.TextView.setExtractedText(Landroid/view/inputmethod/ExtractedText;)V
#NO_CATEGORY android.widget.TextView.setFrame(IIII)Z
#NO_CATEGORY android.widget.TextView.setHint(I)V
#NO_CATEGORY android.widget.TextView.setHintTextColor(I)V
#NO_CATEGORY android.widget.TextView.setInputExtras(I)V
#NO_CATEGORY android.widget.TextView.setInputType(I)V
#NO_CATEGORY android.widget.TextView.setLinkTextColor(I)V
#NO_CATEGORY android.widget.TextView.setPadding(IIII)V
#NO_CATEGORY android.widget.TextView.setPaddingRelative(IIII)V
#NO_CATEGORY android.widget.TextView.setPaintFlags(I)V
#NO_CATEGORY android.widget.TextView.setSelected(Z)V
#NO_CATEGORY android.widget.TextView.setSingleLine(Z)V
#NO_CATEGORY android.widget.TextView.setSpan_internal(Ljava/lang/Object;III)V
#NO_CATEGORY android.widget.TextView.setTextAppearance(Landroid/content/Context;I)V
NO_CATEGORY android.widget.TextView.setText([CII)V
#NO_CATEGORY android.widget.TextView.setTextColor(I)V
#NO_CATEGORY android.widget.TextView.setText(ILandroid/widget/TextView$BufferType;)V
#NO_CATEGORY android.widget.TextView.setText(I)V
#NO_CATEGORY android.widget.TextView.setTextLocale(Ljava/util/Locale;)V
#NO_CATEGORY android.widget.TextView.setTextScaleX(F)V
#NO_CATEGORY android.widget.TextView.setTextSize(F)V
#NO_CATEGORY android.widget.TextView.setTextSize(IF)V
#NO_CATEGORY android.widget.TextView.setTypeface(Landroid/graphics/Typeface;I)V
#NO_CATEGORY android.widget.TextView.setTypeface(Landroid/graphics/Typeface;)V
#NO_CATEGORY android.widget.TimePicker$SavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.widget.TimePicker.setCurrentHour(Ljava/lang/Integer;)V
#NO_CATEGORY android.widget.TimePicker.setCurrentMinute(Ljava/lang/Integer;)V
#NO_CATEGORY android.widget.TimePicker.setIs24HourView(Ljava/lang/Boolean;)V
#NO_CATEGORY android.widget.Toast.setText(I)V
#NO_CATEGORY android.widget.ToggleButton.setBackgroundDrawable(Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY android.widget.T, if so do nothing!, if so do nothing!oggleButton.setChecked(Z)V
#NO_CATEGORY android.widget.VideoView.setVideoPath(Ljava/lang/String;)V
#NO_CATEGORY android.widget.ViewAnimator.setInAnimation(Landroid/content/Context;I)V
#NO_CATEGORY android.widget.ViewAnimator.setOutAnimation(Landroid/content/Context;I)V
#NO_CATEGORY android.widget.ZoomButtonsController.setFocusable(Z)V
#NO_CATEGORY android.widget.ZoomButtonsController.setZoomInEnabled(Z)V
#NO_CATEGORY android.widget.ZoomButtonsController.setZoomOutEnabled(Z)V
#NO_CATEGORY android.widget.ZoomButtonsController.setZoomSpeed(J)V
#NO_CATEGORY android.widget.ZoomButton.setEnabled(Z)V
#NO_CATEGORY android.widget.ZoomControls.setIsZoomInEnabled(Z)V
#NO_CATEGORY android.widget.ZoomControls.setIsZoomOutEnabled(Z)V
#NO_CATEGORY android.widget.ZoomControls.setZoomSpeed(J)V
NO_CATEGORY com.adobe.xmp.impl.CountOutputStream.write([BII)V
NO_CATEGORY com.adobe.xmp.impl.CountOutputStream.write([B)V
NO_CATEGORY com.adobe.xmp.impl.CountOutputStream.write(I)V
NO_CATEGORY com.adobe.xmp.impl.XMPDateTimeImpl.setHour(I)V
NO_CATEGORY com.adobe.xmp.impl.XMPDateTimeImpl.setMinute(I)V
NO_CATEGORY com.adobe.xmp.impl.XMPDateTimeImpl.setSecond(I)V
NO_CATEGORY com.adobe.xmp.impl.XMPDateTimeImpl.setYear(I)V
NO_CATEGORY com.adobe.xmp.impl.XMPMetaImpl.setLocalizedText(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/adobe/xmp/options/PropertyOptions;)V
NO_CATEGORY com.adobe.xmp.impl.XMPMetaImpl.setNode(Lcom/adobe/xmp/impl/XMPNode;Ljava/lang/Object;Lcom/adobe/xmp/options/PropertyOptions;Z)V android.permission.STOP_APP_SWITCHES 
NO_CATEGORY com.adobe.xmp.impl.XMPMetaImpl.setPropertyBoolean(Ljava/lang/String;Ljava/lang/String;Z)V
NO_CATEGORY com.adobe.xmp.impl.XMPMetaImpl.setPropertyDate(Ljava/lang/String;Ljava/lang/String;Lcom/adobe/xmp/XMPDateTime;)V
NO_CATEGORY com.adobe.xmp.impl.XMPMetaImpl.setPropertyDouble(Ljava/lang/String;Ljava/lang/String;D)V
NO_CATEGORY com.adobe.xmp.impl.XMPMetaImpl.setPropertyInteger(Ljava/lang/String;Ljava/lang/String;I)V
NO_CATEGORY com.adobe.xmp.impl.XMPMetaImpl.setProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lcom/adobe/xmp/options/PropertyOptions;)V
NO_CATEGORY com.adobe.xmp.impl.XMPMetaImpl.setProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY com.adobe.xmp.impl.XMPSchemaRegistryImpl.registerAlias(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/adobe/xmp/options/AliasOptions;)V
NO_CATEGORY com.adobe.xmp.impl.XMPSchemaRegistryImpl.registerNamespace(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
NO_CATEGORY com.adobe.xmp.options.AliasOptions.setArrayAltText(Z)Lcom/adobe/xmp/options/AliasOptions;
NO_CATEGORY com.adobe.xmp.options.AliasOptions.setArrayOrdered(Z)Lcom/adobe/xmp/options/AliasOptions;
NO_CATEGORY com.adobe.xmp.options.Options.setOption(IZ)V
NO_CATEGORY com.adobe.xmp.options.PropertyOptions.setArrayAlternate(Z)Lcom/adobe/xmp/options/PropertyOptions;
NO_CATEGORY com.adobe.xmp.options.PropertyOptions.setArrayAltText(Z)Lcom/adobe/xmp/options/PropertyOptions;
NO_CATEGORY com.adobe.xmp.options.PropertyOptions.setArrayOrdered(Z)Lcom/adobe/xmp/options/PropertyOptions;
NO_CATEGORY com.adobe.xmp.options.PropertyOptions.setArray(Z)Lcom/adobe/xmp/options/PropertyOptions;
NO_CATEGORY com.adobe.xmp.options.PropertyOptions.setHasLanguage(Z)Lcom/adobe/xmp/options/PropertyOptions;
NO_CATEGORY com.adobe.xmp.options.PropertyOptions.setHasQualifiers(Z)Lcom/adobe/xmp/options/PropertyOptions;
NO_CATEGORY com.adobe.xmp.options.PropertyOptions.setHasType(Z)Lcom/adobe/xmp/options/PropertyOptions;
NO_CATEGORY com.adobe.xmp.options.PropertyOptions.setQualifier(Z)Lcom/adobe/xmp/options/PropertyOptions;
NO_CATEGORY com.adobe.xmp.options.PropertyOptions.setSchemaNode(Z)Lcom/adobe/xmp/options/PropertyOptions;
NO_CATEGORY com.adobe.xmp.options.PropertyOptions.setStruct(Z)Lcom/adobe/xmp/options/PropertyOptions;
NO_CATEGORY com.adobe.xmp.options.PropertyOptions.setURI(Z)Lcom/adobe/xmp/options/PropertyOptions;
NO_CATEGORY com.adobe.xmp.options.SerializeOptions.setOmitPacketWrapper(Z)Lcom/adobe/xmp/options/SerializeOptions;
NO_CATEGORY com.adobe.xmp.options.SerializeOptions.setUseCompactFormat(Z)Lcom/adobe/xmp/options/SerializeOptions;
NO_CATEGORY com.android.browser.addbookmark.FolderSpinner.setSelectionIgnoringSelectionChange(I)V
NO_CATEGORY com.android.browser.addbookmark.FolderSpinner.setSelection(I)V
NO_CATEGORY com.android.browser.AddBookmarkPage$1.onLoadFinished(Landroid/content/Loader;Lcom/android/browser/AddBookmarkPage$EditBookmarkInfo;)V
NO_CATEGORY com.android.browser.AddBookmarkPage.setAccount(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY com.android.browser.BaseUi.setActiveTab(Lcom/android/browser/Tab;)V
NO_CATEGORY com.android.browser.BaseUi.setFavicon(Lcom/android/browser/Tab;)V
NO_CATEGORY com.android.browser.BaseUi.setFullscreen(Z)V
NO_CATEGORY com.android.browser.BaseUi.setUrlTitle(Lcom/android/browser/Tab;)V
NO_CATEGORY com.android.browser.BaseUi.showComboView(Lcom/android/browser/UI$ComboViews;Landroid/os/Bundle;)V
NO_CATEGORY com.android.browser.BookmarkItem.setFaviconBackground(Landroid/graphics/drawable/Drawable;)V
NO_CATEGORY com.android.browser.BookmarkItem.setFavicon(Landroid/graphics/Bitmap;)V
NO_CATEGORY com.android.browser.BookmarksLoader.setUri(Landroid/net/Uri;)V
NO_CATEGORY com.android.browser.BrowserBackupAgent.addBookmark(Lcom/android/browser/BrowserBackupAgent$Bookmark;)V
NO_CATEGORY com.android.browser.BrowserBookmarksAdapter.bindView(Landroid/view/View;Lcom/android/browser/BrowserBookmarksAdapterItem;)V
NO_CATEGORY com.android.browser.BrowserBookmarksAdapter.bindView(Landroid/view/View;Ljava/lang/Object;)V
NO_CATEGORY com.android.browser.BrowserBookmarksPage.onLoadFinished(Landroid/content/Loader;Landroid/database/Cursor;)V
NO_CATEGORY com.android.browser.BrowserSettings.setAutofillEnabled(Z)V
NO_CATEGORY com.android.browser.BrowserSettings.setAutoFillProfile(Landroid/webkit/WebSettingsClassic$AutoFillProfile;Landroid/os/Message;)V
NO_CATEGORY com.android.browser.BrowserSettings.setDebugEnabled(Z)V
NO_CATEGORY com.android.browser.BrowserSettings.setHomePage(Ljava/lang/String;)V
NO_CATEGORY com.android.browser.BrowserSettings.setLastRecovered(J)V
NO_CATEGORY com.android.browser.BrowserSettings.setLastRunPaused(Z)V
NO_CATEGORY com.android.browser.BrowserSettings.setTextZoom(I)V
NO_CATEGORY com.android.browser.BrowserSettings.toggleDesktopUseragent(Landroid/webkit/WebView;)V
NO_CATEGORY com.android.browser.BrowserSnapshotPage.setupGrid(Landroid/view/LayoutInflater;)V
NO_CATEGORY com.android.browser.ComboViewActivity.openInNewTab([Ljava/lang/String;)V
NO_CATEGORY com.android.browser.ComboViewActivity.openSnapshot(J)V
NO_CATEGORY com.android.browser.ComboViewActivity.openUrl(Ljava/lang/String;)V
NO_CATEGORY com.android.browser.Controller.onReceivedTitle(Lcom/android/browser/Tab;Ljava/lang/String;)V
NO_CATEGORY com.android.browser.Controller$SaveSnapshotTask.onPostExecute(Ljava/lang/Long;)V
NO_CATEGORY com.android.browser.Controller.sharePage(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V
NO_CATEGORY com.android.browser.Controller.updateMenuState(Lcom/android/browser/Tab;Landroid/view/Menu;)V
NO_CATEGORY com.android.browser.HistoryItem.setIsBookmark(Z)V
NO_CATEGORY com.android.browser.homepages.Template.assign(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY com.android.browser.homepages.Template.assignLoop(Ljava/lang/String;Lcom/android/browser/homepages/Template$ListEntityIterator;)V
NO_CATEGORY com.android.browser.homepages.Template$ListEntity.write(Ljava/io/OutputStream;Lcom/android/browser/homepages/Template$EntityData;)V
NO_CATEGORY com.android.browser.homepages.Template$SimpleEntity.write(Ljava/io/OutputStream;Lcom/android/browser/homepages/Template$EntityData;)V
NO_CATEGORY com.android.browser.homepages.Template.write(Ljava/io/OutputStream;Lcom/android/browser/homepages/Template$EntityData;)V
NO_CATEGORY com.android.browser.homepages.Template.write(Ljava/io/OutputStream;)V
NO_CATEGORY com.android.browser.LogTag.logBookmarkAdded(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY com.android.browser.LogTag.logPageFinishedLoading(Ljava/lang/String;J)V
NO_CATEGORY com.android.browser.NavigationBarBase.onAction(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY com.android.browser.NavigationBarBase.setCurrentUrlIsBookmark(Z)V
NO_CATEGORY com.android.browser.NavigationBarBase.setDisplayTitle(Ljava/lang/String;)V
NO_CATEGORY com.android.browser.NavigationBarBase.setFavicon(Landroid/graphics/Bitmap;)V
NO_CATEGORY com.android.browser.NavigationBarBase.setFocusState(Z)V
NO_CATEGORY com.android.browser.NavigationBarBase.setIncognitoMode(Z)V
NO_CATEGORY com.android.browser.NavigationBarBase.setLock(Landroid/graphics/drawable/Drawable;)V
NO_CATEGORY com.android.browser.NavigationBarPhone.setDisplayTitle(Ljava/lang/String;)V
NO_CATEGORY com.android.browser.PageDialogsHandler.setHttpAuthUsernamePassword(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY com.android.browser.PhoneUi$AnimScreen.set(Landroid/graphics/Bitmap;)V
NO_CATEGORY com.android.browser.PhoneUi$AnimScreen.set(Lcom/android/browser/TitleBar;Landroid/webkit/WebView;)V
NO_CATEGORY com.android.browser.preferences.WebsiteSettingsFragment$SiteAdapter.setIconForUsage(Landroid/widget/ImageView;J)V
NO_CATEGORY com.android.browser.preferences.WebsiteSettingsFragment$Site.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY com.android.browser.PreloadController.setupAutoFill(Landroid/os/Message;)V
NO_CATEGORY com.android.browser.SnapshotBar.setFavicon(Landroid/graphics/Bitmap;)V
NO_CATEGORY com.android.browser.TitleBar.setProgress(I)V
NO_CATEGORY com.android.browser.TitleBar.updateAutoLogin(Lcom/android/browser/Tab;Z)V
NO_CATEGORY com.android.browser.view.BookmarkContainer.setBackgroundDrawable(Landroid/graphics/drawable/Drawable;)V
NO_CATEGORY com.android.browser.view.BookmarkExpandableView.setColumnWidthFromLayout(I)V
NO_CATEGORY com.android.browser.view.PieItem.setAlpha(F)V
NO_CATEGORY com.android.browser.view.PieStackView.setCurrent(I)V
NO_CATEGORY com.android.browser.view.ScrollerView.setOrientation(I)V
NO_CATEGORY com.android.browser.WebStorageSizeManager.onExceededDatabaseQuota(Ljava/lang/String;Ljava/lang/String;JJJLandroid/webkit/WebStorage$QuotaUpdater;)V
NO_CATEGORY com.android.browser.widget.BookmarkThumbnailWidgetProvider.onReceive(Landroid/content/Context;Landroid/content/Intent;)V
NO_CATEGORY com.android.browser.widget.BookmarkThumbnailWidgetProvider.onUpdate(Landroid/content/Context;Landroid/appwidget/AppWidgetManager;[I)V
NO_CATEGORY com.android.browser.widget.BookmarkThumbnailWidgetService.changeFolder(Landroid/content/Context;Landroid/content/Intent;)V
NO_CATEGORY com.android.browser.widget.BookmarkThumbnailWidgetService.setupWidgetState(Landroid/content/Context;IJ)V
NO_CATEGORY com.android.browser.widget.BookmarkThumbnailWidgetService$StateFilter.accept(Ljava/io/File;Ljava/lang/String;)Z
NO_CATEGORY com.android.browser.widget.BookmarkWidgetProxy.onReceive(Landroid/content/Context;Landroid/content/Intent;)V
NO_CATEGORY com.android.browser.XLargeUi.setFavicon(Lcom/android/browser/Tab;)V
NO_CATEGORY com.android.browser.XLargeUi.setUrlTitle(Lcom/android/browser/Tab;)V
NO_CATEGORY com.android.browser.XLargeUi.setUseQuickControls(Z)V
#NO_CATEGORY com.android.camera.ActivityBase.setContentView(I)V
#NO_CATEGORY com.android.camera.ActivityBase.setSwipingEnabled(Z)V
#NO_CATEGORY com.android.camera.CameraActivity.startActivityForResult(Landroid/content/Intent;I)V
#NO_CATEGORY com.android.camera.CameraManager$CameraProxy.setDisplayOrientation(I)V
#NO_CATEGORY com.android.camera.CameraManager$CameraProxy.setParameters(Landroid/hardware/Camera$Parameters;)V
#NO_CATEGORY com.android.camera.CameraScreenNail.setPreviewFrameLayoutSize(II)V
#NO_CATEGORY com.android.camera.CameraSettings.setCameraPictureSize(Ljava/lang/String;Ljava/util/List;Landroid/hardware/Camera$Parameters;)Z
#NO_CATEGORY com.android.camera.CaptureAnimManager.setOrientation(I)V
NO_CATEGORY com.android.camera.ComboPreferences$MyEditor.putBoolean(Ljava/lang/String;Z)Landroid/content/SharedPreferences$Editor;
NO_CATEGORY com.android.camera.ComboPreferences$MyEditor.putFloat(Ljava/lang/String;F)Landroid/content/SharedPreferences$Editor;
NO_CATEGORY com.android.camera.ComboPreferences$MyEditor.putInt(Ljava/lang/String;I)Landroid/content/SharedPreferences$Editor;
NO_CATEGORY com.android.camera.ComboPreferences$MyEditor.putLong(Ljava/lang/String;J)Landroid/content/SharedPreferences$Editor;
NO_CATEGORY com.android.camera.ComboPreferences$MyEditor.putString(Ljava/lang/String;Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;
NO_CATEGORY com.android.camera.ComboPreferences.setLocalId(Landroid/content/Context;I)V
#NO_CATEGORY com.android.camera.drawable.TextDrawable.setAlpha(I)V
#NO_CATEGORY com.android.camera.drawable.TextDrawable.setColorFilter(Landroid/graphics/ColorFilter;)V
#NO_CATEGORY com.android.camera.ListPreference.persistStringValue(Ljava/lang/String;)V
#NO_CATEGORY com.android.camera.ListPreference.setValueIndex(I)V
#NO_CATEGORY com.android.camera.MosaicFrameProcessor.setStripType(I)V
#NO_CATEGORY com.android.camera.PanoProgressBar.setBackgroundColor(I)V
#NO_CATEGORY com.android.camera.PanoProgressBar.setDoneColor(I)V
#NO_CATEGORY com.android.camera.PanoProgressBar.setIndicatorColor(I)V
#NO_CATEGORY com.android.camera.PanoProgressBar.setMaxProgress(I)V
#NO_CATEGORY com.android.camera.PanoProgressBar.setProgress(I)V
#NO_CATEGORY com.android.camera.PanoProgressBar.setRightIncreasing(Z)V
#NO_CATEGORY com.android.camera.PhotoController.setCameraId(I)V
#NO_CATEGORY com.android.camera.PhotoModule.onActivityResult(IILandroid/content/Intent;)V
#NO_CATEGORY com.android.camera.PieController.addItem(Ljava/lang/String;FF)V
#NO_CATEGORY com.android.camera.PieController.setCameraId(I)V
#NO_CATEGORY com.android.camera.PreviewGestures.dispatchTouch(Landroid/view/MotionEvent;)Z
#NO_CATEGORY com.android.camera.RotateDialogController.setOrientation(IZ)V
#NO_CATEGORY com.android.camera.ui.CameraSwitcher.setOrientation(IZ)V
#NO_CATEGORY com.android.camera.ui.EffectSettingPopup.setVisibility(I)V
#NO_CATEGORY com.android.camera.ui.InLineSettingItem.setTitle(Lcom/android/camera/ListPreference;)V
#NO_CATEGORY com.android.camera.ui.InLineSettingSwitch.setEnabled(Z)V
#NO_CATEGORY com.android.camera.ui.ListPrefSettingPopup$ListPrefSettingAdapter.setViewImage(Landroid/widget/ImageView;Ljava/lang/String;)V
#NO_CATEGORY com.android.camera.ui.MoreSettingPopup.setPreferenceEnabled(Ljava/lang/String;Z)V
#NO_CATEGORY com.android.camera.ui.PieItem.setBounds(IIII)V
#NO_CATEGORY com.android.camera.ui.PieItem.setImageResource(Landroid/content/Context;I)V
#NO_CATEGORY com.android.camera.ui.PieRenderer.onDraw(Landroid/graphics/Canvas;)V
#NO_CATEGORY com.android.camera.ui.PopupManager.notifyShowPopup(Landroid/view/View;)V
#NO_CATEGORY com.android.camera.ui.RotateLayout.setOrientation(IZ)V
#NO_CATEGORY com.android.camera.ui.Switch.setChecked(Z)V
#NO_CATEGORY com.android.camera.ui.Switch.setSwitchTextAppearance(Landroid/content/Context;I)V
#NO_CATEGORY com.android.camera.ui.TimeIntervalPopup.setTimeSelectionEnabled(Z)V
#NO_CATEGORY com.android.camera.ui.TimeIntervalPopup.setVisibility(I)V
#NO_CATEGORY com.android.camera.ui.TwoStateImageView.setEnabled(Z)V
#NO_CATEGORY com.android.camera.ui.ZoomRenderer.setZoom(I)V
#NO_CATEGORY com.android.camera.ui.ZoomRenderer.setZoomValue(I)V
#NO_CATEGORY com.android.camera.VideoController.setCameraId(I)V
#NO_CATEGORY com.android.commands.am.Am$InstrumentationWatcher.instrumentationFinished(Landroid/content/ComponentName;ILandroid/os/Bundle;)V
#NO_CATEGORY com.android.commands.am.Am$InstrumentationWatcher.instrumentationStatus(Landroid/content/ComponentName;ILandroid/os/Bundle;)V
#NO_CATEGORY com.android.commands.am.Am$IntentReceiver.performReceive(Landroid/content/Intent;ILjava/lang/String;Landroid/os/Bundle;ZZI)V
#NO_CATEGORY com.android.commands.am.Am$MyActivityController.activityResuming(Ljava/lang/String;)Z
#NO_CATEGORY com.android.commands.am.Am$MyActivityController.activityStarting(Landroid/content/Intent;Ljava/lang/String;)Z
#NO_CATEGORY com.android.commands.am.Am$MyActivityController.appCrashed(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;JLjava/lang/String;)Z
#NO_CATEGORY com.android.commands.am.Am$MyActivityController.appEarlyNotResponding(Ljava/lang/String;ILjava/lang/String;)I
#NO_CATEGORY com.android.commands.am.Am$MyActivityController.appNotResponding(Ljava/lang/String;ILjava/lang/String;)I
#NO_CATEGORY com.android.commands.bmgr.Bmgr$RestoreObserver.onUpdate(ILjava/lang/String;)V
#NO_CATEGORY com.android.commands.bmgr.Bmgr$RestoreObserver.restoreFinished(I)V
#NO_CATEGORY com.android.commands.bmgr.Bmgr$RestoreObserver.restoreSetsAvailable([Landroid/app/backup/RestoreSet;)V
#NO_CATEGORY com.android.commands.bmgr.Bmgr$RestoreObserver.restoreStarting(I)V
#NO_CATEGORY com.android.commands.monkey.Monkey$ActivityController.activityResuming(Ljava/lang/String;)Z
#NO_CATEGORY com.android.commands.monkey.Monkey$ActivityController.activityStarting(Landroid/content/Intent;Ljava/lang/String;)Z
#NO_CATEGORY com.android.commands.monkey.Monkey$ActivityController.appCrashed(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;JLjava/lang/String;)Z
#NO_CATEGORY com.android.commands.monkey.Monkey$ActivityController.appNotResponding(Ljava/lang/String;ILjava/lang/String;)I
#NO_CATEGORY com.android.commands.monkey.MonkeySourceNetwork.setVerbose(I)V
#NO_CATEGORY com.android.commands.monkey.MonkeySourceRandom.setFactors([F)V
#NO_CATEGORY com.android.commands.monkey.MonkeySourceRandom.setFactors(IF)V
#NO_CATEGORY com.android.commands.pm.Pm.run([Ljava/lang/String;)V
#NO_CATEGORY com.android.commands.svc.Svc$1.run([Ljava/lang/String;)V
#NO_CATEGORY com.android.common.content.ProjectionMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY com.android.deskclock.AlarmClock$AlarmItemAdapter.bindView(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;)V
#NO_CATEGORY com.android.deskclock.AlarmClock$AlarmItemAdapter.setNewAlarm(I)V
#NO_CATEGORY com.android.deskclock.AlarmClock.onActivityResult(IILandroid/content/Intent;)V
#NO_CATEGORY com.android.deskclock.Alarm$DaysOfWeek.setDayOfWeek(IZ)V
#NO_CATEGORY com.android.deskclock.Alarm$DaysOfWeek.set(IZ)V
#NO_CATEGORY com.android.deskclock.Alarm$DaysOfWeek.set(Lcom/android/deskclock/Alarm$DaysOfWeek;)V
#NO_CATEGORY com.android.deskclock.Alarms.enableAlarm(Landroid/content/Context;IZ)V
#NO_CATEGORY com.android.deskclock.Alarms.setAlarm(Landroid/content/Context;Lcom/android/deskclock/Alarm;)J
#NO_CATEGORY com.android.deskclock.Alarms.setNextAlert(Landroid/content/Context;)V
#NO_CATEGORY com.android.deskclock.AlarmTimePickerDialogFragment.newInstance(Lcom/android/deskclock/Alarm;)Lcom/android/deskclock/AlarmTimePickerDialogFragment;
#NO_CATEGORY com.android.deskclock.Alarm.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY com.android.deskclock.DeskClock$TabsAdapter.notifySelectedPage(I)V
#NO_CATEGORY com.android.deskclock.DeskClock$TabsAdapter.onPageSelected(I)V
#NO_CATEGORY com.android.deskclock.DigitalClock$AmPm.setIsMorning(Z)V
#NO_CATEGORY com.android.deskclock.DigitalClock$AmPm.setShowAmPm(Z)V
#NO_CATEGORY com.android.deskclock.LabelDialogFragment.newInstance(Lcom/android/deskclock/Alarm;Ljava/lang/String;)Lcom/android/deskclock/LabelDialogFragment;
#NO_CATEGORY com.android.deskclock.LabelDialogFragment.newInstance(Lcom/android/deskclock/timer/TimerObj;Ljava/lang/String;Ljava/lang/String;)Lcom/android/deskclock/LabelDialogFragment;
#NO_CATEGORY com.android.deskclock.RepeatPreference.setDaysOfWeek(Lcom/android/deskclock/Alarm$DaysOfWeek;)V
#NO_CATEGORY com.android.deskclock.SettingsActivity.onPreferenceChange(Landroid/preference/Preference;Ljava/lang/Object;)Z
#NO_CATEGORY com.android.deskclock.stopwatch.StopwatchFragment$LapsListAdapter.setLapTimes([J)V
#NO_CATEGORY com.android.deskclock.stopwatch.StopwatchService.onStartCommand(Landroid/content/Intent;II)I
#NO_CATEGORY com.android.deskclock.TimePicker$SavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY com.android.deskclock.timer.CountingTimerView.setTextColor(I)V
#NO_CATEGORY com.android.deskclock.timer.CountingTimerView.setTime(JZZ)V
#NO_CATEGORY com.android.deskclock.timer.CountingTimerView$SignedTime.updateWidth(Ljava/lang/String;)V
#NO_CATEGORY com.android.deskclock.TimerSetupView.restoreEntryState(Landroid/os/Bundle;Ljava/lang/String;)V
#NO_CATEGORY com.android.deskclock.TimerSetupView.saveEntryState(Landroid/os/Bundle;Ljava/lang/String;)V
#NO_CATEGORY com.android.deskclock.TimerSetupView.setLeftRightEnabled(Z)V
#NO_CATEGORY com.android.deskclock.timer.TimerFragment.onSaveInstanceState(Landroid/os/Bundle;)V
#NO_CATEGORY com.android.deskclock.timer.TimerFragment.setLabel(Lcom/android/deskclock/timer/TimerObj;Ljava/lang/String;)V
#NO_CATEGORY com.android.deskclock.timer.TimerListItem.setCircleBlink(Z)V
#NO_CATEGORY com.android.deskclock.timer.TimerListItem.setTextBlink(Z)V
#NO_CATEGORY com.android.deskclock.timer.TimerListItem.setTime(JZ)V
#NO_CATEGORY com.android.deskclock.timer.TimerReceiver.showExpiredAlarmNotification(Landroid/content/Context;Lcom/android/deskclock/timer/TimerObj;)V
#NO_CATEGORY com.android.deskclock.timer.TimerView.setTime(IIIII)V
#NO_CATEGORY com.android.deskclock.Utils.setClockStyle(Landroid/content/Context;Landroid/view/View;Landroid/view/View;Ljava/lang/String;)Landroid/view/View;
#NO_CATEGORY com.android.deskclock.widget.multiwaveview.GlowPadView.setEnableTarget(IZ)V
#NO_CATEGORY com.android.deskclock.widget.multiwaveview.GlowPadView.setVibrateEnabled(Z)V
#NO_CATEGORY com.android.deskclock.widget.multiwaveview.TargetDrawable$DrawableWithAlpha.setAlpha(I)V
#NO_CATEGORY com.android.deskclock.widget.multiwaveview.TargetDrawable$DrawableWithAlpha.setColorFilter(Landroid/graphics/ColorFilter;)V
#NO_CATEGORY com.android.deskclock.widget.multiwaveview.TargetDrawable.setDrawable(Landroid/content/res/Resources;I)V
#NO_CATEGORY com.android.deskclock.widget.multiwaveview.TargetDrawable.setState([I)V
#NO_CATEGORY com.android.deskclock.worldclock.CitiesActivity$CityAdapter.set24HoursMode(Landroid/content/Context;)V
#NO_CATEGORY com.android.deskclock.worldclock.CitiesActivity.onCheckedChanged(Landroid/widget/CompoundButton;Z)V
#NO_CATEGORY com.android.deskclock.worldclock.Cities.saveCitiesToSharedPrefs(Landroid/content/SharedPreferences;Ljava/util/HashMap;)V
#NO_CATEGORY com.android.deskclock.worldclock.WorldClockAdapter.loadCitiesDb(Landroid/content/Context;)V
NO_CATEGORY com.android.email.provider.EmailProvider.insert(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;
NO_CATEGORY com.android.email.provider.EmailProvider.update(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
NO_CATEGORY com.android.exchange.adapter.AccountSyncAdapter.sendLocalChanges(Lcom/android/exchange/adapter/Serializer;)Z
NO_CATEGORY com.android.exchange.adapter.AttachmentLoader.readChunked(Ljava/io/InputStream;Ljava/io/OutputStream;I)V
NO_CATEGORY com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations.updatedAttendee(Landroid/content/ContentValues;J)V
NO_CATEGORY com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser.addEvent(Lcom/android/exchange/adapter/CalendarSyncAdapter$CalendarOperations;Ljava/lang/String;Z)V
NO_CATEGORY com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser.setTimeRelatedValues(Landroid/content/ContentValues;JJI)V
NO_CATEGORY com.android.exchange.adapter.ContactsSyncAdapter.sendLocalChanges(Lcom/android/exchange/adapter/Serializer;)Z
NO_CATEGORY com.android.exchange.adapter.EmailSyncAdapter$EasEmailSyncParser.addData(Lcom/android/emailcommon/provider/EmailContent$Message;I)V
NO_CATEGORY com.android.exchange.adapter.EmailSyncAdapter.sendLocalChanges(Lcom/android/exchange/adapter/Serializer;)Z
NO_CATEGORY com.android.exchange.adapter.Serializer.opaque(Ljava/io/InputStream;I)Lcom/android/exchange/adapter/Serializer;
NO_CATEGORY com.android.exchange.adapter.Serializer.opaqueWithoutData(I)Lcom/android/exchange/adapter/Serializer;
NO_CATEGORY com.android.exchange.adapter.Serializer.tag(I)Lcom/android/exchange/adapter/Serializer;
NO_CATEGORY com.android.exchange.adapter.Serializer.writeLiteralString(Ljava/io/OutputStream;Ljava/lang/String;)V
NO_CATEGORY com.android.exchange.EasAccountService.sendPing([BI)Lcom/android/exchange/EasResponse;
NO_CATEGORY com.android.exchange.EasAccountService.tryProvision(Lcom/android/exchange/EasSyncService;)Z android.permission.WAKE_LOCK 
NO_CATEGORY com.android.exchange.EasOutboxService$SendMailEntity.writeTo(Ljava/io/OutputStream;)V
NO_CATEGORY com.android.exchange.EasOutboxService.sendMessage(Landroid/content/Context;JLcom/android/emailcommon/provider/EmailContent$Message;)V
NO_CATEGORY com.android.exchange.EasOutboxService.sendMessage(Ljava/io/File;J)I
NO_CATEGORY com.android.exchange.EasOutboxService.tryProvision(Lcom/android/exchange/EasSyncService;)Z android.permission.WAKE_LOCK 
NO_CATEGORY com.android.exchange.EasSyncService.messageMoveRequest(Lcom/android/exchange/MessageMoveRequest;)V
NO_CATEGORY com.android.exchange.EasSyncService.sendHttpClientPost(Ljava/lang/String;[B)Lcom/android/exchange/EasResponse;
NO_CATEGORY com.android.exchange.EasSyncService.sendHttpClientPost(Ljava/lang/String;Lorg/apache/http/HttpEntity;I)Lcom/android/exchange/EasResponse;
NO_CATEGORY com.android.exchange.EasSyncService.sendMeetingResponse(Lcom/android/exchange/MeetingResponseRequest;)V
NO_CATEGORY com.android.exchange.EasSyncService.sendPing([BI)Lcom/android/exchange/EasResponse;
NO_CATEGORY com.android.exchange.EasSyncService.setConnectionParameters(Lcom/android/emailcommon/provider/HostAuth;)V
NO_CATEGORY com.android.exchange.EasSyncService.setHeaders(Lorg/apache/http/client/methods/HttpRequestBase;Z)V
NO_CATEGORY com.android.exchange.EasSyncService.setupServiceForAccount(Landroid/content/Context;Lcom/android/emailcommon/provider/Account;)Lcom/android/exchange/EasSyncService;
NO_CATEGORY com.android.exchange.EasSyncService.tryProvision(Lcom/android/exchange/EasSyncService;)Z android.permission.WAKE_LOCK 
NO_CATEGORY com.android.exchange.ExchangeService$1.sendMessageStatus(JLjava/lang/String;II)V
NO_CATEGORY com.android.exchange.ExchangeService$2.loadAttachment(JZ)V
NO_CATEGORY com.android.exchange.ExchangeService$2.sendMeetingResponse(JI)V
NO_CATEGORY com.android.exchange.ExchangeService$2.setLogging(I)V
NO_CATEGORY com.android.exchange.ExchangeService.done(Lcom/android/exchange/AbstractSyncService;)V
NO_CATEGORY com.android.exchange.ExchangeService.sendMessageRequest(Lcom/android/exchange/Request;)V
NO_CATEGORY com.android.exchange.ExchangeService.serviceRequest(JJI)V
NO_CATEGORY com.android.exchange.ExchangeService.setWatchdogAlarm(JJ)V
NO_CATEGORY com.android.exchange.provider.GalResult$GalData.put(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY com.android.exchange.provider.MailboxUtilities.setFlagsAndChildrensParentKey(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY com.android.exchange.utility.CalendarUtilities.createCalendar(Lcom/android/exchange/EasSyncService;Lcom/android/emailcommon/provider/Account;Lcom/android/emailcommon/provider/Mailbox;)J
NO_CATEGORY com.android.exchange.utility.CalendarUtilities.timeZoneToTziString(Ljava/util/TimeZone;)Ljava/lang/String;
NO_CATEGORY com.android.exchange.utility.CalendarUtilities.tziStringToTimeZone(Ljava/lang/String;I)Ljava/util/TimeZone;
NO_CATEGORY com.android.exchange.utility.SimpleIcsWriter.writeLine(Ljava/lang/String;)V
NO_CATEGORY com.android.exchange.utility.SimpleIcsWriter.writeTag(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY com.android.ex.chips.RecipientEditTextView.onTouchEvent(Landroid/view/MotionEvent;)Z
NO_CATEGORY com.android.ex.variablespeed.MediaPlayerDataSource.setAsSourceFor(Landroid/media/MediaPlayer;)V
NO_CATEGORY com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy.setAudioStreamType(I)V
NO_CATEGORY com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy.setVariableSpeed(F)V
#NO_CATEGORY com.android.gallery3d.app.AbstractGalleryActivity.setContentView(I)V
#NO_CATEGORY com.android.gallery3d.app.AlbumPage.doCluster(I)V
#NO_CATEGORY com.android.gallery3d.app.AlbumSetPage.doCluster(I)V
#NO_CATEGORY com.android.gallery3d.app.Bookmarker.setBookmark(Landroid/net/Uri;II)V
#NO_CATEGORY com.android.gallery3d.app.CommonControllerOverlay.setTimes(IIII)V
#NO_CATEGORY com.android.gallery3d.app.FilterUtils.setupMenuItems(Lcom/android/gallery3d/app/GalleryActionBar;Lcom/android/gallery3d/data/Path;Z)V
#NO_CATEGORY com.android.gallery3d.app.GalleryActionBar.setDisplayOptions(ZZ)V
#NO_CATEGORY com.android.gallery3d.app.GalleryActionBar.setSelectedAction(I)Z
#NO_CATEGORY com.android.gallery3d.app.GalleryActionBar.setSubtitle(Ljava/lang/String;)V android.permission.STOP_APP_SWITCHES 
#NO_CATEGORY com.android.gallery3d.app.GalleryActionBar.setTitle(I)V
#NO_CATEGORY com.android.gallery3d.app.GalleryActionBar.setTitle(Ljava/lang/String;)V
#NO_CATEGORY com.android.gallery3d.app.Gallery.onCreate(Landroid/os/Bundle;)V
#NO_CATEGORY com.android.gallery3d.app.PackagesMonitor.onReceive(Landroid/content/Context;Landroid/content/Intent;)V
#NO_CATEGORY com.android.gallery3d.app.PhotoPage.onCreate(Landroid/os/Bundle;Landroid/os/Bundle;)V
#NO_CATEGORY com.android.gallery3d.app.PhotoPage.playVideo(Landroid/app/Activity;Landroid/net/Uri;Ljava/lang/String;)V
#NO_CATEGORY com.android.gallery3d.app.PhotoPageProgressBar.setProgress(I)V
#NO_CATEGORY com.android.gallery3d.app.PhotoPage.setSwipingEnabled(Z)V
#NO_CATEGORY com.android.gallery3d.app.SinglePhotoDataAdapter.setCurrentPhoto(Lcom/android/gallery3d/data/Path;I)V
#NO_CATEGORY com.android.gallery3d.app.SinglePhotoDataAdapter.setFocusHintDirection(I)V
#NO_CATEGORY com.android.gallery3d.app.SinglePhotoDataAdapter.setFocusHintPath(Lcom/android/gallery3d/data/Path;)V
#NO_CATEGORY com.android.gallery3d.app.SinglePhotoDataAdapter.setNeedFullImage(Z)V
#NO_CATEGORY com.android.gallery3d.app.StateManager.notifyActivityResult(IILandroid/content/Intent;)V
#NO_CATEGORY com.android.gallery3d.app.StateManager.restoreFromState(Landroid/os/Bundle;)V
#NO_CATEGORY com.android.gallery3d.app.StateManager.startStateForResult(Ljava/lang/Class;ILandroid/os/Bundle;)V android.permission.NFC android.permission.ACCESS_FINE_LOCATION android.permission.VIBRATE android.permission.ACCESS_COARSE_LOCATION android.permission.ACCESS_NETWORK_STATE 
#NO_CATEGORY com.android.gallery3d.app.StitchingProgressManager$AddItemCallback.onStitchingQueued(Ljava/lang/String;Landroid/net/Uri;)V
#NO_CATEGORY com.android.gallery3d.app.StitchingProgressManager$UpdateProgressCallback.onProgress(Ljava/lang/String;Landroid/net/Uri;I)V
#NO_CATEGORY com.android.gallery3d.app.TransitionStore.putIfNotPresent(Ljava/lang/Object;Ljava/lang/Object;)V
#NO_CATEGORY com.android.gallery3d.app.TransitionStore.put(Ljava/lang/Object;Ljava/lang/Object;)V
#NO_CATEGORY com.android.gallery3d.app.TrimControllerOverlay.setTimes(IIII)V
#NO_CATEGORY com.android.gallery3d.common.EntrySchema.objectToValues(Lcom/android/gallery3d/common/Entry;Landroid/content/ContentValues;)V
#NO_CATEGORY com.android.gallery3d.common.LruCache.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY com.android.gallery3d.common.OverScroller.startScroll(IIIII)V
#NO_CATEGORY com.android.gallery3d.data.DataManager.addSource(Lcom/android/gallery3d/data/MediaSource;)V
#NO_CATEGORY com.android.gallery3d.data.DataManager.mapMediaItems(Ljava/util/ArrayList;Lcom/android/gallery3d/data/MediaSet$ItemConsumer;I)V
#NO_CATEGORY com.android.gallery3d.data.DataManager$NotifyBroker.registerNotifier(Lcom/android/gallery3d/data/ChangeNotifier;)V
#NO_CATEGORY com.android.gallery3d.data.DataManager.registerChangeNotifier(Landroid/net/Uri;Lcom/android/gallery3d/data/ChangeNotifier;)V
#NO_CATEGORY com.android.gallery3d.data.DownloadCache.download(Lcom/android/gallery3d/util/ThreadPool$JobContext;Ljava/net/URL;)Lcom/android/gallery3d/data/DownloadCache$Entry;
#NO_CATEGORY com.android.gallery3d.data.DownloadCache$DownloadTask.onFutureDone(Lcom/android/gallery3d/util/Future;)V
#NO_CATEGORY com.android.gallery3d.data.DownloadUtils.dump(Lcom/android/gallery3d/util/ThreadPool$JobContext;Ljava/io/InputStream;Ljava/io/OutputStream;)V
#NO_CATEGORY com.android.gallery3d.data.FaceClustering$1.consume(ILcom/android/gallery3d/data/MediaItem;)V
#NO_CATEGORY com.android.gallery3d.data.FilterDeleteSet.addDeletion(Lcom/android/gallery3d/data/Path;I)V
#NO_CATEGORY com.android.gallery3d.data.ImageCacheService.putImageData(Lcom/android/gallery3d/data/Path;I[B)V
#NO_CATEGORY com.android.gallery3d.data.MediaDetails.addDetail(ILjava/lang/Object;)V
#NO_CATEGORY com.android.gallery3d.data.MediaDetails.setUnit(II)V
#NO_CATEGORY com.android.gallery3d.data.MtpContext.copyAlbum(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Z
#NO_CATEGORY com.android.gallery3d.data.PathMatcher$Node.addChild(Ljava/lang/String;)Lcom/android/gallery3d/data/PathMatcher$Node;
#NO_CATEGORY com.android.gallery3d.data.Path.setObject(Lcom/android/gallery3d/data/MediaObject;)V
#NO_CATEGORY com.android.gallery3d.data.TagClustering$1.consume(ILcom/android/gallery3d/data/MediaItem;)V
#NO_CATEGORY com.android.gallery3d.exif.CountedDataInputStream.setByteOrder(Ljava/nio/ByteOrder;)V
#NO_CATEGORY com.android.gallery3d.exif.ExifData.setStripBytes(I[B)V
#NO_CATEGORY com.android.gallery3d.exif.ExifOutputStream.write([BII)V
#NO_CATEGORY com.android.gallery3d.exif.ExifOutputStream.write([B)V
#NO_CATEGORY com.android.gallery3d.exif.ExifParser.registerForTagValue(Lcom/android/gallery3d/exif/ExifTag;)V
#NO_CATEGORY com.android.gallery3d.exif.ExifTag.setTimeValue(J)V
#NO_CATEGORY com.android.gallery3d.exif.ExifTag.setValue([B)V
#NO_CATEGORY com.android.gallery3d.exif.ExifTag.setValue(I)V
#NO_CATEGORY com.android.gallery3d.exif.ExifTag.setValue([I)V
#NO_CATEGORY com.android.gallery3d.exif.ExifTag.setValue(Lcom/android/gallery3d/exif/Rational;)V
#NO_CATEGORY com.android.gallery3d.exif.IfdData.setTag(Lcom/android/gallery3d/exif/ExifTag;)V
#NO_CATEGORY com.android.gallery3d.exif.OrderedDataOutputStream.setByteOrder(Ljava/nio/ByteOrder;)V
#NO_CATEGORY com.android.gallery3d.exif.OrderedDataOutputStream.writeInt(I)V
#NO_CATEGORY com.android.gallery3d.exif.OrderedDataOutputStream.writeRational(Lcom/android/gallery3d/exif/Rational;)V
#NO_CATEGORY com.android.gallery3d.exif.OrderedDataOutputStream.writeShort(S)V
#NO_CATEGORY com.android.gallery3d.filtershow.filters.ColorSpaceMatrix.setHue(F)V
#NO_CATEGORY com.android.gallery3d.filtershow.filters.ImageFilterCurves.setSpline(Lcom/android/gallery3d/filtershow/ui/Spline;I)V
#NO_CATEGORY com.android.gallery3d.filtershow.filters.ImageFilterRS.setRenderScriptContext(Landroid/app/Activity;)V
#NO_CATEGORY com.android.gallery3d.filtershow.filters.ScriptC_convolve3x3.bind_gPixels(Landroid/renderscript/Allocation;)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.GeometryMetadata.setCropBounds(Landroid/graphics/RectF;)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.GeometryMetadata.set(Lcom/android/gallery3d/filtershow/imageshow/GeometryMetadata;)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.GeometryMetadata.setPhotoBounds(Landroid/graphics/RectF;)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageCrop.setActionDown(FF)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageCrop.setActionMove(FF)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageCrop.setCropBounds(Landroid/graphics/RectF;)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageFlip.setActionDown(FF)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageFlip.setActionMove(FF)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageGeometry.setLocalCropBounds(Landroid/graphics/RectF;)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageGeometry.setLocalFlip(Lcom/android/gallery3d/filtershow/imageshow/GeometryMetadata$FLIP;)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageGeometry.setLocalRotation(F)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageGeometry.setLocalScale(F)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageGeometry.setLocalStraighten(F)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageRotate.setActionDown(FF)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageRotate.setActionMove(FF)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageShow.onNewValue(I)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageShow.saveImage(Lcom/android/gallery3d/filtershow/FilterShowActivity;Ljava/io/File;)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageShow.setImagePreset(Lcom/android/gallery3d/filtershow/presets/ImagePreset;)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageShow.setOriginalText(Ljava/lang/String;)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageShow.setupGestureDetector(Landroid/content/Context;)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageSlave.setCurrentFilter(Lcom/android/gallery3d/filtershow/filters/ImageFilter;)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageSlave.setImagePreset(Lcom/android/gallery3d/filtershow/presets/ImagePreset;Z)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageSlave.setPanelController(Lcom/android/gallery3d/filtershow/PanelController;)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageSlave.updateImagePresets(Z)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageStraighten.setActionDown(FF)V
#NO_CATEGORY com.android.gallery3d.filtershow.imageshow.ImageStraighten.setActionMove(FF)V
#NO_CATEGORY com.android.gallery3d.filtershow.PanelController.addComponent(Landroid/view/View;Landroid/view/View;)V
#NO_CATEGORY com.android.gallery3d.filtershow.PanelController.addPanel(Landroid/view/View;Landroid/view/View;I)V
#NO_CATEGORY com.android.gallery3d.filtershow.PanelController.addView(Landroid/view/View;)V
#NO_CATEGORY com.android.gallery3d.filtershow.PanelController.setCurrentPanel(Landroid/view/View;)V
#NO_CATEGORY com.android.gallery3d.filtershow.PanelController.setImagePreset(Lcom/android/gallery3d/filtershow/filters/ImageFilter;Ljava/lang/String;)Lcom/android/gallery3d/filtershow/filters/ImageFilter;
#NO_CATEGORY com.android.gallery3d.filtershow.PanelController.setUtilityPanel(Landroid/content/Context;Landroid/view/View;Landroid/view/View;Landroid/view/View;Landroid/view/View;)V
#NO_CATEGORY com.android.gallery3d.filtershow.PanelController$UtilityPanel.setAspectButton(Lcom/android/gallery3d/filtershow/ui/FramedTextButton;I)V
#NO_CATEGORY com.android.gallery3d.filtershow.presets.ImagePreset.setGeometry(Lcom/android/gallery3d/filtershow/imageshow/GeometryMetadata;)V
#NO_CATEGORY com.android.gallery3d.filtershow.tools.SaveCopyTask.insertContent(Landroid/content/Context;Landroid/net/Uri;Ljava/io/File;Ljava/lang/String;)Landroid/net/Uri;
#NO_CATEGORY com.android.gallery3d.filtershow.ui.FramedTextButton.setTextFrom(I)V
#NO_CATEGORY com.android.gallery3d.filtershow.ui.ImageCurves.setChannel(I)V
#NO_CATEGORY com.android.gallery3d.settings.GallerySettings.addAccount(Landroid/app/Activity;Z)V
#NO_CATEGORY com.android.gallery3d.ui.ActionModeHandler.setTitle(Ljava/lang/String;)V
#NO_CATEGORY com.android.gallery3d.ui.AlbumSetSlotRenderer.setModel(Lcom/android/gallery3d/app/AlbumSetDataLoader;)V
#NO_CATEGORY com.android.gallery3d.ui.AlbumSlotRenderer.setModel(Lcom/android/gallery3d/app/AlbumDataLoader;)V
#NO_CATEGORY com.android.gallery3d.ui.BitmapTexture.setOpaque(Z)V
#NO_CATEGORY com.android.gallery3d.ui.CropView$HighlightRectangle.setRectangle(Landroid/graphics/RectF;)V
#NO_CATEGORY com.android.gallery3d.ui.EdgeEffect$Drawable.setBounds(IIII)V
#NO_CATEGORY com.android.gallery3d.ui.GLCanvasImpl$ConfigState.restore(Lcom/android/gallery3d/ui/GLCanvasImpl;)V
#NO_CATEGORY com.android.gallery3d.ui.GLCanvasImpl.drawMixed(Lcom/android/gallery3d/ui/BasicTexture;IFLandroid/graphics/RectF;Landroid/graphics/RectF;)V
#NO_CATEGORY com.android.gallery3d.ui.GLCanvasImpl.drawTexture(Lcom/android/gallery3d/ui/BasicTexture;[FIIII)V
#NO_CATEGORY com.android.gallery3d.ui.GLCanvasImpl.drawTexture(Lcom/android/gallery3d/ui/BasicTexture;Landroid/graphics/RectF;Landroid/graphics/RectF;)V
#NO_CATEGORY com.android.gallery3d.ui.GLCanvasImpl$GLState.setColorMode(IF)V
#NO_CATEGORY com.android.gallery3d.ui.GLRootView.setLightsOutMode(Z)V
#NO_CATEGORY com.android.gallery3d.ui.GLView.setVisibility(I)V
#NO_CATEGORY com.android.gallery3d.ui.MenuExecutor.startAction(IILcom/android/gallery3d/ui/MenuExecutor$ProgressListener;)V
#NO_CATEGORY com.android.gallery3d.ui.PhotoView$FullPicture.setScreenNail(Lcom/android/gallery3d/ui/ScreenNail;)V
#NO_CATEGORY com.android.gallery3d.ui.PhotoView$MyGestureListener.setSwipingEnabled(Z)V
#NO_CATEGORY com.android.gallery3d.ui.PhotoView.notifyDataChange([III)V
#NO_CATEGORY com.android.gallery3d.ui.PhotoView.notifyImageChange(I)V
#NO_CATEGORY com.android.gallery3d.ui.PhotoView.setSwipingEnabled(Z)V
#NO_CATEGORY com.android.gallery3d.ui.PositionController.moveBox([IZZZ[Lcom/android/gallery3d/ui/PhotoView$Size;)V
#NO_CATEGORY com.android.gallery3d.ui.PositionController.setConstrainedFrame(Landroid/graphics/Rect;)V
#NO_CATEGORY com.android.gallery3d.ui.PositionController.setImageSize(ILcom/android/gallery3d/ui/PhotoView$Size;Landroid/graphics/Rect;)V
#NO_CATEGORY com.android.gallery3d.ui.PositionController.setViewSize(II)V
#NO_CATEGORY com.android.gallery3d.ui.PositionController.zoomIn(FFF)V
#NO_CATEGORY com.android.gallery3d.ui.PreparePageFadeoutTexture.prepareFadeOutTexture(Lcom/android/gallery3d/app/AbstractGalleryActivity;Lcom/android/gallery3d/ui/GLView;)V
#NO_CATEGORY com.android.gallery3d.ui.RelativePosition.setReferencePosition(II)V
#NO_CATEGORY com.android.gallery3d.ui.ResourceTexture.setOpaque(Z)V
#NO_CATEGORY com.android.gallery3d.ui.ScrollerHelper.setPosition(I)V
#NO_CATEGORY com.android.gallery3d.ui.SlotView.setCenterIndex(I)V
#NO_CATEGORY com.android.gallery3d.ui.SlotView.setScrollPosition(I)V
#NO_CATEGORY com.android.gallery3d.ui.SlotView.setSlotCount(I)Z
#NO_CATEGORY com.android.gallery3d.ui.SlotView.setSlotSpec(Lcom/android/gallery3d/ui/SlotView$Spec;)V
#NO_CATEGORY com.android.gallery3d.ui.TileImageViewAdapter.setRegionDecoder(Landroid/graphics/BitmapRegionDecoder;)V
#NO_CATEGORY com.android.gallery3d.ui.UndoBarView.setVisibility(I)V
#NO_CATEGORY com.android.gallery3d.util.GalleryUtils.isEditorAvailable(Landroid/content/Context;Ljava/lang/String;)Z
#NO_CATEGORY com.android.gallery3d.util.IdentityCache.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY com.android.gallery3d.util.InterruptableOutputStream.write([BII)V
#NO_CATEGORY com.android.gallery3d.util.InterruptableOutputStream.write(I)V
#NO_CATEGORY com.android.gallery3d.util.ReverseGeocoder.lookupAddress(DDZ)Landroid/location/Address;
#NO_CATEGORY com.android.gallery3d.util.ReverseGeocoder.writeUTF(Ljava/io/DataOutputStream;Ljava/lang/String;)V
#NO_CATEGORY com.android.gallery3d.util.ThreadPool$JobContextStub.setMode(I)Z
#NO_CATEGORY com.android.gallery3d.util.XmpUtilHelper.writeXMPMeta(Ljava/lang/String;Ljava/lang/Object;)Z
NO_CATEGORY com.android.htmlviewer.HTMLViewerActivity.onCreate(Landroid/os/Bundle;)V
NO_CATEGORY com.android.i18n.phonenumbers.geocoding.AreaCodeMap.writeExternal(Ljava/io/ObjectOutput;)V
NO_CATEGORY com.android.i18n.phonenumbers.geocoding.FlyweightMapStorage.writeExternal(Ljava/io/ObjectOutput;)V
NO_CATEGORY com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection.writeExternal(Ljava/io/ObjectOutput;)V
NO_CATEGORY com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata.writeExternal(Ljava/io/ObjectOutput;)V
NO_CATEGORY com.android.i18n.phonenumbers.PhoneNumberUtil.maybeExtractCountryCode(Ljava/lang/String;Lcom/android/i18n/phonenumbers/Phonemetadata$PhoneMetadata;Ljava/lang/StringBuilder;ZLcom/android/i18n/phonenumbers/Phonenumber$PhoneNumber;)I
NO_CATEGORY com.android.i18n.phonenumbers.RegexCache$LRUCache.put(Ljava/lang/Object;Ljava/lang/Object;)V
#NO_CATEGORY com.android.inputmethod.accessibility.AccessibilityEntityProvider.performAction(IILandroid/os/Bundle;)Z android.permission.READ_SOCIAL_STREAM android.permission.VIBRATE android.permission.READ_CONTACTS android.permission.READ_USER_DICTIONARY android.permission.WRITE_CONTACTS 
#NO_CATEGORY com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy.setKeyboard(Lcom/android/inputmethod/keyboard/Keyboard;)V
#NO_CATEGORY com.android.inputmethodcommon.InputMethodSettingsFragment.setInputMethodSettingsCategoryTitle(I)V
#NO_CATEGORY com.android.inputmethodcommon.InputMethodSettingsFragment.setSubtypeEnablerTitle(I)V
#NO_CATEGORY com.android.inputmethod.compat.InputMethodManagerCompatWrapper.setInputMethodAndSubtype(Landroid/os/IBinder;Ljava/lang/String;Landroid/view/inputmethod/InputMethodSubtype;)V
#NO_CATEGORY com.android.inputmethod.keyboard.internal.AlphabetShiftState.setShifted(Z)V
#NO_CATEGORY com.android.inputmethod.keyboard.internal.AlphabetShiftState.setShiftLocked(Z)V
#NO_CATEGORY com.android.inputmethod.keyboard.internal.GestureStrokeWithPreviewPoints.setKeyboardGeometry(I)V
#NO_CATEGORY com.android.inputmethod.keyboard.internal.KeyboardCodesSet.setLanguage(Ljava/lang/String;)V
#NO_CATEGORY com.android.inputmethod.keyboard.internal.KeyboardTextsSet.loadStringResourcesInternal(Landroid/content/Context;[Ljava/lang/String;I)V
#NO_CATEGORY com.android.inputmethod.keyboard.internal.KeyboardTextsSet.setLanguage(Ljava/lang/String;)V
#NO_CATEGORY com.android.inputmethod.keyboard.internal.KeyStylesSet.parseKeyStyleAttributes(Landroid/content/res/TypedArray;Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;)V
#NO_CATEGORY com.android.inputmethod.keyboard.internal.PreviewPlacerView.invalidatePointer(Lcom/android/inputmethod/keyboard/PointerTracker;Z)V
#NO_CATEGORY com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder.setSubtype(Landroid/view/inputmethod/InputMethodSubtype;)Lcom/android/inputmethod/keyboard/KeyboardLayoutSet$Builder;
#NO_CATEGORY com.android.inputmethod.keyboard.KeyboardSwitcher.startLongPressTimer(I)V
#NO_CATEGORY com.android.inputmethod.keyboard.KeyboardView.setGesturePreviewMode(ZZ)V
#NO_CATEGORY com.android.inputmethod.keyboard.MainKeyboardView$KeyTimerHandler.startKeyRepeatTimer(Lcom/android/inputmethod/keyboard/PointerTracker;)V
#NO_CATEGORY com.android.inputmethod.keyboard.MainKeyboardView.setGestureHandlingEnabledByUser(Z)V
#NO_CATEGORY com.android.inputmethod.keyboard.MainKeyboardView.setKeyboard(Lcom/android/inputmethod/keyboard/Keyboard;)V
#NO_CATEGORY com.android.inputmethod.keyboard.MainKeyboardView.setMainDictionaryAvailability(Z)V
#NO_CATEGORY com.android.inputmethod.keyboard.MoreKeysKeyboardView.setKeyboard(Lcom/android/inputmethod/keyboard/Keyboard;)V
#NO_CATEGORY com.android.inputmethod.keyboard.MoreKeysKeyboardView.setKeyPreviewPopupEnabled(ZI)V
#NO_CATEGORY com.android.inputmethod.keyboard.PointerTracker$BogusMoveEventDetector.setKeyboardGeometry(II)V
#NO_CATEGORY com.android.inputmethod.keyboard.PointerTracker.setKeyDetector(Lcom/android/inputmethod/keyboard/KeyDetector;)V
#NO_CATEGORY com.android.inputmethod.latin.ExpandableBinaryDictionary.setBigram(Ljava/lang/String;Ljava/lang/String;I)V
#NO_CATEGORY com.android.inputmethod.latin.ExpandableDictionary.setBigramAndGetFrequency(Ljava/lang/String;Ljava/lang/String;Lcom/android/inputmethod/latin/UserHistoryForgettingCurveUtils$ForgettingCurveParams;)I
#NO_CATEGORY com.android.inputmethod.latin.ImfUtils.setAdditionalInputMethodSubtypes(Landroid/content/Context;[Landroid/view/inputmethod/InputMethodSubtype;)V
#NO_CATEGORY com.android.inputmethod.latin.InputPointers.set(Lcom/android/inputmethod/latin/InputPointers;)V
#NO_CATEGORY com.android.inputmethod.latin.LatinIME$BatchInputUpdater.handleMessage(Landroid/os/Message;)Z
#NO_CATEGORY com.android.inputmethod.latin.LatinImeLogger.onAddSuggestedWord(Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY com.android.inputmethod.latin.LatinImeLogger.onStartInputView(Landroid/view/inputmethod/EditorInfo;)V
#NO_CATEGORY com.android.inputmethod.latin.LatinIME.setCandidatesView(Landroid/view/View;)V
#NO_CATEGORY com.android.inputmethod.latin.LatinIME.setInputView(Landroid/view/View;)V
#NO_CATEGORY com.android.inputmethod.latin.LocaleUtils.constructLocaleFromString(Ljava/lang/String;)Ljava/util/Locale;
#NO_CATEGORY com.android.inputmethod.latin.LocaleUtils.localeAndTimeStrToHashMap(Ljava/lang/String;)Ljava/util/HashMap;
#NO_CATEGORY com.android.inputmethod.latin.makedict.BinaryDictInputOutput$CharEncoding.access$400(Ljava/io/ByteArrayOutputStream;Ljava/lang/String;)V
#NO_CATEGORY com.android.inputmethod.latin.makedict.BinaryDictInputOutput.writeDictionaryBinary(Ljava/io/OutputStream;Lcom/android/inputmethod/latin/makedict/FusionDictionary;Lcom/android/inputmethod/latin/makedict/FormatSpec$FormatOptions;)V
#NO_CATEGORY com.android.inputmethod.latin.makedict.FusionDictionary$CharGroup.addBigram(Ljava/lang/String;I)V
#NO_CATEGORY com.android.inputmethod.latin.makedict.FusionDictionary.setBigram(Ljava/lang/String;Ljava/lang/String;I)V
#NO_CATEGORY com.android.inputmethod.latin.ResizableIntArray.set(Lcom/android/inputmethod/latin/ResizableIntArray;)V
#NO_CATEGORY com.android.inputmethod.latin.RichInputConnection.performEditorAction(I)V
#NO_CATEGORY com.android.inputmethod.latin.RichInputConnection.sendKeyEvent(Landroid/view/KeyEvent;)V
#NO_CATEGORY com.android.inputmethod.latin.SettingsValues.setLastUserHistoryWriteTime(Landroid/content/SharedPreferences;Ljava/lang/String;)V
#NO_CATEGORY com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService.createDictAndProximity(Ljava/util/Locale;)Lcom/android/inputmethod/latin/spellcheck/DictAndProximity;
#NO_CATEGORY com.android.inputmethod.latin.spellcheck.AndroidWordLevelSpellCheckerSession$SuggestionsCache.putSuggestionsToCache(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;I)V
#NO_CATEGORY com.android.inputmethod.latin.SubtypeLocale.init(Landroid/content/Context;)V
#NO_CATEGORY com.android.inputmethod.latin.suggestions.MoreSuggestionsView.setKeyboard(Lcom/android/inputmethod/keyboard/Keyboard;)V
#NO_CATEGORY com.android.inputmethod.latin.suggestions.MoreSuggestionsView.setKeyPreviewPopupEnabled(ZI)V
#NO_CATEGORY com.android.inputmethod.latin.suggestions.MoreSuggestionsView.updateKeyboardGeometry(I)V
#NO_CATEGORY com.android.inputmethod.latin.suggestions.SuggestionStripView.setMoreSuggestionsHeight(I)I
#NO_CATEGORY com.android.inputmethod.latin.suggestions.SuggestionStripView$SuggestionStripViewParams.setMoreSuggestionsHeight(I)I
#NO_CATEGORY com.android.inputmethod.latin.Suggest.setUserDictionary(Lcom/android/inputmethod/latin/UserBinaryDictionary;)V
#NO_CATEGORY com.android.inputmethod.latin.Suggest.setUserHistoryDictionary(Lcom/android/inputmethod/latin/UserHistoryDictionary;)V
#NO_CATEGORY com.android.inputmethod.latin.TargetApplicationGetter.doInBackground([Ljava/lang/String;)Landroid/content/pm/ApplicationInfo;
#NO_CATEGORY com.android.inputmethod.latin.UserBinaryDictionary.addWordToUserDictionary(Ljava/lang/String;I)V
#NO_CATEGORY com.android.inputmethod.latin.UserHistoryDictionary$1.setBigram(Ljava/lang/String;Ljava/lang/String;I)V
#NO_CATEGORY com.android.inputmethod.latin.UserHistoryDictionary$1.setUnigram(Ljava/lang/String;Ljava/lang/String;I)V
#NO_CATEGORY com.android.inputmethod.latin.UserHistoryDictionaryBigramList.addBigram(Ljava/lang/String;Ljava/lang/String;B)V
#NO_CATEGORY com.android.inputmethod.latin.UserHistoryDictionaryBigramList.updateBigram(Ljava/lang/String;Ljava/lang/String;B)V
#NO_CATEGORY com.android.inputmethod.latin.WordComposer.setBatchInputPointers(Lcom/android/inputmethod/latin/InputPointers;)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl$ActionModeImpl.setCustomView(Landroid/view/View;)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl$ActionModeImpl.setSubtitle(I)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl$ActionModeImpl.setTitle(I)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl$ActionModeImpl.setTitleOptionalHint(Z)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setBackgroundDrawable(Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setCustomView(I)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setCustomView(Landroid/view/View;Landroid/app/ActionBar$LayoutParams;)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setCustomView(Landroid/view/View;)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setDefaultDisplayHomeAsUpEnabled(Z)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setDisplayHomeAsUpEnabled(Z)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setDisplayOptions(II)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setDisplayOptions(I)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setDisplayShowCustomEnabled(Z)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setDisplayShowHomeEnabled(Z)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setDisplayShowTitleEnabled(Z)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setDisplayUseLogoEnabled(Z)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setHomeButtonEnabled(Z)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setIcon(I)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setIcon(Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setLogo(I)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setLogo(Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setNavigationMode(I)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setSelectedNavigationItem(I)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setSplitBackgroundDrawable(Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setStackedBackgroundDrawable(Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setSubtitle(I)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl.setTitle(I)V
#NO_CATEGORY com.android.internal.app.ActionBarImpl$TabImpl.setContentDescription(I)Landroid/app/ActionBar$Tab;
#NO_CATEGORY com.android.internal.app.ActionBarImpl$TabImpl.setCustomView(I)Landroid/app/ActionBar$Tab;
#NO_CATEGORY com.android.internal.app.ActionBarImpl$TabImpl.setIcon(I)Landroid/app/ActionBar$Tab;
#NO_CATEGORY com.android.internal.app.ActionBarImpl$TabImpl.setText(I)Landroid/app/ActionBar$Tab;
#NO_CATEGORY com.android.internal.app.HeavyWeightSwitcherActivity.setDrawable(ILandroid/graphics/drawable/Drawable;)V
#NO_CATEGORY com.android.internal.app.HeavyWeightSwitcherActivity.setIconAndText(IIILjava/lang/String;II)V
#NO_CATEGORY com.android.internal.app.HeavyWeightSwitcherActivity.setText(ILjava/lang/CharSequence;)V
#NO_CATEGORY com.android.internal.app.IBatteryStats$Stub$Proxy.noteFullWifiLockAcquired(I)V
#NO_CATEGORY com.android.internal.app.IBatteryStats$Stub$Proxy.noteFullWifiLockReleased(I)V
#NO_CATEGORY com.android.internal.app.IBatteryStats$Stub$Proxy.noteNetworkInterfaceType(Ljava/lang/String;I)V
#NO_CATEGORY com.android.internal.app.IBatteryStats$Stub$Proxy.notePhoneDataConnectionState(IZ)V
#NO_CATEGORY com.android.internal.app.IBatteryStats$Stub$Proxy.notePhoneState(I)V
#NO_CATEGORY com.android.internal.app.IBatteryStats$Stub$Proxy.noteScreenBrightness(I)V
#NO_CATEGORY com.android.internal.app.IBatteryStats$Stub$Proxy.noteStartGps(I)V
#NO_CATEGORY com.android.internal.app.IBatteryStats$Stub$Proxy.noteStartSensor(II)V
#NO_CATEGORY com.android.internal.app.IBatteryStats$Stub$Proxy.noteStartWakelockFromSource(Landroid/os/WorkSource;ILjava/lang/String;I)V
#NO_CATEGORY com.android.internal.app.IBatteryStats$Stub$Proxy.noteStartWakelock(IILjava/lang/String;I)V
#NO_CATEGORY com.android.internal.app.IBatteryStats$Stub$Proxy.noteStopGps(I)V
#NO_CATEGORY com.android.internal.app.IBatteryStats$Stub$Proxy.noteStopSensor(II)V
#NO_CATEGORY com.android.internal.app.IBatteryStats$Stub$Proxy.noteStopWakelockFromSource(Landroid/os/WorkSource;ILjava/lang/String;I)V android.permission.STOP_APP_SWITCHES 
#NO_CATEGORY com.android.internal.app.IBatteryStats$Stub$Proxy.noteStopWakelock(IILjava/lang/String;I)V
#NO_CATEGORY com.android.internal.app.IBatteryStats$Stub$Proxy.noteUserActivity(II)V
#NO_CATEGORY com.android.internal.app.IBatteryStats$Stub$Proxy.noteWifiMulticastDisabled(I)V
#NO_CATEGORY com.android.internal.app.IBatteryStats$Stub$Proxy.noteWifiMulticastEnabled(I)V
#NO_CATEGORY com.android.internal.app.IBatteryStats$Stub$Proxy.noteWifiScanStarted(I)V
#NO_CATEGORY com.android.internal.app.IBatteryStats$Stub$Proxy.noteWifiScanStopped(I)V
#NO_CATEGORY com.android.internal.app.IBatteryStats$Stub$Proxy.setBatteryState(IIIIII)V
#NO_CATEGORY com.android.internal.app.IMediaContainerService$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY com.android.internal.app.IMediaContainerService$Stub$Proxy.calculateDirectorySize(Ljava/lang/String;)J
#NO_CATEGORY com.android.internal.app.IMediaContainerService$Stub$Proxy.calculateInstalledSize(Ljava/lang/String;Z)J
#NO_CATEGORY com.android.internal.app.IMediaContainerService$Stub$Proxy.checkInternalFreeStorage(Landroid/net/Uri;ZJ)Z
#NO_CATEGORY com.android.internal.app.IMediaContainerService$Stub$Proxy.clearDirectory(Ljava/lang/String;)V
#NO_CATEGORY com.android.internal.app.IMediaContainerService$Stub$Proxy.copyResourceToContainer(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/lang/String;
#NO_CATEGORY com.android.internal.app.IUsageStats$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY com.android.internal.app.IUsageStats$Stub$Proxy.noteLaunchTime(Landroid/content/ComponentName;I)V
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy.providerChanged(ILandroid/appwidget/AppWidgetProviderInfo;)V
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy.updateAppWidget(ILandroid/widget/RemoteViews;)V
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy.viewDataChanged(II)V
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetService$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.allocateAppWidgetId(Ljava/lang/String;I)I
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.bindAppWidgetIdIfAllowed(Ljava/lang/String;ILandroid/content/ComponentName;Landroid/os/Bundle;)Z
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.bindAppWidgetId(ILandroid/content/ComponentName;Landroid/os/Bundle;)V
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.bindRemoteViewsService(ILandroid/content/Intent;Landroid/os/IBinder;I)V
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.deleteAppWidgetId(I)V
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.deleteHost(I)V
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.hasBindAppWidgetPermission(Ljava/lang/String;)Z
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.notifyAppWidgetViewDataChanged([II)V
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.partiallyUpdateAppWidgetIds([ILandroid/widget/RemoteViews;)V
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.setBindAppWidgetPermission(Ljava/lang/String;Z)V
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.startListeningAsUser(Lcom/android/internal/appwidget/IAppWidgetHost;Ljava/lang/String;ILjava/util/List;I)[I
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.startListening(Lcom/android/internal/appwidget/IAppWidgetHost;Ljava/lang/String;ILjava/util/List;)[I
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.stopListeningAsUser(II)V
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.stopListening(I)V
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.unbindRemoteViewsService(ILandroid/content/Intent;I)V
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.updateAppWidgetIds([ILandroid/widget/RemoteViews;)V
#NO_CATEGORY com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.updateAppWidgetOptions(ILandroid/os/Bundle;)V
NO_CATEGORY com.android.internal.backup.IBackupTransport$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY com.android.internal.backup.IBackupTransport$Stub$Proxy.startRestore(J[Landroid/content/pm/PackageInfo;)I
NO_CATEGORY com.android.internal.location.ILocationProvider$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY com.android.internal.location.ILocationProvider$Stub$Proxy.sendExtraCommand(Ljava/lang/String;Landroid/os/Bundle;)Z
NO_CATEGORY com.android.internal.location.ILocationProvider$Stub$Proxy.setRequest(Lcom/android/internal/location/ProviderRequest;Landroid/os/WorkSource;)V
NO_CATEGORY com.android.internal.location.ProviderRequest.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY com.android.internal.logging.AndroidHandler$1.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;
NO_CATEGORY com.android.internal.net.LegacyVpnInfo.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY com.android.internal.net.VpnConfig.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl$Counter.logState(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl$Counter.writeCounterToParcel(Landroid/os/Parcel;Lcom/android/internal/os/BatteryStatsImpl$Counter;)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl.dumpLocked(Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl.readFromParcelLocked(Landroid/os/Parcel;)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl$SamplingTimer.logState(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl$SamplingTimer.writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl$SamplingTimer.writeToParcel(Landroid/os/Parcel;J)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl.setNumSpeedSteps(I)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl.setOnBattery(ZII)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl.setRadioScanningTimeout(J)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl$StopwatchTimer.logState(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl$StopwatchTimer.writeToParcel(Landroid/os/Parcel;J)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl$Timer.logState(Landroid/util/Printer;Ljava/lang/String;)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl$Timer.writeTimerToParcel(Landroid/os/Parcel;Lcom/android/internal/os/BatteryStatsImpl$Timer;J)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl$Uid$Pkg.readFromParcelLocked(Landroid/os/Parcel;)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl$Uid$Pkg.writeToParcelLocked(Landroid/os/Parcel;)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl$Uid$Proc.writeToParcelLocked(Landroid/os/Parcel;)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl$Uid.readFromParcelLocked(Ljava/util/ArrayList;Landroid/os/Parcel;)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl$Uid$Sensor.writeToParcelLocked(Landroid/os/Parcel;J)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl$Uid$Wakelock.writeToParcelLocked(Landroid/os/Parcel;J)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl$Uid.writeToParcelLocked(Landroid/os/Parcel;J)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl.writeHistory(Landroid/os/Parcel;Z)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl.writeSummaryToParcel(Landroid/os/Parcel;)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl.writeToParcelLocked(Landroid/os/Parcel;ZI)V
NO_CATEGORY com.android.internal.os.BatteryStatsImpl.writeToParcelWithoutUids(Landroid/os/Parcel;I)V
NO_CATEGORY com.android.internal.os.BinderInternal.forceGc(Ljava/lang/String;)V
NO_CATEGORY com.android.internal.os.HandlerCaller.sendMessage(Landroid/os/Message;)V
NO_CATEGORY com.android.internal.os.IDropBoxManagerService$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY com.android.internal.os.IDropBoxManagerService$Stub$Proxy.isTagEnabled(Ljava/lang/String;)Z
NO_CATEGORY com.android.internal.os.IResultReceiver$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY com.android.internal.os.IResultReceiver$Stub$Proxy.send(ILandroid/os/Bundle;)V
NO_CATEGORY com.android.internal.os.LoggingPrintStream.write([BII)V
NO_CATEGORY com.android.internal.os.LoggingPrintStream.write([B)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.ClockView$AmPm.setIsMorning(Z)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.ClockView$AmPm.setShowAmPm(Z)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardActivityLauncher.launchWidgetPicker(I)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardCircleFramedDrawable.setAlpha(I)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardCircleFramedDrawable.setColorFilter(Landroid/graphics/ColorFilter;)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardHostView$SavedState.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardLinearLayout.setTopChild(Landroid/view/View;)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardMessageArea$Helper.setMessage(IZ[Ljava/lang/Object;)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardMessageArea$Helper.setMessage(IZ)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardMessageArea$Helper.setTimeout(I)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardMultiUserAvatar.setActive(ZZLjava/lang/Runnable;)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardMultiUserAvatar.setPressed(Z)V android.permission.STOP_APP_SWITCHES 
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardSecurityViewFlipper.setLockPatternUtils(Lcom/android/internal/widget/LockPatternUtils;)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak.setAllMetadata(ILandroid/os/Bundle;Landroid/graphics/Bitmap;)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak.setArtwork(ILandroid/graphics/Bitmap;)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak.setCurrentClientId(ILandroid/app/PendingIntent;Z)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak.setMetadata(ILandroid/os/Bundle;)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak.setPlaybackState(IIJ)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak.setTransportControlFlags(II)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$SavedState.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor.sendKeyguardVisibilityChanged(Z)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardViewMediator$2.setNeedsInput(Z)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardViewMediator.setCurrentUser(I)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardViewMediator.setHidden(Z)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardWidgetPager.addWidget(Landroid/view/View;I)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardWidgetPager.sendAccessibilityEvent(I)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardWidgetPager.setCurrentPage(I)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.KeyguardWidgetPager.setPageHoveringOverDeleteDropTarget(IZ)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.PagedView.performAccessibilityAction(ILandroid/os/Bundle;)Z
NO_CATEGORY com.android.internal.policy.impl.keyguard.PagedView$SavedState.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.PagedView.setCurrentPage(I)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.PagedView.setScaleX(F)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.PagedView.snapToPage(IIIZ)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.SlidingChallengeLayout$1.setValue(Ljava/lang/Object;F)V
NO_CATEGORY com.android.internal.policy.impl.keyguard.SlidingChallengeLayout.setHandleAlpha(F)V
NO_CATEGORY com.android.internal.policy.impl.PhoneFallbackEventHandler.onKeyDown(ILandroid/view/KeyEvent;)Z
NO_CATEGORY com.android.internal.policy.impl.PhoneWindowManager.dump(Ljava/lang/String;Ljava/io/PrintWriter;[Ljava/lang/String;)V
NO_CATEGORY com.android.internal.policy.impl.PhoneWindowManager.enableKeyguard(Z)V
NO_CATEGORY com.android.internal.policy.impl.PhoneWindowManager.notifyLidSwitchChanged(JZ)V
NO_CATEGORY com.android.internal.policy.impl.PhoneWindowManager.sendCloseSystemWindows(Ljava/lang/String;)V
NO_CATEGORY com.android.internal.policy.impl.PhoneWindowManager.setAttachedWindowFrames(Landroid/view/WindowManagerPolicy$WindowState;IILandroid/view/WindowManagerPolicy$WindowState;ZLandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V
NO_CATEGORY com.android.internal.policy.impl.PhoneWindowManager.setCurrentUserLw(I)V
NO_CATEGORY com.android.internal.policy.impl.PhoneWindowManager.setHdmiPlugged(Z)V
NO_CATEGORY com.android.internal.policy.impl.PhoneWindowManager.setRotationLw(I)V
NO_CATEGORY com.android.internal.policy.impl.PhoneWindowManager.setUserRotationMode(II)V
NO_CATEGORY com.android.internal.preference.YesNoPreference$SavedState.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY com.android.internal.statusbar.IStatusBarService$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY com.android.internal.statusbar.IStatusBarService$Stub$Proxy.disable(ILandroid/os/IBinder;Ljava/lang/String;)V
NO_CATEGORY com.android.internal.statusbar.IStatusBarService$Stub$Proxy.onNotificationClear(Ljava/lang/String;Ljava/lang/String;I)V
NO_CATEGORY com.android.internal.statusbar.IStatusBarService$Stub$Proxy.onNotificationClick(Ljava/lang/String;Ljava/lang/String;I)V
NO_CATEGORY com.android.internal.statusbar.IStatusBarService$Stub$Proxy.onNotificationError(Ljava/lang/String;Ljava/lang/String;IIILjava/lang/String;)V
NO_CATEGORY com.android.internal.statusbar.IStatusBarService$Stub$Proxy.registerStatusBar(Lcom/android/internal/statusbar/IStatusBar;Lcom/android/internal/statusbar/StatusBarIconList;Ljava/util/List;Ljava/util/List;[ILjava/util/List;)V
NO_CATEGORY com.android.internal.statusbar.IStatusBarService$Stub$Proxy.removeIcon(Ljava/lang/String;)V
NO_CATEGORY com.android.internal.statusbar.IStatusBarService$Stub$Proxy.setCurrentUser(I)V
NO_CATEGORY com.android.internal.statusbar.IStatusBarService$Stub$Proxy.setHardKeyboardEnabled(Z)V
NO_CATEGORY com.android.internal.statusbar.IStatusBarService$Stub$Proxy.setIcon(Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;)V
NO_CATEGORY com.android.internal.statusbar.IStatusBarService$Stub$Proxy.setIconVisibility(Ljava/lang/String;Z)V
NO_CATEGORY com.android.internal.statusbar.IStatusBarService$Stub$Proxy.setImeWindowStatus(Landroid/os/IBinder;II)V
NO_CATEGORY com.android.internal.statusbar.IStatusBarService$Stub$Proxy.setSystemUiVisibility(II)V
NO_CATEGORY com.android.internal.statusbar.IStatusBar$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY com.android.internal.statusbar.IStatusBar$Stub$Proxy.addNotification(Landroid/os/IBinder;Lcom/android/internal/statusbar/StatusBarNotification;)V
NO_CATEGORY com.android.internal.statusbar.IStatusBar$Stub$Proxy.disable(I)V
NO_CATEGORY com.android.internal.statusbar.IStatusBar$Stub$Proxy.removeIcon(I)V
NO_CATEGORY com.android.internal.statusbar.IStatusBar$Stub$Proxy.removeNotification(Landroid/os/IBinder;)V
NO_CATEGORY com.android.internal.statusbar.IStatusBar$Stub$Proxy.setHardKeyboardStatus(ZZ)V
NO_CATEGORY com.android.internal.statusbar.IStatusBar$Stub$Proxy.setIcon(ILcom/android/internal/statusbar/StatusBarIcon;)V
NO_CATEGORY com.android.internal.statusbar.IStatusBar$Stub$Proxy.setImeWindowStatus(Landroid/os/IBinder;II)V
NO_CATEGORY com.android.internal.statusbar.IStatusBar$Stub$Proxy.setSystemUiVisibility(II)V
NO_CATEGORY com.android.internal.statusbar.IStatusBar$Stub$Proxy.updateNotification(Landroid/os/IBinder;Lcom/android/internal/statusbar/StatusBarNotification;)V
NO_CATEGORY com.android.internal.statusbar.StatusBarIconList.setIcon(ILcom/android/internal/statusbar/StatusBarIcon;)V
NO_CATEGORY com.android.internal.statusbar.StatusBarIconList.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY com.android.internal.statusbar.StatusBarNotification.writeToParcel(Landroid/os/Parcel;I)V
NO_CATEGORY com.android.internal.textservice.ISpellCheckerService$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY com.android.internal.textservice.ISpellCheckerSessionListener$Stub$Proxy.onGetSentenceSuggestions([Landroid/view/textservice/SentenceSuggestionsInfo;)V
NO_CATEGORY com.android.internal.textservice.ISpellCheckerSessionListener$Stub$Proxy.onGetSuggestions([Landroid/view/textservice/SuggestionsInfo;)V
NO_CATEGORY com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy.onGetSentenceSuggestionsMultiple([Landroid/view/textservice/TextInfo;I)V
NO_CATEGORY com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy.onGetSuggestionsMultiple([Landroid/view/textservice/TextInfo;IZ)V
NO_CATEGORY com.android.internal.textservice.ITextServicesManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
NO_CATEGORY com.android.internal.textservice.ITextServicesManager$Stub$Proxy.finishSpellCheckerService(Lcom/android/internal/textservice/ISpellCheckerSessionListener;)V
NO_CATEGORY com.android.internal.textservice.ITextServicesManager$Stub$Proxy.setCurrentSpellChecker(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY com.android.internal.textservice.ITextServicesManager$Stub$Proxy.setCurrentSpellCheckerSubtype(Ljava/lang/String;I)V
NO_CATEGORY com.android.internal.textservice.ITextServicesManager$Stub$Proxy.setSpellCheckerEnabled(Z)V
NO_CATEGORY com.android.internal.textservice.ITextServicesSessionListener$Stub$Proxy.onServiceConnected(Lcom/android/internal/textservice/ISpellCheckerSession;)V
NO_CATEGORY com.android.internal.util.AsyncChannel.sendMessage(IIILjava/lang/Object;)V
NO_CATEGORY com.android.internal.util.AsyncChannel.sendMessage(III)V
NO_CATEGORY com.android.internal.util.AsyncChannel.sendMessage(II)V
NO_CATEGORY com.android.internal.util.AsyncChannel.sendMessage(ILjava/lang/Object;)V
NO_CATEGORY com.android.internal.util.AsyncChannel.sendMessage(I)V
NO_CATEGORY com.android.internal.util.AsyncChannel.sendMessage(Landroid/os/Message;)V
NO_CATEGORY com.android.internal.util.FastXmlSerializer.setFeature(Ljava/lang/String;Z)V
NO_CATEGORY com.android.internal.util.FastXmlSerializer.setOutput(Ljava/io/OutputStream;Ljava/lang/String;)V
NO_CATEGORY com.android.internal.util.FastXmlSerializer.setPrefix(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY com.android.internal.util.FastXmlSerializer.setProperty(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY com.android.internal.util.FileRotator$1.write(Ljava/io/OutputStream;)V
NO_CATEGORY com.android.internal.util.IndentingPrintWriter.write([CII)V
NO_CATEGORY com.android.internal.util.LocalLog.dump(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)Z
NO_CATEGORY com.android.internal.util.StateMachine.sendMessageAtFrontOfQueue(Landroid/os/Message;)V
NO_CATEGORY com.android.internal.util.StateMachine.sendMessageDelayed(IJ)V
NO_CATEGORY com.android.internal.util.StateMachine.sendMessageDelayed(ILjava/lang/Object;J)V
NO_CATEGORY com.android.internal.util.StateMachine.sendMessageDelayed(Landroid/os/Message;J)V
NO_CATEGORY com.android.internal.util.StateMachine.sendMessage(Landroid/os/Message;)V
NO_CATEGORY com.android.internal.util.StateMachine.setDbg(Z)V
NO_CATEGORY com.android.internal.util.StateMachine.setLogRecSize(I)V
NO_CATEGORY com.android.internal.util.StateMachine$SmHandler$HaltingState.processMessage(Landroid/os/Message;)Z
NO_CATEGORY com.android.internal.util.StateMachine$SmHandler$QuittingState.processMessage(Landroid/os/Message;)Z
NO_CATEGORY com.android.internal.util.XmlUtils.writeValueXml(Ljava/lang/Object;Ljava/lang/String;Lorg/xmlpull/v1/XmlSerializer;)V
#NO_CATEGORY com.android.internal.view.IInputConnectionWrapper.dispatchMessage(Landroid/os/Message;)V
#NO_CATEGORY com.android.internal.view.IInputConnectionWrapper.setComposingRegion(II)V
#NO_CATEGORY com.android.internal.view.IInputConnectionWrapper.setSelection(II)V
#NO_CATEGORY com.android.internal.view.IInputContextCallback$Stub$Proxy.setCursorCapsMode(II)V
#NO_CATEGORY com.android.internal.view.IInputContextCallback$Stub$Proxy.setExtractedText(Landroid/view/inputmethod/ExtractedText;I)V
#NO_CATEGORY com.android.internal.view.IInputContextCallback$Stub$Proxy.setSelectedText(Ljava/lang/CharSequence;I)V
#NO_CATEGORY com.android.internal.view.IInputContextCallback$Stub$Proxy.setTextAfterCursor(Ljava/lang/CharSequence;I)V
#NO_CATEGORY com.android.internal.view.IInputContextCallback$Stub$Proxy.setTextBeforeCursor(Ljava/lang/CharSequence;I)V
#NO_CATEGORY com.android.internal.view.IInputContext$Stub$Proxy.clearMetaKeyStates(I)V
#NO_CATEGORY com.android.internal.view.IInputContext$Stub$Proxy.commitText(Ljava/lang/CharSequence;I)V
#NO_CATEGORY com.android.internal.view.IInputContext$Stub$Proxy.deleteSurroundingText(II)V
#NO_CATEGORY com.android.internal.view.IInputContext$Stub$Proxy.performContextMenuAction(I)V
#NO_CATEGORY com.android.internal.view.IInputContext$Stub$Proxy.performEditorAction(I)V
#NO_CATEGORY com.android.internal.view.IInputContext$Stub$Proxy.performPrivateCommand(Ljava/lang/String;Landroid/os/Bundle;)V
#NO_CATEGORY com.android.internal.view.IInputContext$Stub$Proxy.setComposingRegion(II)V
#NO_CATEGORY com.android.internal.view.IInputContext$Stub$Proxy.setComposingText(Ljava/lang/CharSequence;I)V
#NO_CATEGORY com.android.internal.view.IInputContext$Stub$Proxy.setSelection(II)V
#NO_CATEGORY com.android.internal.view.IInputMethodCallback$Stub$Proxy.finishedEvent(IZ)V
#NO_CATEGORY com.android.internal.view.IInputMethodCallback$Stub$Proxy.sessionCreated(Lcom/android/internal/view/IInputMethodSession;)V
#NO_CATEGORY com.android.internal.view.IInputMethodClient$Stub$Proxy.onUnbindMethod(I)V
#NO_CATEGORY com.android.internal.view.IInputMethodClient$Stub$Proxy.setActive(Z)V
#NO_CATEGORY com.android.internal.view.IInputMethodClient$Stub$Proxy.setUsingInputMethod(Z)V
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.addClient(Lcom/android/internal/view/IInputMethodClient;Lcom/android/internal/view/IInputContext;II)V
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.finishInput(Lcom/android/internal/view/IInputMethodClient;)V
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.hideMySoftInput(Landroid/os/IBinder;I)V
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.hideSoftInput(Lcom/android/internal/view/IInputMethodClient;ILandroid/os/ResultReceiver;)Z
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.notifySuggestionPicked(Landroid/text/style/SuggestionSpan;Ljava/lang/String;I)Z
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.registerSuggestionSpansForNotification([Landroid/text/style/SuggestionSpan;)V
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.removeClient(Lcom/android/internal/view/IInputMethodClient;)V
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.setAdditionalInputMethodSubtypes(Ljava/lang/String;[Landroid/view/inputmethod/InputMethodSubtype;)V
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.setCurrentInputMethodSubtype(Landroid/view/inputmethod/InputMethodSubtype;)Z
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.setImeWindowStatus(Landroid/os/IBinder;II)V
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.setInputMethodAndSubtype(Landroid/os/IBinder;Ljava/lang/String;Landroid/view/inputmethod/InputMethodSubtype;)V
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.setInputMethodEnabled(Ljava/lang/String;Z)Z
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.setInputMethod(Landroid/os/IBinder;Ljava/lang/String;)V
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.showInputMethodAndSubtypeEnablerFromClient(Lcom/android/internal/view/IInputMethodClient;Ljava/lang/String;)V
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.showInputMethodPickerFromClient(Lcom/android/internal/view/IInputMethodClient;)V
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.showMySoftInput(Landroid/os/IBinder;I)V
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.showSoftInput(Lcom/android/internal/view/IInputMethodClient;ILandroid/os/ResultReceiver;)Z
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.startInput(Lcom/android/internal/view/IInputMethodClient;Lcom/android/internal/view/IInputContext;Landroid/view/inputmethod/EditorInfo;I)Lcom/android/internal/view/InputBindResult;
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.switchToLastInputMethod(Landroid/os/IBinder;)Z
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.switchToNextInputMethod(Landroid/os/IBinder;Z)Z
#NO_CATEGORY com.android.internal.view.IInputMethodManager$Stub$Proxy.updateStatusIcon(Landroid/os/IBinder;Ljava/lang/String;I)V
#NO_CATEGORY com.android.internal.view.IInputMethodSession$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY com.android.internal.view.IInputMethodSession$Stub$Proxy.appPrivateCommand(Ljava/lang/String;Landroid/os/Bundle;)V
#NO_CATEGORY com.android.internal.view.IInputMethodSession$Stub$Proxy.dispatchGenericMotionEvent(ILandroid/view/MotionEvent;Lcom/android/internal/view/IInputMethodCallback;)V
#NO_CATEGORY com.android.internal.view.IInputMethodSession$Stub$Proxy.dispatchKeyEvent(ILandroid/view/KeyEvent;Lcom/android/internal/view/IInputMethodCallback;)V
#NO_CATEGORY com.android.internal.view.IInputMethodSession$Stub$Proxy.dispatchTrackballEvent(ILandroid/view/MotionEvent;Lcom/android/internal/view/IInputMethodCallback;)V
#NO_CATEGORY com.android.internal.view.IInputMethodSession$Stub$Proxy.displayCompletions([Landroid/view/inputmethod/CompletionInfo;)V
#NO_CATEGORY com.android.internal.view.IInputMethodSession$Stub$Proxy.toggleSoftInput(II)V
#NO_CATEGORY com.android.internal.view.IInputMethodSession$Stub$Proxy.updateExtractedText(ILandroid/view/inputmethod/ExtractedText;)V
#NO_CATEGORY com.android.internal.view.IInputMethodSession$Stub$Proxy.updateSelection(IIIIII)V
#NO_CATEGORY com.android.internal.view.IInputMethod$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY com.android.internal.view.IInputMethod$Stub$Proxy.attachToken(Landroid/os/IBinder;)V
#NO_CATEGORY com.android.internal.view.IInputMethod$Stub$Proxy.createSession(Lcom/android/internal/view/IInputMethodCallback;)V
#NO_CATEGORY com.android.internal.view.IInputMethod$Stub$Proxy.hideSoftInput(ILandroid/os/ResultReceiver;)V
#NO_CATEGORY com.android.internal.view.IInputMethod$Stub$Proxy.restartInput(Lcom/android/internal/view/IInputContext;Landroid/view/inputmethod/EditorInfo;)V
#NO_CATEGORY com.android.internal.view.IInputMethod$Stub$Proxy.revokeSession(Lcom/android/internal/view/IInputMethodSession;)V
#NO_CATEGORY com.android.internal.view.IInputMethod$Stub$Proxy.setSessionEnabled(Lcom/android/internal/view/IInputMethodSession;Z)V
#NO_CATEGORY com.android.internal.view.IInputMethod$Stub$Proxy.showSoftInput(ILandroid/os/ResultReceiver;)V
#NO_CATEGORY com.android.internal.view.IInputMethod$Stub$Proxy.startInput(Lcom/android/internal/view/IInputContext;Landroid/view/inputmethod/EditorInfo;)V
#NO_CATEGORY com.android.internal.view.InputConnectionWrapper.performContextMenuAction(I)Z
#NO_CATEGORY com.android.internal.view.InputConnectionWrapper.performEditorAction(I)Z
#NO_CATEGORY com.android.internal.view.InputConnectionWrapper.performPrivateCommand(Ljava/lang/String;Landroid/os/Bundle;)Z
#NO_CATEGORY com.android.internal.view.InputConnectionWrapper.sendKeyEvent(Landroid/view/KeyEvent;)Z
#NO_CATEGORY com.android.internal.view.InputConnectionWrapper.setComposingRegion(II)Z
#NO_CATEGORY com.android.internal.view.InputConnectionWrapper.setSelection(II)Z
#NO_CATEGORY com.android.internal.view.menu.ActionMenuItem.setActionProvider(Landroid/view/ActionProvider;)Landroid/view/MenuItem;
#NO_CATEGORY com.android.internal.view.menu.ActionMenuItem.setActionView(I)Landroid/view/MenuItem;
#NO_CATEGORY com.android.internal.view.menu.ActionMenuItem.setActionView(Landroid/view/View;)Landroid/view/MenuItem;
#NO_CATEGORY com.android.internal.view.menu.ActionMenuItem.setCheckable(Z)Landroid/view/MenuItem;
#NO_CATEGORY com.android.internal.view.menu.ActionMenuItem.setChecked(Z)Landroid/view/MenuItem;
#NO_CATEGORY com.android.internal.view.menu.ActionMenuItem.setEnabled(Z)Landroid/view/MenuItem;
#NO_CATEGORY com.android.internal.view.menu.ActionMenuItem.setExclusiveCheckable(Z)Lcom/android/internal/view/menu/ActionMenuItem;
#NO_CATEGORY com.android.internal.view.menu.ActionMenuItem.setShowAsActionFlags(I)Landroid/view/MenuItem;
#NO_CATEGORY com.android.internal.view.menu.ActionMenuItem.setShowAsAction(I)V
#NO_CATEGORY com.android.internal.view.menu.ActionMenuItem.setTitle(I)Landroid/view/MenuItem;
#NO_CATEGORY com.android.internal.view.menu.ActionMenuItem.setVisible(Z)Landroid/view/MenuItem;
#NO_CATEGORY com.android.internal.view.menu.ActionMenuItemView.setCheckable(Z)V
#NO_CATEGORY com.android.internal.view.menu.ActionMenuItemView.setChecked(Z)V
#NO_CATEGORY com.android.internal.view.menu.ActionMenuItemView.setShortcut(ZC)V
#NO_CATEGORY com.android.internal.view.menu.ActionMenuPresenter.updateMenuView(Z)V
#NO_CATEGORY com.android.internal.view.menu.ActionMenuView.invokeItem(Lcom/android/internal/view/menu/MenuItemImpl;)Z
#NO_CATEGORY com.android.internal.view.menu.ListMenuItemView.setCheckable(Z)V
#NO_CATEGORY com.android.internal.view.menu.ListMenuItemView.setChecked(Z)V
#NO_CATEGORY com.android.internal.view.menu.ListMenuItemView.setIcon(Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY com.android.internal.view.menu.ListMenuItemView.setShortcut(ZC)V
#NO_CATEGORY com.android.internal.view.menu.MenuBuilder.performIdentifierAction(II)Z
#NO_CATEGORY com.android.internal.view.menu.MenuBuilder.restoreActionViewStates(Landroid/os/Bundle;)V
#NO_CATEGORY com.android.internal.view.menu.MenuBuilder.saveActionViewStates(Landroid/os/Bundle;)V
#NO_CATEGORY com.android.internal.view.menu.MenuBuilder.setGroupCheckable(IZZ)V
#NO_CATEGORY com.android.internal.view.menu.MenuBuilder.setGroupEnabled(IZ)V
#NO_CATEGORY com.android.internal.view.menu.MenuBuilder.setGroupVisible(IZ)V
#NO_CATEGORY com.android.internal.view.menu.MenuBuilder.setHeaderIconInt(I)Lcom/android/internal/view/menu/MenuBuilder;
#NO_CATEGORY com.android.internal.view.menu.MenuBuilder.setHeaderIconInt(Landroid/graphics/drawable/Drawable;)Lcom/android/internal/view/menu/MenuBuilder;
#NO_CATEGORY com.android.internal.view.menu.MenuBuilder.setHeaderTitleInt(I)Lcom/android/internal/view/menu/MenuBuilder;
#NO_CATEGORY com.android.internal.view.menu.MenuBuilder.setHeaderViewInt(Landroid/view/View;)Lcom/android/internal/view/menu/MenuBuilder;
#NO_CATEGORY com.android.internal.view.menu.MenuBuilder.setShortcutsVisible(Z)V
#NO_CATEGORY com.android.internal.view.menu.MenuItemImpl.setActionView(I)Landroid/view/MenuItem;
#NO_CATEGORY com.android.internal.view.menu.MenuItemImpl.setAlphabeticShortcut(C)Landroid/view/MenuItem;
#NO_CATEGORY com.android.internal.view.menu.MenuItemImpl.setCheckable(Z)Landroid/view/MenuItem;
#NO_CATEGORY com.android.internal.view.menu.MenuItemImpl.setChecked(Z)Landroid/view/MenuItem;
#NO_CATEGORY com.android.internal.view.menu.MenuItemImpl.setEnabled(Z)Landroid/view/MenuItem;
#NO_CATEGORY com.android.internal.view.menu.MenuItemImpl.setExclusiveCheckable(Z)V
#NO_CATEGORY com.android.internal.view.menu.MenuItemImpl.setIsActionButton(Z)V
#NO_CATEGORY com.android.internal.view.menu.MenuItemImpl.setShowAsActionFlags(I)Landroid/view/MenuItem;
#NO_CATEGORY com.android.internal.view.menu.MenuItemImpl.setTitle(I)Landroid/view/MenuItem;
#NO_CATEGORY com.android.internal.view.menu.MenuItemImpl.setVisibleInt(Z)Z
#NO_CATEGORY com.android.internal.view.menu.MenuItemImpl.setVisible(Z)Landroid/view/MenuItem;
#NO_CATEGORY com.android.internal.view.menu.MenuPopupHelper.onItemClick(Landroid/widget/AdapterView;Landroid/view/View;IJ)V
#NO_CATEGORY com.android.internal.view.menu.SubMenuBuilder.setHeaderIcon(I)Landroid/view/SubMenu;
#NO_CATEGORY com.android.internal.view.menu.SubMenuBuilder.setHeaderIcon(Landroid/graphics/drawable/Drawable;)Landroid/view/SubMenu;
#NO_CATEGORY com.android.internal.view.menu.SubMenuBuilder.setHeaderTitle(I)Landroid/view/SubMenu;
#NO_CATEGORY com.android.internal.view.menu.SubMenuBuilder.setHeaderView(Landroid/view/View;)Landroid/view/SubMenu;
#NO_CATEGORY com.android.internal.view.menu.SubMenuBuilder.setIcon(I)Landroid/view/SubMenu;
#NO_CATEGORY com.android.internal.view.menu.SubMenuBuilder.setIcon(Landroid/graphics/drawable/Drawable;)Landroid/view/SubMenu;
#NO_CATEGORY com.android.internal.view.menu.SubMenuBuilder.setQwertyMode(Z)V
#NO_CATEGORY com.android.internal.view.menu.SubMenuBuilder.setShortcutsVisible(Z)V
#NO_CATEGORY com.android.internal.view.RotationPolicy.setRotationLockForAccessibility(Landroid/content/Context;Z)V android.permission.WRITE_SETTINGS 
#NO_CATEGORY com.android.internal.view.RotationPolicy.setRotationLock(Landroid/content/Context;Z)V
#NO_CATEGORY com.android.internal.widget.AbsActionBarView.setVisibility(I)V
#NO_CATEGORY com.android.internal.widget.ActionBarContainer.setVisibility(I)V
#NO_CATEGORY com.android.internal.widget.ActionBarContextView.setSplitActionBar(Z)V
#NO_CATEGORY com.android.internal.widget.ActionBarOverlayLayout.setShowingForActionMode(Z)V
#NO_CATEGORY com.android.internal.widget.ActionBarView$HomeView.setIcon(Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY com.android.internal.widget.ActionBarView$HomeView.setUp(Z)V
#NO_CATEGORY com.android.internal.widget.ActionBarView$SavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY com.android.internal.widget.ActionBarView.setDropdownSelectedPosition(I)V
#NO_CATEGORY com.android.internal.widget.ActionBarView.setHomeButtonEnabled(Z)V
#NO_CATEGORY com.android.internal.widget.ActionBarView.setIcon(I)V
#NO_CATEGORY com.android.internal.widget.ActionBarView.setLogo(I)V
#NO_CATEGORY com.android.internal.widget.ActionBarView.setMenu(Landroid/view/Menu;Lcom/android/internal/view/menu/MenuPresenter$Callback;)V
#NO_CATEGORY com.android.internal.widget.ActionBarView.setSplitActionBar(Z)V
#NO_CATEGORY com.android.internal.widget.ILockSettings$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY com.android.internal.widget.ILockSettings$Stub$Proxy.checkPassword([BI)Z
#NO_CATEGORY com.android.internal.widget.ILockSettings$Stub$Proxy.checkPattern([BI)Z
#NO_CATEGORY com.android.internal.widget.ILockSettings$Stub$Proxy.havePassword(I)Z
#NO_CATEGORY com.android.internal.widget.ILockSettings$Stub$Proxy.havePattern(I)Z
#NO_CATEGORY com.android.internal.widget.ILockSettings$Stub$Proxy.removeUser(I)V
#NO_CATEGORY com.android.internal.widget.ILockSettings$Stub$Proxy.setBoolean(Ljava/lang/String;ZI)V
#NO_CATEGORY com.android.internal.widget.ILockSettings$Stub$Proxy.setLockPassword([BI)V
#NO_CATEGORY com.android.internal.widget.ILockSettings$Stub$Proxy.setLockPattern([BI)V
#NO_CATEGORY com.android.internal.widget.ILockSettings$Stub$Proxy.setLong(Ljava/lang/String;JI)V
#NO_CATEGORY com.android.internal.widget.ILockSettings$Stub$Proxy.setString(Ljava/lang/String;Ljava/lang/String;I)V
#NO_CATEGORY com.android.internal.widget.IRemoteViewsAdapterConnection$Stub$Proxy.onServiceConnected(Landroid/os/IBinder;)V
#NO_CATEGORY com.android.internal.widget.IRemoteViewsFactory$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
#NO_CATEGORY com.android.internal.widget.LockPatternUtils.saveLockPassword(Ljava/lang/String;I)V
#NO_CATEGORY com.android.internal.widget.LockPatternUtils.saveLockPassword(Ljava/lang/String;IZ)V
#NO_CATEGORY com.android.internal.widget.LockPatternUtils.setBiometricWeakLivelinessEnabled(Z)V
#NO_CATEGORY com.android.internal.widget.LockPatternUtils.setCurrentUser(I)V
#NO_CATEGORY com.android.internal.widget.LockPatternUtils.setLockPatternEnabled(Z)V
#NO_CATEGORY com.android.internal.widget.LockPatternUtils.setLockScreenDisabled(Z)V
#NO_CATEGORY com.android.internal.widget.LockPatternUtils.setPermanentlyLocked(Z)V
#NO_CATEGORY com.android.internal.widget.LockPatternUtils.setPowerButtonInstantlyLocks(Z)V
#NO_CATEGORY com.android.internal.widget.LockPatternUtils.setVisiblePatternEnabled(Z)V
#NO_CATEGORY com.android.internal.widget.LockPatternUtils.updateEmergencyCallButtonState(Landroid/widget/Button;IZ)V
#NO_CATEGORY com.android.internal.widget.LockPatternUtils.writeFallbackAppWidgetId(I)V
#NO_CATEGORY com.android.internal.widget.LockPatternView$SavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY com.android.internal.widget.LockPatternView.setPattern(Lcom/android/internal/widget/LockPatternView$DisplayMode;Ljava/util/List;)V
#NO_CATEGORY com.android.internal.widget.LockSettingsService.access$000(Lcom/android/internal/widget/LockSettingsService;Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;I)V
#NO_CATEGORY com.android.internal.widget.LockSettingsService.setBoolean(Ljava/lang/String;ZI)V
#NO_CATEGORY com.android.internal.widget.LockSettingsService.setLockPassword([BI)V
#NO_CATEGORY com.android.internal.widget.LockSettingsService.setLockPattern([BI)V
#NO_CATEGORY com.android.internal.widget.LockSettingsService.setLong(Ljava/lang/String;JI)V
#NO_CATEGORY com.android.internal.widget.LockSettingsService.setString(Ljava/lang/String;Ljava/lang/String;I)V
#NO_CATEGORY com.android.internal.widget.multiwaveview.GlowPadView.setEnableTarget(IZ)V
#NO_CATEGORY com.android.internal.widget.multiwaveview.GlowPadView.setVibrateEnabled(Z)V
#NO_CATEGORY com.android.internal.widget.multiwaveview.MultiWaveView.setEnableTarget(IZ)V
#NO_CATEGORY com.android.internal.widget.multiwaveview.MultiWaveView.setVibrateEnabled(Z)V
#NO_CATEGORY com.android.internal.widget.multiwaveview.TargetDrawable$DrawableWithAlpha.setAlpha(I)V
#NO_CATEGORY com.android.internal.widget.multiwaveview.TargetDrawable$DrawableWithAlpha.setColorFilter(Landroid/graphics/ColorFilter;)V
#NO_CATEGORY com.android.internal.widget.multiwaveview.TargetDrawable.setDrawable(Landroid/content/res/Resources;I)V
#NO_CATEGORY com.android.internal.widget.multiwaveview.TargetDrawable.setState([I)V
#NO_CATEGORY com.android.internal.widget.PasswordEntryKeyboardHelper.sendDownUpKeyEvents(I)V
#NO_CATEGORY com.android.internal.widget.PasswordEntryKeyboard.setShifted(Z)Z
#NO_CATEGORY com.android.internal.widget.PasswordEntryKeyboardView.setShifted(Z)Z
#NO_CATEGORY com.android.internal.widget.RotarySelector.setLeftHandleResource(I)V
#NO_CATEGORY com.android.internal.widget.RotarySelector.setRightHandleResource(I)V
#NO_CATEGORY com.android.internal.widget.SlidingTab.setLeftHintText(I)V
#NO_CATEGORY com.android.internal.widget.SlidingTab.setLeftTabResources(IIII)V
#NO_CATEGORY com.android.internal.widget.SlidingTab.setRightHintText(I)V
#NO_CATEGORY com.android.internal.widget.SlidingTab.setRightTabResources(IIII)V
#NO_CATEGORY com.android.internal.widget.SlidingTab.setVisibility(I)V
#NO_CATEGORY com.android.internal.widget.SlidingTab$Slider.setBarBackgroundResource(I)V
#NO_CATEGORY com.android.internal.widget.SlidingTab$Slider.setHintText(I)V
#NO_CATEGORY com.android.internal.widget.SlidingTab$Slider.setIcon(I)V
#NO_CATEGORY com.android.internal.widget.SlidingTab$Slider.setTabBackgroundResource(I)V
#NO_CATEGORY com.android.internal.widget.SlidingTab$Slider.setTarget(I)V
#NO_CATEGORY com.android.internal.widget.SlidingTab$Slider.startAnimation(Landroid/view/animation/Animation;Landroid/view/animation/Animation;)V
#NO_CATEGORY com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak.setAllMetadata(ILandroid/os/Bundle;Landroid/graphics/Bitmap;)V
#NO_CATEGORY com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak.setArtwork(ILandroid/graphics/Bitmap;)V
#NO_CATEGORY com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak.setCurrentClientId(ILandroid/app/PendingIntent;Z)V
#NO_CATEGORY com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak.setMetadata(ILandroid/os/Bundle;)V
#NO_CATEGORY com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak.setPlaybackState(IIJ)V
#NO_CATEGORY com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak.setTransportControlFlags(II)V
#NO_CATEGORY com.android.internal.widget.TransportControlView$SavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY com.android.launcher2.Alarm.setAlarm(J)V
#NO_CATEGORY com.android.launcher2.ApplicationInfo.setActivity(Landroid/content/ComponentName;I)V
#NO_CATEGORY com.android.launcher2.AppsCustomizePagedView.setContentType(Lcom/android/launcher2/AppsCustomizePagedView$ContentType;)V
#NO_CATEGORY com.android.launcher2.AppsCustomizeTabHost.setContentTypeImmediate(Lcom/android/launcher2/AppsCustomizePagedView$ContentType;)V
#NO_CATEGORY com.android.launcher2.AppsCustomizeTabHost.setCurrentTabFromContent(Lcom/android/launcher2/AppsCustomizePagedView$ContentType;)V
#NO_CATEGORY com.android.launcher2.BubbleTextView.setFrame(IIII)Z
#NO_CATEGORY com.android.launcher2.BubbleTextView.setTag(Ljava/lang/Object;)V
#NO_CATEGORY com.android.launcher2.CellLayout.animateChildToPosition(Landroid/view/View;IIIIZZ)Z
#NO_CATEGORY com.android.launcher2.CellLayout$ItemConfiguration.add(Landroid/view/View;Lcom/android/launcher2/CellLayout$CellAndSpan;)V
#NO_CATEGORY com.android.launcher2.CellLayout$LayoutParams.setup(IIII)V
#NO_CATEGORY com.android.launcher2.CellLayout.setChildrenDrawingCacheEnabled(Z)V
#NO_CATEGORY com.android.launcher2.CellLayout.setChildrenDrawnWithCacheEnabled(Z)V
#NO_CATEGORY com.android.launcher2.CellLayout.setFolderLeaveBehindCell(II)V
#NO_CATEGORY com.android.launcher2.CellLayout.setShortcutAndWidgetAlpha(F)V
#NO_CATEGORY com.android.launcher2.CellLayout.setTagToCellInfoForPoint(II)V
#NO_CATEGORY com.android.launcher2.DragController.startDrag(Landroid/view/View;Landroid/graphics/Bitmap;Lcom/android/launcher2/DragSource;Ljava/lang/Object;ILandroid/graphics/Rect;F)V android.permission.VIBRATE 
#NO_CATEGORY com.android.launcher2.DragView.setAlpha(F)V
#NO_CATEGORY com.android.launcher2.DragView.setColor(I)V
#NO_CATEGORY com.android.launcher2.FastBitmapDrawable.setColorFilter(Landroid/graphics/ColorFilter;)V
#NO_CATEGORY com.android.launcher2.FastBitmapDrawable.setFilterBitmap(Z)V
#NO_CATEGORY com.android.launcher2.FolderIcon.setTextVisible(Z)V
#NO_CATEGORY com.android.launcher2.HideFromAccessibilityHelper.onChildViewRemoved(Landroid/view/View;Landroid/view/View;)V
#NO_CATEGORY com.android.launcher2.HideFromAccessibilityHelper.restoreImportantForAccessibility(Landroid/view/View;)V
#NO_CATEGORY com.android.launcher2.ItemInfo.updateValuesWithCoordinates(Landroid/content/ContentValues;II)V
#NO_CATEGORY com.android.launcher2.Launcher.addAppWidgetFromDrop(Lcom/android/launcher2/PendingAddWidgetInfo;JI[I[I[I)V
#NO_CATEGORY com.android.launcher2.Launcher.addAppWidgetImpl(ILcom/android/launcher2/ItemInfo;Landroid/appwidget/AppWidgetHostView;Landroid/appwidget/AppWidgetProviderInfo;)V
#NO_CATEGORY com.android.launcher2.Launcher.addWidgetToAutoAdvanceIfNeeded(Landroid/view/View;Landroid/appwidget/AppWidgetProviderInfo;)V
#NO_CATEGORY com.android.launcher2.LauncherAppWidgetHostView.updateAppWidget(Landroid/widget/RemoteViews;)V
#NO_CATEGORY com.android.launcher2.LauncherAppWidgetInfo.notifyWidgetSizeChanged(Lcom/android/launcher2/Launcher;)V
#NO_CATEGORY com.android.launcher2.Launcher.bindAppsUpdated(Ljava/util/ArrayList;)V
#NO_CATEGORY com.android.launcher2.Launcher.bindFolders(Ljava/util/HashMap;)V
#NO_CATEGORY com.android.launcher2.LauncherModel.addItemToDatabase(Landroid/content/Context;Lcom/android/launcher2/ItemInfo;JIIIZ)V
#NO_CATEGORY com.android.launcher2.LauncherModel.queueIconToBeChecked(Ljava/util/HashMap;Lcom/android/launcher2/ShortcutInfo;Landroid/database/Cursor;I)Z
#NO_CATEGORY com.android.launcher2.Launcher.onLongClick(Landroid/view/View;)Z
#NO_CATEGORY com.android.launcher2.Launcher.processShortcut(Landroid/content/Intent;)V
#NO_CATEGORY com.android.launcher2.LauncherProvider.insert(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;
#NO_CATEGORY com.android.launcher2.LauncherProvider.loadDefaultFavoritesIfNecessary(I)V
#NO_CATEGORY com.android.launcher2.LauncherProvider.update(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
#NO_CATEGORY com.android.launcher2.Launcher.startActivityForResult(Landroid/content/Intent;I)V
#NO_CATEGORY com.android.launcher2.Launcher.startSearch(Ljava/lang/String;ZLandroid/os/Bundle;Z)V
#NO_CATEGORY com.android.launcher2.LauncherViewPropertyAnimator.setTarget(Ljava/lang/Object;)V
#NO_CATEGORY com.android.launcher2.PagedViewCellLayoutChildren.setChildrenDrawingCacheEnabled(Z)V
#NO_CATEGORY com.android.launcher2.PagedViewCellLayout$LayoutParams.setup(IIIIII)V
#NO_CATEGORY com.android.launcher2.PagedViewCellLayout.setChildrenDrawingCacheEnabled(Z)V
#NO_CATEGORY com.android.launcher2.PagedView.performAccessibilityAction(ILandroid/os/Bundle;)Z
#NO_CATEGORY com.android.launcher2.SearchDropTargetBar.setup(Lcom/android/launcher2/Launcher;Lcom/android/launcher2/DragController;)V
#NO_CATEGORY com.android.launcher2.ShortcutAndWidgetContainer.setChildrenDrawingCacheEnabled(Z)V
#NO_CATEGORY com.android.launcher2.ShortcutAndWidgetContainer.setChildrenDrawnWithCacheEnabled(Z)V
#NO_CATEGORY com.android.launcher2.ShortcutAndWidgetContainer.setupLp(Lcom/android/launcher2/CellLayout$LayoutParams;)V
#NO_CATEGORY com.android.launcher2.ShortcutInfo.onAddToDatabase(Landroid/content/ContentValues;)V
#NO_CATEGORY com.android.launcher2.ShortcutInfo.setActivity(Landroid/content/ComponentName;I)V
#NO_CATEGORY com.android.launcher2.SmoothPagedView$OvershootInterpolator.setDistance(I)V
#NO_CATEGORY com.android.launcher2.WallpaperChooserDialogFragment$WallpaperDrawable.setAlpha(I)V
#NO_CATEGORY com.android.launcher2.WallpaperChooserDialogFragment$WallpaperDrawable.setColorFilter(Landroid/graphics/ColorFilter;)V
#NO_CATEGORY com.android.launcher2.WeakReferenceThreadLocal.set(Ljava/lang/Object;)V
#NO_CATEGORY com.android.launcher2.Workspace.beginDragShared(Landroid/view/View;Lcom/android/launcher2/DragSource;)V
#NO_CATEGORY com.android.launcher2.Workspace.onDrop(Lcom/android/launcher2/DropTarget$DragObject;)V
#NO_CATEGORY com.android.launcher2.Workspace.setFinalScrollForPageChange(I)V
#NO_CATEGORY com.android.launcher2.Workspace.setFinalTransitionTransform(Lcom/android/launcher2/CellLayout;)V
#NO_CATEGORY com.android.launcher2.Workspace$WallpaperOffsetInterpolator.setFinalX(F)V
#NO_CATEGORY com.android.musicfx.Compatibility$Receiver.onReceive(Landroid/content/Context;Landroid/content/Intent;)V
#NO_CATEGORY com.android.musicfx.ControlPanelEffect.setParameterInt(Landroid/content/Context;Ljava/lang/String;ILcom/android/musicfx/ControlPanelEffect$Key;I)V
#NO_CATEGORY com.android.musicfx.seekbar.AbsSeekBar.setMax(I)V
#NO_CATEGORY com.android.musicfx.seekbar.ProgressBar$SavedState.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY com.android.musicfx.seekbar.ProgressBar.setInterpolator(Landroid/content/Context;I)V
#NO_CATEGORY com.android.musicfx.seekbar.ProgressBar.setProgress(I)V
#NO_CATEGORY com.android.musicfx.seekbar.ProgressBar.setVisibility(I)V
NO_CATEGORY com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier.on(Lcom/android/org/bouncycastle/asn1/ASN1ObjectIdentifier;)Z
NO_CATEGORY com.android.org.bouncycastle.asn1.ASN1OutputStream$ImplicitOutputStream.write(I)V
NO_CATEGORY com.android.org.bouncycastle.asn1.ASN1OutputStream.write([BII)V
NO_CATEGORY com.android.org.bouncycastle.asn1.ASN1OutputStream.write([B)V
NO_CATEGORY com.android.org.bouncycastle.asn1.ASN1OutputStream.writeEncoded(I[B)V
NO_CATEGORY com.android.org.bouncycastle.asn1.ASN1OutputStream.writeEncoded(II[B)V
NO_CATEGORY com.android.org.bouncycastle.asn1.ASN1OutputStream.write(I)V
NO_CATEGORY com.android.org.bouncycastle.asn1.ASN1OutputStream.writeLength(I)V
NO_CATEGORY com.android.org.bouncycastle.asn1.ASN1OutputStream.writeTag(II)V
NO_CATEGORY com.android.org.bouncycastle.asn1.LimitedInputStream.setParentEofDetect(Z)V
NO_CATEGORY com.android.org.bouncycastle.util.io.Streams.pipeAllLimited(Ljava/io/InputStream;JLjava/io/OutputStream;)J
NO_CATEGORY com.android.org.bouncycastle.util.io.Streams.pipeAll(Ljava/io/InputStream;Ljava/io/OutputStream;)V
NO_CATEGORY com.android.org.bouncycastle.util.Strings.toUTF8ByteArray([CLjava/io/OutputStream;)V
NO_CATEGORY com.android.phone.BluetoothPhoneService$3.sendDtmf(I)Z
NO_CATEGORY com.android.phone.CallCard.onQueryComplete(ILjava/lang/Object;Lcom/android/internal/telephony/CallerInfo;)V
NO_CATEGORY com.android.phone.CallCard.setSecondaryCallClickable(Z)V
NO_CATEGORY com.android.phone.CallFeaturesSetting.onActivityResult(IILandroid/content/Intent;)V
NO_CATEGORY com.android.phone.CallFeaturesSetting.onPreferenceTreeClick(Landroid/preference/PreferenceScreen;Landroid/preference/Preference;)Z
NO_CATEGORY com.android.phone.CallFeaturesSetting.startActivityForResult(Landroid/content/Intent;I)V
NO_CATEGORY com.android.phone.CallNotifier.onQueryComplete(ILjava/lang/Object;Lcom/android/internal/telephony/CallerInfo;)V
NO_CATEGORY com.android.phone.CallNotifier.sendMwiChangedDelayed(J)V android.permission.VIBRATE 
NO_CATEGORY com.android.phone.DTMFTwelveKeyDialer.setDialpadContext(Ljava/lang/String;)V
NO_CATEGORY com.android.phone.DTMFTwelveKeyDialer.startLocalToneIfNeeded(C)V
NO_CATEGORY com.android.phone.DTMFTwelveKeyDialer.startTone(CZ)V
NO_CATEGORY com.android.phone.EditPhoneNumberPreference.setValueFromString(Ljava/lang/String;)V
NO_CATEGORY com.android.phone.InCallUiState.setProviderInfo(Landroid/content/Intent;)V
NO_CATEGORY com.android.phone.ManageConferenceUtils.setPanelVisible(Z)V
NO_CATEGORY com.android.phone.ManageConferenceUtils.updateManageConferenceRow(ILcom/android/internal/telephony/Connection;Z)V
NO_CATEGORY com.android.phone.MobileNetworkSettings.onPreferenceChange(Landroid/preference/Preference;Ljava/lang/Object;)Z
NO_CATEGORY com.android.phone.NotificationMgr.notifyMissedCall(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/graphics/drawable/Drawable;Landroid/graphics/Bitmap;J)V
NO_CATEGORY com.android.phone.NotificationMgr$QueryHandler.onQueryComplete(ILjava/lang/Object;Landroid/database/Cursor;)V
NO_CATEGORY com.android.phone.PhoneInterfaceManager.enableApnType(Ljava/lang/String;)I
NO_CATEGORY com.android.phone.PhoneInterfaceManager.handlePinMmi(Ljava/lang/String;)Z
NO_CATEGORY com.android.phone.PhoneInterfaceManager.setRadio(Z)Z
NO_CATEGORY com.android.phone.PhoneInterfaceManager.supplyPin(Ljava/lang/String;)Z
NO_CATEGORY com.android.phone.PhoneInterfaceManager.supplyPuk(Ljava/lang/String;Ljava/lang/String;)Z
NO_CATEGORY com.android.phone.PhoneUtils$ConnectionHandler.handleMessage(Landroid/os/Message;)V
NO_CATEGORY com.android.phone.PhoneUtils.setMute(Z)V
NO_CATEGORY com.android.phone.PhoneUtils.startGetCallerInfo(Landroid/content/Context;Lcom/android/internal/telephony/Connection;Lcom/android/internal/telephony/CallerInfoAsyncQuery$OnQueryCompleteListener;Ljava/lang/Object;)Lcom/android/phone/PhoneUtils$CallerInfoToken;
NO_CATEGORY com.android.phone.RespondViaSmsManager$RespondViaSmsItemClickListener.onItemClick(Landroid/widget/AdapterView;Landroid/view/View;IJ)V android.permission.READ_PHONE_STATE android.permission.BLUETOOTH android.permission.READ_SYNC_SETTINGS android.permission.READ_SOCIAL_STREAM android.permission.WRITE_SOCIAL_STREAM android.permission.VIBRATE android.permission.READ_CONTACTS android.permission.WRITE_CONTACTS android.permission.BLUETOOTH_ADMIN android.permission.WAKE_LOCK android.permission.MODIFY_AUDIO_SETTINGS 
NO_CATEGORY com.android.phone.sip.SipSharedPreferences.setPrimaryAccount(Ljava/lang/String;)V
NO_CATEGORY com.android.phone.sip.SipSharedPreferences.setProfilesCount(I)V
NO_CATEGORY com.android.phone.sip.SipSharedPreferences.setReceivingCallsEnabled(Z)V
NO_CATEGORY com.android.phone.sip.SipSharedPreferences.setSipCallOption(Ljava/lang/String;)V
NO_CATEGORY com.android.providers.calendar.CalendarAlarmManager.set(IJLandroid/app/PendingIntent;)V
NO_CATEGORY com.android.providers.calendar.CalendarCache.writeDataLocked(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY com.android.providers.calendar.CalendarCache.writeTimezoneDatabaseVersion(Ljava/lang/String;)V
NO_CATEGORY com.android.providers.calendar.CalendarCache.writeTimezoneType(Ljava/lang/String;)V
NO_CATEGORY com.android.providers.calendar.CalendarInstancesHelper$EventInstancesMap.add(Ljava/lang/String;Landroid/content/ContentValues;)V
NO_CATEGORY com.android.providers.calendar.CalendarProvider2.doProcessEventRawTimes(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY com.android.providers.calendar.CalendarProvider2.notifyChange(Z)V
NO_CATEGORY com.android.providers.calendar.CalendarProviderBroadcastReceiver.onReceive(Landroid/content/Context;Landroid/content/Intent;)V
NO_CATEGORY com.android.providers.calendar.MetaData.writeLocked(Ljava/lang/String;JJ)V
NO_CATEGORY com.android.providers.downloads.DownloadHandler.setCurrentSpeed(JJ)V
NO_CATEGORY com.android.providers.downloads.DownloadInfo.notifyPauseDueToSize(Z)V
NO_CATEGORY com.android.providers.downloads.RealSystemFacade.sendBroadcast(Landroid/content/Intent;)V
NO_CATEGORY com.android.providers.media.IMtpService$Stub$Proxy.sendObjectAdded(I)V
NO_CATEGORY com.android.providers.media.IMtpService$Stub$Proxy.sendObjectRemoved(I)V
NO_CATEGORY com.android.providers.media.MediaScannerService$1.requestScanFile(Ljava/lang/String;Ljava/lang/String;Landroid/media/IMediaScannerListener;)V
NO_CATEGORY com.android.providers.media.MtpService$3.sendObjectAdded(I)V
NO_CATEGORY com.android.providers.media.MtpService$3.sendObjectRemoved(I)V
NO_CATEGORY com.android.providers.settings.SettingsBackupAgent.onBackup(Landroid/os/ParcelFileDescriptor;Landroid/app/backup/BackupDataOutput;Landroid/os/ParcelFileDescriptor;)V
NO_CATEGORY com.android.providers.settings.SettingsBackupAgent.onRestore(Landroid/app/backup/BackupDataInput;ILandroid/os/ParcelFileDescriptor;)V
NO_CATEGORY com.android.providers.settings.SettingsHelper.restoreValue(Ljava/lang/String;Ljava/lang/String;)Z
NO_CATEGORY com.android.providers.settings.SettingsHelper.setLocaleData([BI)V
NO_CATEGORY com.android.providers.userdictionary.DictionaryBackupAgent.onBackup(Landroid/os/ParcelFileDescriptor;Landroid/app/backup/BackupDataOutput;Landroid/os/ParcelFileDescriptor;)V
NO_CATEGORY com.android.providers.userdictionary.DictionaryBackupAgent.onRestore(Landroid/app/backup/BackupDataInput;ILandroid/os/ParcelFileDescriptor;)V android.permission.WRITE_USER_DICTIONARY android.permission.READ_USER_DICTIONARY 
NO_CATEGORY com.android.providers.userdictionary.UserDictionaryProvider.update(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
#NO_CATEGORY com.android.server.accessibility.AccessibilityManagerService$MainHandler.handleMessage(Landroid/os/Message;)V
#NO_CATEGORY com.android.server.accessibility.AccessibilityManagerService.sendAccessibilityEvent(Landroid/view/accessibility/AccessibilityEvent;I)Z
#NO_CATEGORY com.android.server.accessibility.AccessibilityManagerService$Service.<init>(Lcom/android/server/accessibility/AccessibilityManagerService;ILandroid/content/ComponentName;Landroid/accessibilityservice/AccessibilityServiceInfo;Z)V
#NO_CATEGORY com.android.server.accessibility.AccessibilityManagerService$Service.notifyAccessibilityEvent(Landroid/view/accessibility/AccessibilityEvent;)V
#NO_CATEGORY com.android.server.accessibility.AccessibilityManagerService$Service.notifyGesture(I)V
#NO_CATEGORY com.android.server.accessibility.AccessibilityManagerService$Service.performAccessibilityAction(IJILandroid/os/Bundle;ILandroid/view/accessibility/IAccessibilityInteractionConnectionCallback;J)Z
#NO_CATEGORY com.android.server.accessibility.AccessibilityManagerService$Service.setDynamicallyConfigurableProperties(Landroid/accessibilityservice/AccessibilityServiceInfo;)V
#NO_CATEGORY com.android.server.accessibility.AccessibilityManagerService$Service.setServiceInfo(Landroid/accessibilityservice/AccessibilityServiceInfo;)V
#NO_CATEGORY com.android.server.accessibility.ScreenMagnifier$MagnificationController.setAccessibilityTransformation(Lcom/android/server/accessibility/ScreenMagnifier$MagnificationController$MagnificationSpec;)V
#NO_CATEGORY com.android.server.accessibility.ScreenMagnifier$MagnificationController.setMagnifiedRegionCenter(FFZ)V
#NO_CATEGORY com.android.server.accessibility.ScreenMagnifier$MagnificationController.setScaleAndMagnifiedRegionCenter(FFFZ)V
#NO_CATEGORY com.android.server.accessibility.ScreenMagnifier$MagnificationController.setScale(FFFZ)V
#NO_CATEGORY com.android.server.accessibility.ScreenMagnifier$Viewport.setFrameShown(ZZ)V
#NO_CATEGORY com.android.server.accessibility.ScreenMagnifier$Viewport$ViewportWindow.setBounds(Landroid/graphics/Rect;)V
#NO_CATEGORY com.android.server.AlarmManagerService$Alarm.dump(Ljava/io/PrintWriter;Ljava/lang/String;J)V
#NO_CATEGORY com.android.server.AlarmManagerService.lookForPackageLocked(Ljava/lang/String;)Z
#NO_CATEGORY com.android.server.AlarmManagerService.set(IJLandroid/app/PendingIntent;)V
#NO_CATEGORY com.android.server.AlarmManagerService.setInexactRepeating(IJJLandroid/app/PendingIntent;)V
#NO_CATEGORY com.android.server.AlarmManagerService.setTime(J)V
#NO_CATEGORY com.android.server.AlarmManagerService.setWakelockWorkSource(Landroid/app/PendingIntent;)V
#NO_CATEGORY com.android.server.am.ActiveServices$ServiceMap.putServiceByIntent(Landroid/content/Intent$FilterComparison;ILcom/android/server/am/ServiceRecord;)V
#NO_CATEGORY com.android.server.am.ActiveServices.setServiceForegroundLocked(Landroid/content/ComponentName;Landroid/os/IBinder;ILandroid/app/Notification;Z)V
#NO_CATEGORY com.android.server.am.ActivityManagerService$2.handleMessage(Landroid/os/Message;)V android.permission.STOP_APP_SWITCHES 
#NO_CATEGORY com.android.server.am.ActivityManagerService.addAppLocked(Landroid/content/pm/ApplicationInfo;Z)Lcom/android/server/am/ProcessRecord;
#NO_CATEGORY com.android.server.am.ActivityManagerService.addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V
#NO_CATEGORY com.android.server.am.ActivityManagerService.bindBackupAgent(Landroid/content/pm/ApplicationInfo;I)Z
#NO_CATEGORY com.android.server.am.ActivityManagerService.clearApplicationUserData(Ljava/lang/String;Landroid/content/pm/IPackageDataObserver;I)Z
#NO_CATEGORY com.android.server.am.ActivityManagerService.collectProcesses(Ljava/io/PrintWriter;I[Ljava/lang/String;)Ljava/util/ArrayList;
#NO_CATEGORY com.android.server.am.ActivityManagerService.dumpHeap(Ljava/lang/String;IZLjava/lang/String;Landroid/os/ParcelFileDescriptor;)Z
#NO_CATEGORY com.android.server.am.ActivityManagerService.dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/util/ArrayList;Z)V
#NO_CATEGORY com.android.server.am.ActivityManagerService.dumpStackTraces(ZLjava/util/ArrayList;Lcom/android/internal/os/ProcessStats;Landroid/util/SparseArray;[Ljava/lang/String;)Ljava/io/File;
#NO_CATEGORY com.android.server.am.ActivityManagerService.ensurePackageDexOpt(Ljava/lang/String;)V
#NO_CATEGORY com.android.server.am.ActivityManagerService.finishUserSwitch(Lcom/android/server/am/UserStartedState;)V
#NO_CATEGORY com.android.server.am.ActivityManagerService.grantUriPermissionUncheckedLocked(ILjava/lang/String;Landroid/net/Uri;ILcom/android/server/am/UriPermissionOwner;)V
#NO_CATEGORY com.android.server.am.ActivityManagerService.killPids([ILjava/lang/String;Z)Z
#NO_CATEGORY com.android.server.am.ActivityManagerService.newUriPermissionOwner(Ljava/lang/String;)Landroid/os/IBinder;
#NO_CATEGORY com.android.server.am.ActivityManagerService.publishContentProviders(Landroid/app/IApplicationThread;Ljava/util/List;)V
#NO_CATEGORY com.android.server.am.ActivityManagerService.registerReceiver(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/IIntentReceiver;Landroid/content/IntentFilter;Ljava/lang/String;I)Landroid/content/Intent;
#NO_CATEGORY com.android.server.am.ActivityManagerService.sendUserSwitchBroadcastsLocked(II)V
#NO_CATEGORY com.android.server.am.ActivityManagerService.setDebugApp(Ljava/lang/String;ZZ)V
#NO_CATEGORY com.android.server.am.ActivityManagerService.setFrontActivityScreenCompatMode(I)V
#NO_CATEGORY com.android.server.am.ActivityManagerService.setPackageAskScreenCompat(Ljava/lang/String;Z)V
#NO_CATEGORY com.android.server.am.ActivityManagerService.setPackageScreenCompatMode(Ljava/lang/String;I)V
#NO_CATEGORY com.android.server.am.ActivityManagerService.setProcessForeground(Landroid/os/IBinder;IZ)V
#NO_CATEGORY com.android.server.am.ActivityManagerService.setRequestedOrientation(Landroid/os/IBinder;I)V
#NO_CATEGORY com.android.server.am.ActivityManagerService.setServiceForeground(Landroid/content/ComponentName;Landroid/os/IBinder;ILandroid/app/Notification;Z)V
#NO_CATEGORY com.android.server.am.ActivityManagerService.startInstrumentation(Landroid/content/ComponentName;Ljava/lang/String;ILandroid/os/Bundle;Landroid/app/IInstrumentationWatcher;I)Z
#NO_CATEGORY com.android.server.am.ActivityManagerService.startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZ)Lcom/android/server/am/ProcessRecord;
#NO_CATEGORY com.android.server.am.ActivityManagerService.startServiceInPackage(ILandroid/content/Intent;Ljava/lang/String;I)Landroid/content/ComponentName;
#NO_CATEGORY com.android.server.am.ActivityManagerService.startService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;I)Landroid/content/ComponentName;
#NO_CATEGORY com.android.server.am.ActivityRecord.dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
#NO_CATEGORY com.android.server.am.ActivityRecord.startFreezingScreenLocked(Lcom/android/server/am/ProcessRecord;I)V
#NO_CATEGORY com.android.server.am.ActivityStack.ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;I)V
#NO_CATEGORY com.android.server.am.ActivityStack.realStartActivityLocked(Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ProcessRecord;ZZ)Z
#NO_CATEGORY com.android.server.am.ActivityStack.removeTaskActivitiesLocked(IIZ)Lcom/android/server/am/ActivityRecord;
#NO_CATEGORY com.android.server.am.ActivityStack.sendActivityResultLocked(ILcom/android/server/am/ActivityRecord;Ljava/lang/String;IILandroid/content/Intent;)V
#NO_CATEGORY com.android.server.am.ActivityStack.startActivityUncheckedLocked(Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;IZLandroid/os/Bundle;)I
#NO_CATEGORY com.android.server.am.AppBindRecord.dumpInIntentBind(Ljava/io/PrintWriter;Ljava/lang/String;)V
#NO_CATEGORY com.android.server.am.AppBindRecord.dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
#NO_CATEGORY com.android.server.am.AppErrorDialog.<init>(Landroid/content/Context;Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/AppErrorResult;Lcom/android/server/am/ProcessRecord;)V
#NO_CATEGORY com.android.server.am.BatteryStatsService.setBatteryState(IIIIII)V android.permission.BLUETOOTH 
#NO_CATEGORY com.android.server.am.BroadcastFilter.dumpBrief(Ljava/io/PrintWriter;Ljava/lang/String;)V
#NO_CATEGORY com.android.server.am.BroadcastFilter.dumpInReceiverList(Ljava/io/PrintWriter;Landroid/util/Printer;Ljava/lang/String;)V
#NO_CATEGORY com.android.server.am.BroadcastFilter.dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
#NO_CATEGORY com.android.server.am.BroadcastQueue.sendPendingBroadcastsLocked(Lcom/android/server/am/ProcessRecord;)Z
#NO_CATEGORY com.android.server.am.BroadcastQueue.setBroadcastTimeoutLocked(J)V
#NO_CATEGORY com.android.server.am.BroadcastRecord.dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
#NO_CATEGORY com.android.server.am.CompatModePackages.setFrontActivityAskCompatModeLocked(Z)V
#NO_CATEGORY com.android.server.am.CompatModePackages.setFrontActivityScreenCompatModeLocked(I)V
#NO_CATEGORY com.android.server.am.CompatModePackages.setPackageAskCompatModeLocked(Ljava/lang/String;Z)V
#NO_CATEGORY com.android.server.am.CompatModePackages.setPackageScreenCompatModeLocked(Ljava/lang/String;I)V
#NO_CATEGORY com.android.server.am.ConnectionRecord.dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
#NO_CATEGORY com.android.server.am.ContentProviderRecord.addExternalProcessHandleLocked(Landroid/os/IBinder;)V
#NO_CATEGORY com.android.server.am.EventLogTags.writeAmDropProcess(I)V
#NO_CATEGORY com.android.server.am.EventLogTags.writeAmLowMemory(I)V
#NO_CATEGORY com.android.server.am.EventLogTags.writeAmSwitchUser(I)V
#NO_CATEGORY com.android.server.am.EventLogTags.writeBootProgressAmsReady(J)V
#NO_CATEGORY com.android.server.am.EventLogTags.writeBootProgressEnableScreen(J)V
#NO_CATEGORY com.android.server.am.EventLogTags.writeConfigurationChanged(I)V
#NO_CATEGORY com.android.server.am.IntentBindRecord.dumpInService(Ljava/io/PrintWriter;Ljava/lang/String;)V
#NO_CATEGORY com.android.server.am.IntentBindRecord.dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
#NO_CATEGORY com.android.server.am.PendingIntentRecord.send(ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;Ljava/lang/String;)I
#NO_CATEGORY com.android.server.am.PendingIntentRecord.sendInner(ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I
#NO_CATEGORY com.android.server.am.ProcessRecord.dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
#NO_CATEGORY com.android.server.am.ReceiverList.dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
#NO_CATEGORY com.android.server.am.ServiceRecord.dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
#NO_CATEGORY com.android.server.am.ServiceRecord.dumpStartList(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/util/List;J)V
#NO_CATEGORY com.android.server.am.ServiceRecord.retrieveAppBindingLocked(Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;)Lcom/android/server/am/AppBindRecord;
#NO_CATEGORY com.android.server.am.UsageStatsService.noteResumeComponent(Landroid/content/ComponentName;)V
#NO_CATEGORY com.android.server.am.UsageStatsService$PkgUsageStatsExtended.addLaunchCount(Ljava/lang/String;)V
#NO_CATEGORY com.android.server.am.UsageStatsService$PkgUsageStatsExtended.addLaunchTime(Ljava/lang/String;I)V
#NO_CATEGORY com.android.server.am.UsageStatsService$PkgUsageStatsExtended.writeToParcel(Landroid/os/Parcel;)V
#NO_CATEGORY com.android.server.AppWidgetService.allocateAppWidgetId(Ljava/lang/String;I)I
#NO_CATEGORY com.android.server.AppWidgetService.bindAppWidgetIdIfAllowed(Ljava/lang/String;ILandroid/content/ComponentName;Landroid/os/Bundle;)Z
#NO_CATEGORY com.android.server.AppWidgetService.bindAppWidgetId(ILandroid/content/ComponentName;Landroid/os/Bundle;)V
#NO_CATEGORY com.android.server.AppWidgetService.bindRemoteViewsService(ILandroid/content/Intent;Landroid/os/IBinder;I)V
#NO_CATEGORY com.android.server.AppWidgetService.hasBindAppWidgetPermission(Ljava/lang/String;)Z
#NO_CATEGORY com.android.server.AppWidgetServiceImpl.bindAppWidgetIdIfAllowed(Ljava/lang/String;ILandroid/content/ComponentName;Landroid/os/Bundle;)Z
#NO_CATEGORY com.android.server.AppWidgetServiceImpl.bindAppWidgetId(ILandroid/content/ComponentName;Landroid/os/Bundle;)V
#NO_CATEGORY com.android.server.AppWidgetServiceImpl.bindRemoteViewsService(ILandroid/content/Intent;Landroid/os/IBinder;)V
#NO_CATEGORY com.android.server.AppWidgetServiceImpl.deleteAppWidgetLocked(Lcom/android/server/AppWidgetServiceImpl$AppWidgetId;)V
#NO_CATEGORY com.android.server.AppWidgetServiceImpl.notifyAppWidgetViewDataChanged([II)V
#NO_CATEGORY com.android.server.AppWidgetServiceImpl.notifyAppWidgetViewDataChangedInstanceLocked(Lcom/android/server/AppWidgetServiceImpl$AppWidgetId;I)V
#NO_CATEGORY com.android.server.AppWidgetServiceImpl.partiallyUpdateAppWidgetIds([ILandroid/widget/RemoteViews;)V
#NO_CATEGORY com.android.server.AppWidgetServiceImpl.registerForBroadcastsLocked(Lcom/android/server/AppWidgetServiceImpl$Provider;[I)V
#NO_CATEGORY com.android.server.AppWidgetServiceImpl.sendEnableIntentLocked(Lcom/android/server/AppWidgetServiceImpl$Provider;)V
#NO_CATEGORY com.android.server.AppWidgetServiceImpl.sendUpdateIntentLocked(Lcom/android/server/AppWidgetServiceImpl$Provider;[I)V
#NO_CATEGORY com.android.server.AppWidgetServiceImpl.setBindAppWidgetPermission(Ljava/lang/String;Z)V
#NO_CATEGORY com.android.server.AppWidgetServiceImpl.updateAppWidgetIds([ILandroid/widget/RemoteViews;)V
#NO_CATEGORY com.android.server.AppWidgetServiceImpl.updateAppWidgetProvider(Landroid/content/ComponentName;Landroid/widget/RemoteViews;)V
#NO_CATEGORY com.android.server.AppWidgetServiceImpl.updateProvidersForPackageLocked(Ljava/lang/String;Ljava/util/Set;)Z
#NO_CATEGORY com.android.server.AppWidgetService.notifyAppWidgetViewDataChanged([II)V
#NO_CATEGORY com.android.server.AppWidgetService.setBindAppWidgetPermission(Ljava/lang/String;Z)V
#NO_CATEGORY com.android.server.AppWidgetService.startListeningAsUser(Lcom/android/internal/appwidget/IAppWidgetHost;Ljava/lang/String;ILjava/util/List;I)[I
#NO_CATEGORY com.android.server.AppWidgetService.startListening(Lcom/android/internal/appwidget/IAppWidgetHost;Ljava/lang/String;ILjava/util/List;)[I
#NO_CATEGORY com.android.server.AppWidgetService.updateAppWidgetIds([ILandroid/widget/RemoteViews;)V
#NO_CATEGORY com.android.server.AppWidgetService.updateAppWidgetOptions(ILandroid/os/Bundle;)V
#NO_CATEGORY com.android.server.AppWidgetService.updateAppWidgetProvider(Landroid/content/ComponentName;Landroid/widget/RemoteViews;)V
#NO_CATEGORY com.android.server.BackupManagerService$ActiveRestoreSession.restorePackage(Ljava/lang/String;Landroid/app/backup/IRestoreObserver;)I
#NO_CATEGORY com.android.server.BackupManagerService$ActiveRestoreSession.restoreSome(JLandroid/app/backup/IRestoreObserver;[Ljava/lang/String;)I
#NO_CATEGORY com.android.server.BackupManagerService.fullBackup(Landroid/os/ParcelFileDescriptor;ZZZZ[Ljava/lang/String;)V
#NO_CATEGORY com.android.server.BackupManagerService.fullRestore(Landroid/os/ParcelFileDescriptor;)V
#NO_CATEGORY com.android.server.BackupManagerService.handleTimeout(ILjava/lang/Object;)V
#NO_CATEGORY com.android.server.BackupManagerService.logBackupComplete(Ljava/lang/String;)V
#NO_CATEGORY com.android.server.BackupManagerService.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z android.permission.WRITE_SETTINGS android.permission.WAKE_LOCK 
#NO_CATEGORY com.android.server.BackupManagerService.opComplete(I)V
#NO_CATEGORY com.android.server.BackupManagerService$PerformFullBackupTask.access$900(Lcom/android/server/BackupManagerService$PerformFullBackupTask;Landroid/content/pm/PackageInfo;Ljava/io/File;Z)V
#NO_CATEGORY com.android.server.BackupManagerService$PerformFullRestoreTask.installApk(Lcom/android/server/BackupManagerService$FileMetadata;Ljava/lang/String;Ljava/io/InputStream;)Z
#NO_CATEGORY com.android.server.BackupManagerService.prepareOperationTimeout(IJLcom/android/server/BackupManagerService$BackupRestoreTask;)V
#NO_CATEGORY com.android.server.BackupManagerService.restoreAtInstall(Ljava/lang/String;I)V
#NO_CATEGORY com.android.server.BackupManagerService.selectBackupTransport(Ljava/lang/String;)Ljava/lang/String;
#NO_CATEGORY com.android.server.BackupManagerService.setBackupPassword(Ljava/lang/String;Ljava/lang/String;)Z
#NO_CATEGORY com.android.server.BackupManagerService.setBackupProvisioned(Z)V
#NO_CATEGORY com.android.server.BackupManagerService.startConfirmationUi(ILjava/lang/String;)Z
#NO_CATEGORY com.android.server.ClipboardService.setPrimaryClip(Landroid/content/ClipData;)V
#NO_CATEGORY com.android.server.ConnectivityService$2.onUidRulesChanged(II)V
#NO_CATEGORY com.android.server.ConnectivityService.setDataDependency(IZ)V
#NO_CATEGORY com.android.server.ConnectivityService.setGlobalProxy(Landroid/net/ProxyProperties;)V
#NO_CATEGORY com.android.server.ConnectivityService.setMobileDataEnabled(Z)V
#NO_CATEGORY com.android.server.ConnectivityService.setNetworkPreference(I)V android.permission.BLUETOOTH android.permission.WRITE_SETTINGS android.permission.CHANGE_WIFI_STATE android.permission.CHANGE_NETWORK_STATE android.permission.BLUETOOTH_ADMIN android.permission.ACCESS_NETWORK_STATE 
#NO_CATEGORY com.android.server.ConnectivityService.setPolicyDataEnable(IZ)V
#NO_CATEGORY com.android.server.ConnectivityService.setRadio(IZ)Z
#NO_CATEGORY com.android.server.ConnectivityService.setRadios(Z)Z
#NO_CATEGORY com.android.server.ConnectivityService.setUsbTethering(Z)I
#NO_CATEGORY com.android.server.ConnectivityService.startLegacyVpn(Lcom/android/internal/net/VpnProfile;)V
NO_CATEGORY com.android.server.connectivity.Tethering.interfaceAdded(Ljava/lang/String;)V
NO_CATEGORY com.android.server.connectivity.Tethering.interfaceStatusChanged(Ljava/lang/String;Z)V
NO_CATEGORY com.android.server.connectivity.Tethering.setUsbTethering(Z)I
NO_CATEGORY com.android.server.connectivity.Tethering$TetherInterfaceSM.setLastErrorAndTransitionToInitialState(I)V
NO_CATEGORY com.android.server.connectivity.Tethering$TetherInterfaceSM$UnavailableState.processMessage(Landroid/os/Message;)Z
NO_CATEGORY com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState.processMessage(Landroid/os/Message;)Z
NO_CATEGORY com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState.processMessage(Landroid/os/Message;)Z
NO_CATEGORY com.android.server.CountryDetectorService.notifyReceivers(Landroid/location/Country;)V
NO_CATEGORY com.android.server.display.DisplayAdapter.dumpLocked(Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.display.DisplayDevice.dumpLocked(Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.display.DisplayDeviceInfo.setAssumedDensityForExternalDisplay(II)V
NO_CATEGORY com.android.server.display.DisplayManagerService.setDisplayHasContent(IZZ)V
NO_CATEGORY com.android.server.display.DisplayManagerService.setDisplayInfoOverrideFromWindowManager(ILandroid/view/DisplayInfo;)V
NO_CATEGORY com.android.server.display.LocalDisplayAdapter$LocalDisplayDevice.dumpLocked(Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.display.LogicalDisplay.dumpLocked(Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.display.LogicalDisplay.setDisplayInfoOverrideFromWindowManagerLocked(Landroid/view/DisplayInfo;)V
NO_CATEGORY com.android.server.display.OverlayDisplayAdapter.dumpLocked(Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.display.OverlayDisplayAdapter$OverlayDisplayHandle.dumpLocked(Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.display.OverlayDisplayWindow.dump(Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.display.WifiDisplayAdapter.dumpLocked(Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.display.WifiDisplayController.dump(Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.dreams.DreamController.dump(Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.dreams.DreamController.startDream(Landroid/os/Binder;Landroid/content/ComponentName;ZI)V
NO_CATEGORY com.android.server.dreams.DreamManagerService.setDreamComponents([Landroid/content/ComponentName;)V
NO_CATEGORY com.android.server.dreams.DreamManagerService.testDream(Landroid/content/ComponentName;)V
NO_CATEGORY com.android.server.DropBoxManagerService.add(Landroid/os/DropBoxManager$Entry;)V
NO_CATEGORY com.android.server.EventLogTags.writeBackupDataChanged(Ljava/lang/String;)V
NO_CATEGORY com.android.server.EventLogTags.writeBackupReset(Ljava/lang/String;)V
NO_CATEGORY com.android.server.EventLogTags.writeBackupStart(Ljava/lang/String;)V
NO_CATEGORY com.android.server.EventLogTags.writeBackupTransportFailure(Ljava/lang/String;)V
NO_CATEGORY com.android.server.EventLogTags.writeBootProgressPmsDataScanStart(J)V
NO_CATEGORY com.android.server.EventLogTags.writeBootProgressPmsReady(J)V
NO_CATEGORY com.android.server.EventLogTags.writeBootProgressPmsScanEnd(J)V
NO_CATEGORY com.android.server.EventLogTags.writeBootProgressPmsStart(J)V
NO_CATEGORY com.android.server.EventLogTags.writeBootProgressPmsSystemScanStart(J)V
NO_CATEGORY com.android.server.EventLogTags.writeBootProgressSystemRun(J)V
NO_CATEGORY com.android.server.EventLogTags.writeCacheFileDeleted(Ljava/lang/String;)V
NO_CATEGORY com.android.server.EventLogTags.writeConfigInstallFailed(Ljava/lang/String;)V
NO_CATEGORY com.android.server.EventLogTags.writeFreeStorageChanged(J)V
NO_CATEGORY com.android.server.EventLogTags.writeLockdownVpnConnected(I)V
NO_CATEGORY com.android.server.EventLogTags.writeLockdownVpnConnecting(I)V
NO_CATEGORY com.android.server.EventLogTags.writeLockdownVpnError(I)V
NO_CATEGORY com.android.server.EventLogTags.writeLowStorage(J)V
NO_CATEGORY com.android.server.EventLogTags.writePowerScreenBroadcastSend(I)V
NO_CATEGORY com.android.server.EventLogTags.writePowerSleepRequested(I)V
NO_CATEGORY com.android.server.EventLogTags.writeUnknownSourcesEnabled(I)V
NO_CATEGORY com.android.server.EventLogTags.writeWatchdog(Ljava/lang/String;)V
NO_CATEGORY com.android.server.input.InputManagerService.setCurrentKeyboardLayoutForInputDevice(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY com.android.server.input.InputManagerService.setDisplayViewports(Lcom/android/server/display/DisplayViewport;Lcom/android/server/display/DisplayViewport;)V
NO_CATEGORY com.android.server.input.InputManagerService.setFocusedApplication(Lcom/android/server/input/InputApplicationHandle;)V
NO_CATEGORY com.android.server.input.InputManagerService.setInputDispatchMode(ZZ)V
NO_CATEGORY com.android.server.input.InputManagerService.setInputWindows([Lcom/android/server/input/InputWindowHandle;)V
NO_CATEGORY com.android.server.input.InputManagerService.setSystemUiVisibility(I)V
NO_CATEGORY com.android.server.input.InputManagerService.vibrate(I[JILandroid/os/IBinder;)V
NO_CATEGORY com.android.server.InputMethodManagerService.addClient(Lcom/android/internal/view/IInputMethodClient;Lcom/android/internal/view/IInputContext;II)V
NO_CATEGORY com.android.server.InputMethodManagerService.handleMessage(Landroid/os/Message;)Z
NO_CATEGORY com.android.server.InputMethodManagerService$InputMethodFileManager.addInputMethodSubtypes(Landroid/view/inputmethod/InputMethodInfo;[Landroid/view/inputmethod/InputMethodSubtype;)V
NO_CATEGORY com.android.server.InputMethodManagerService$InputMethodFileManager.<init>(Ljava/util/HashMap;I)V
NO_CATEGORY com.android.server.InputMethodManagerService$InputMethodSettings.addSubtypeToHistory(Ljava/lang/String;Ljava/lang/String;)V android.permission.WRITE_SETTINGS 
NO_CATEGORY com.android.server.InputMethodManagerService$InputMethodSettings.appendAndPutEnabledInputMethodLocked(Ljava/lang/String;Z)V
NO_CATEGORY com.android.server.InputMethodManagerService$InputMethodSettings.buildAndPutEnabledInputMethodsStrRemovingIdLocked(Ljava/lang/StringBuilder;Ljava/util/List;Ljava/lang/String;)Z
NO_CATEGORY com.android.server.InputMethodManagerService$InputMethodSettings.putSelectedInputMethod(Ljava/lang/String;)V
NO_CATEGORY com.android.server.InputMethodManagerService$InputMethodSettings.putSelectedSubtype(I)V android.permission.WRITE_SETTINGS 
NO_CATEGORY com.android.server.InputMethodManagerService.notifySuggestionPicked(Landroid/text/style/SuggestionSpan;Ljava/lang/String;I)Z
NO_CATEGORY com.android.server.InputMethodManagerService.registerSuggestionSpansForNotification([Landroid/text/style/SuggestionSpan;)V
NO_CATEGORY com.android.server.InputMethodManagerService.setAdditionalInputMethodSubtypes(Ljava/lang/String;[Landroid/view/inputmethod/InputMethodSubtype;)V
NO_CATEGORY com.android.server.InputMethodManagerService.setCurrentInputMethodSubtype(Landroid/view/inputmethod/InputMethodSubtype;)Z
NO_CATEGORY com.android.server.InputMethodManagerService.setInputMethodAndSubtype(Landroid/os/IBinder;Ljava/lang/String;Landroid/view/inputmethod/InputMethodSubtype;)V
NO_CATEGORY com.android.server.InputMethodManagerService.setInputMethodEnabled(Ljava/lang/String;Z)Z
NO_CATEGORY com.android.server.InputMethodManagerService.setInputMethodEnabledLocked(Ljava/lang/String;Z)Z
NO_CATEGORY com.android.server.InputMethodManagerService.setInputMethod(Landroid/os/IBinder;Ljava/lang/String;)V
NO_CATEGORY com.android.server.InputMethodManagerService.setInputMethodLocked(Ljava/lang/String;I)V
NO_CATEGORY com.android.server.input.PersistentDataStore$InputDeviceState.removeKeyboardLayout(Ljava/lang/String;)Z
NO_CATEGORY com.android.server.input.PersistentDataStore.setCurrentKeyboardLayout(Ljava/lang/String;Ljava/lang/String;)Z
NO_CATEGORY com.android.server.IntentResolver.dumpFilter(Ljava/io/PrintWriter;Ljava/lang/String;Landroid/content/IntentFilter;)V
NO_CATEGORY com.android.server.IntentResolver.dump(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Z
NO_CATEGORY com.android.server.IntentResolver.dumpMap(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Z)Z
NO_CATEGORY com.android.server.IntentResolverOld.dumpFilter(Ljava/io/PrintWriter;Ljava/lang/String;Landroid/content/IntentFilter;)V
NO_CATEGORY com.android.server.IntentResolverOld.dump(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Z
NO_CATEGORY com.android.server.IntentResolverOld.dumpMap(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Z)Z
NO_CATEGORY com.android.server.LightsService$Light.pulse(II)V
NO_CATEGORY com.android.server.LightsService$Light.setBrightness(II)V
NO_CATEGORY com.android.server.LightsService$Light.setBrightness(I)V
NO_CATEGORY com.android.server.LightsService$Light.setColor(I)V
NO_CATEGORY com.android.server.LightsService$Light.setFlashing(IIII)V
NO_CATEGORY com.android.server.location.GeofenceManager.dump(Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.location.GpsLocationProvider.setRequest(Lcom/android/internal/location/ProviderRequest;Landroid/os/WorkSource;)V
NO_CATEGORY com.android.server.location.GpsLocationProvider.updateNetworkState(ILandroid/net/NetworkInfo;)V
NO_CATEGORY com.android.server.LocationManagerService.providerMeetsCriteria(Ljava/lang/String;Landroid/location/Criteria;)Z
NO_CATEGORY com.android.server.LocationManagerService$Receiver.callLocationChangedLocked(Landroid/location/Location;)Z
NO_CATEGORY com.android.server.LocationManagerService$Receiver.callProviderEnabledLocked(Ljava/lang/String;Z)Z
NO_CATEGORY com.android.server.LocationManagerService$Receiver.callStatusChangedLocked(Ljava/lang/String;ILandroid/os/Bundle;)Z android.permission.WAKE_LOCK 
NO_CATEGORY com.android.server.LocationManagerService.removeTestProvider(Ljava/lang/String;)V
NO_CATEGORY com.android.server.LocationManagerService.sendExtraCommand(Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)Z
NO_CATEGORY com.android.server.LocationManagerService.sendNiResponse(II)Z
NO_CATEGORY com.android.server.LocationManagerService.setTestProviderEnabled(Ljava/lang/String;Z)V
NO_CATEGORY com.android.server.LocationManagerService.setTestProviderLocation(Ljava/lang/String;Landroid/location/Location;)V
NO_CATEGORY com.android.server.LocationManagerService.setTestProviderStatus(Ljava/lang/String;ILandroid/os/Bundle;J)V
NO_CATEGORY com.android.server.location.MockProvider.dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
NO_CATEGORY com.android.server.location.MockProvider.sendExtraCommand(Ljava/lang/String;Landroid/os/Bundle;)Z
NO_CATEGORY com.android.server.location.MockProvider.setRequest(Lcom/android/internal/location/ProviderRequest;Landroid/os/WorkSource;)V
NO_CATEGORY com.android.server.location.MockProvider.setStatus(ILandroid/os/Bundle;J)V
NO_CATEGORY com.android.server.location.PassiveProvider.sendExtraCommand(Ljava/lang/String;Landroid/os/Bundle;)Z
NO_CATEGORY com.android.server.location.PassiveProvider.setRequest(Lcom/android/internal/location/ProviderRequest;Landroid/os/WorkSource;)V
NO_CATEGORY com.android.server.MountService.buildObbPath(Ljava/lang/String;IZ)Ljava/lang/String;
NO_CATEGORY com.android.server.MountService.changeEncryptionPassword(Ljava/lang/String;)I
NO_CATEGORY com.android.server.MountService.decryptStorage(Ljava/lang/String;)I
NO_CATEGORY com.android.server.MountService.onEvent(ILjava/lang/String;[Ljava/lang/String;)Z
NO_CATEGORY com.android.server.MountService.setUsbMassStorageEnabled(Z)V
NO_CATEGORY com.android.server.MountService.verifyEncryptionPassword(Ljava/lang/String;)I
NO_CATEGORY com.android.server.NotificationManagerService.enqueueNotificationInternal(Ljava/lang/String;IILjava/lang/String;ILandroid/app/Notification;[II)V
NO_CATEGORY com.android.server.NotificationManagerService.enqueueToast(Ljava/lang/String;Landroid/app/ITransientNotification;I)V
NO_CATEGORY com.android.server.NotificationManagerService$NotificationRecord.dump(Ljava/io/PrintWriter;Ljava/lang/String;Landroid/content/Context;)V
NO_CATEGORY com.android.server.NotificationManagerService.setNotificationsEnabledForPackage(Ljava/lang/String;Z)V
NO_CATEGORY com.android.server.NotificationManagerService$ToastRecord.dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
NO_CATEGORY com.android.server.NsdService$NativeCallbackReceiver.onEvent(ILjava/lang/String;[Ljava/lang/String;)Z
NO_CATEGORY com.android.server.NsdService$NsdStateMachine$DefaultState.processMessage(Landroid/os/Message;)Z
NO_CATEGORY com.android.server.NsdService$NsdStateMachine$DisabledState.processMessage(Landroid/os/Message;)Z
NO_CATEGORY com.android.server.NsdService.setEnabled(Z)V
NO_CATEGORY com.android.server.PackageManagerBackupAgent.onBackup(Landroid/os/ParcelFileDescriptor;Landroid/app/backup/BackupDataOutput;Landroid/os/ParcelFileDescriptor;)V
NO_CATEGORY com.android.server.PackageManagerBackupAgent.onRestore(Landroid/app/backup/BackupDataInput;ILandroid/os/ParcelFileDescriptor;)V
NO_CATEGORY com.android.server.pm.GrantedPermissions.setFlags(I)V
NO_CATEGORY com.android.server.pm.PackageManagerService$ActivityIntentResolver.addActivity(Landroid/content/pm/PackageParser$Activity;Ljava/lang/String;)V
NO_CATEGORY com.android.server.pm.PackageManagerService$ActivityIntentResolver.dumpFilter(Ljava/io/PrintWriter;Ljava/lang/String;Landroid/content/IntentFilter;)V
NO_CATEGORY com.android.server.pm.PackageManagerService$ActivityIntentResolver.dumpFilter(Ljava/io/PrintWriter;Ljava/lang/String;Landroid/content/pm/PackageParser$ActivityIntentInfo;)V
NO_CATEGORY com.android.server.pm.PackageManagerService.addPermissionLocked(Landroid/content/pm/PermissionInfo;Z)Z
NO_CATEGORY com.android.server.pm.PackageManagerService.addPreferredActivity(Landroid/content/IntentFilter;I[Landroid/content/ComponentName;Landroid/content/ComponentName;I)V
NO_CATEGORY com.android.server.pm.PackageManagerService$AppDirObserver.onEvent(ILjava/lang/String;)V
NO_CATEGORY com.android.server.pm.PackageManagerService$AsecInstallArgs.matchContainer(Ljava/lang/String;)Z
NO_CATEGORY com.android.server.pm.PackageManagerService$DumpState.setDump(I)V
NO_CATEGORY com.android.server.pm.PackageManagerService$DumpState.setOptionEnabled(I)V
NO_CATEGORY com.android.server.pm.PackageManagerService.extendVerificationTimeout(IIJ)V
NO_CATEGORY com.android.server.pm.PackageManagerService.grantPermission(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY com.android.server.pm.PackageManagerService.installExistingPackage(Ljava/lang/String;)I
NO_CATEGORY com.android.server.pm.PackageManagerService.movePackage(Ljava/lang/String;Landroid/content/pm/IPackageMoveObserver;I)V
NO_CATEGORY com.android.server.pm.PackageManagerService$PackageRemovedInfo.sendBroadcast(ZZZ)V
NO_CATEGORY com.android.server.pm.PackageManagerService.performDexOpt(Ljava/lang/String;)Z
NO_CATEGORY com.android.server.pm.PackageManagerService.readPermission(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)V
NO_CATEGORY com.android.server.pm.PackageManagerService.reportSettingsProblem(ILjava/lang/String;)V
NO_CATEGORY com.android.server.pm.PackageManagerService.resolveContentProvider(Ljava/lang/String;II)Landroid/content/pm/ProviderInfo;
NO_CATEGORY com.android.server.pm.PackageManagerService.resolveService(Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/pm/ResolveInfo;
NO_CATEGORY com.android.server.pm.PackageManagerService.sendPackageBroadcast(Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;Ljava/lang/String;Landroid/content/IIntentReceiver;[I)V
NO_CATEGORY com.android.server.pm.PackageManagerService$ServiceIntentResolver.addService(Landroid/content/pm/PackageParser$Service;)V
NO_CATEGORY com.android.server.pm.PackageManagerService$ServiceIntentResolver.dumpFilter(Ljava/io/PrintWriter;Ljava/lang/String;Landroid/content/IntentFilter;)V
NO_CATEGORY com.android.server.pm.PackageManagerService$ServiceIntentResolver.dumpFilter(Ljava/io/PrintWriter;Ljava/lang/String;Landroid/content/pm/PackageParser$ServiceIntentInfo;)V
NO_CATEGORY com.android.server.pm.PackageManagerService.setApplicationEnabledSetting(Ljava/lang/String;III)V
NO_CATEGORY com.android.server.pm.PackageManagerService.setComponentEnabledSetting(Landroid/content/ComponentName;III)V
NO_CATEGORY com.android.server.pm.PackageManagerService.setInstallerPackageName(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY com.android.server.pm.PackageManagerService.setInstallLocation(I)Z
NO_CATEGORY com.android.server.pm.PackageManagerService.setPackageStoppedState(Ljava/lang/String;ZI)V
NO_CATEGORY com.android.server.pm.PackageManagerService.setPermissionEnforced(Ljava/lang/String;Z)V
NO_CATEGORY com.android.server.pm.PackageSettingBase.copyFrom(Lcom/android/server/pm/PackageSettingBase;)V
NO_CATEGORY com.android.server.pm.PackageSettingBase.setDisabledComponentsCopy(Ljava/util/HashSet;I)V
NO_CATEGORY com.android.server.pm.PackageSettingBase.setEnabledComponentsCopy(Ljava/util/HashSet;I)V
NO_CATEGORY com.android.server.pm.PackageVerificationState.addSufficientVerifier(I)V
NO_CATEGORY com.android.server.pm.PreferredIntentResolver.dumpFilter(Ljava/io/PrintWriter;Ljava/lang/String;Landroid/content/IntentFilter;)V
NO_CATEGORY com.android.server.pm.PreferredIntentResolver.dumpFilter(Ljava/io/PrintWriter;Ljava/lang/String;Lcom/android/server/pm/PreferredActivity;)V
NO_CATEGORY com.android.server.pm.Settings.addPackageLPw(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Ljava/io/File;Ljava/lang/String;III)Lcom/android/server/pm/PackageSetting;
NO_CATEGORY com.android.server.pm.Settings.addSharedUserLPw(Ljava/lang/String;II)Lcom/android/server/pm/SharedUserSetting;
NO_CATEGORY com.android.server.pm.Settings.createNewUserLILPw(Lcom/android/server/pm/Installer;ILjava/io/File;)V
NO_CATEGORY com.android.server.pm.Settings.editPreferredActivitiesLPw(I)Lcom/android/server/pm/PreferredIntentResolver;
NO_CATEGORY com.android.server.pm.Settings.setInstallerPackageName(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY com.android.server.pm.Settings.setInstallStatus(Ljava/lang/String;I)V
NO_CATEGORY com.android.server.pm.Settings.setPackageStoppedStateLPw(Ljava/lang/String;ZZII)Z
NO_CATEGORY com.android.server.pm.UserManagerService.createUser(Ljava/lang/String;I)Landroid/content/pm/UserInfo;
NO_CATEGORY com.android.server.pm.UserManagerService.finishRemoveUser(I)V
NO_CATEGORY com.android.server.pm.UserManagerService.makeInitialized(I)V
NO_CATEGORY com.android.server.pm.UserManagerService.removeUser(I)Z
NO_CATEGORY com.android.server.pm.UserManagerService.setUserIcon(ILandroid/graphics/Bitmap;)V
NO_CATEGORY com.android.server.pm.UserManagerService.setUserName(ILjava/lang/String;)V
NO_CATEGORY com.android.server.pm.UserManagerService.userForeground(I)V
NO_CATEGORY com.android.server.power.DisplayPowerController.dump(Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.power.DisplayPowerState$1.setValue(Lcom/android/server/power/DisplayPowerState;F)V
NO_CATEGORY com.android.server.power.DisplayPowerState$1.setValue(Ljava/lang/Object;F)V
NO_CATEGORY com.android.server.power.DisplayPowerState$2.setValue(Lcom/android/server/power/DisplayPowerState;I)V
NO_CATEGORY com.android.server.power.DisplayPowerState$2.setValue(Ljava/lang/Object;I)V
NO_CATEGORY com.android.server.power.DisplayPowerState.dump(Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.power.DisplayPowerState$PhotonicModulator.dump(Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.power.ElectronBeam.dump(Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.power.PowerManagerService.setAttentionLight(ZI)V
NO_CATEGORY com.android.server.power.PowerManagerService.setButtonBrightnessOverrideFromWindowManager(I)V
NO_CATEGORY com.android.server.power.PowerManagerService.setMaximumScreenOffTimeoutFromDeviceAdmin(I)V
NO_CATEGORY com.android.server.power.PowerManagerService.setScreenBrightnessOverrideFromWindowManager(I)V
NO_CATEGORY com.android.server.power.PowerManagerService.setStayOnSetting(I)V
NO_CATEGORY com.android.server.power.PowerManagerService.setTemporaryScreenAutoBrightnessAdjustmentSettingOverride(F)V
NO_CATEGORY com.android.server.power.PowerManagerService.setTemporaryScreenBrightnessSettingOverride(I)V
NO_CATEGORY com.android.server.power.PowerManagerService.setUserActivityTimeoutOverrideFromWindowManager(J)V
NO_CATEGORY com.android.server.power.PowerManagerService$WakeLock.updateProperties(ILjava/lang/String;Landroid/os/WorkSource;II)V
NO_CATEGORY com.android.server.power.WirelessChargerDetector.dump(Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.PreferredComponent.dump(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY com.android.server.ProcessMap.put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;
NO_CATEGORY com.android.server.RecognitionManagerService.setCurRecognizer(Landroid/content/ComponentName;I)V
NO_CATEGORY com.android.server.SerialService.openSerialPort(Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;
NO_CATEGORY com.android.server.sip.SipHelper.sendBye(Ljavax/sip/Dialog;)V
NO_CATEGORY com.android.server.sip.SipHelper.sendInviteAck(Ljavax/sip/ResponseEvent;Ljavax/sip/Dialog;)V
NO_CATEGORY com.android.server.sip.SipHelper.sendInvite(Landroid/net/sip/SipProfile;Landroid/net/sip/SipProfile;Ljava/lang/String;Ljava/lang/String;Lgov/nist/javax/sip/header/extensions/ReferredByHeader;Ljava/lang/String;)Ljavax/sip/ClientTransaction;
NO_CATEGORY com.android.server.sip.SipHelper.sendInviteOk(Ljavax/sip/RequestEvent;Landroid/net/sip/SipProfile;Ljava/lang/String;Ljavax/sip/ServerTransaction;Ljava/lang/String;I)Ljavax/sip/ServerTransaction;
NO_CATEGORY com.android.server.sip.SipHelper.sendOptions(Landroid/net/sip/SipProfile;Landroid/net/sip/SipProfile;Ljava/lang/String;)Ljavax/sip/ClientTransaction;
NO_CATEGORY com.android.server.sip.SipHelper.sendReferNotify(Ljavax/sip/Dialog;Ljava/lang/String;)V
NO_CATEGORY com.android.server.sip.SipHelper.sendRegister(Landroid/net/sip/SipProfile;Ljava/lang/String;I)Ljavax/sip/ClientTransaction;
NO_CATEGORY com.android.server.sip.SipHelper.sendReinvite(Ljavax/sip/Dialog;Ljava/lang/String;)Ljavax/sip/ClientTransaction;
NO_CATEGORY com.android.server.sip.SipHelper.sendRinging(Ljavax/sip/RequestEvent;Ljava/lang/String;)Ljavax/sip/ServerTransaction;
NO_CATEGORY com.android.server.sip.SipService$SipSessionGroupExt.setListener(Landroid/net/sip/ISipSessionListener;)V
NO_CATEGORY com.android.server.sip.SipService$SipSessionGroupExt.setWakeupTimer(Lcom/android/server/sip/SipWakeupTimer;)V
NO_CATEGORY com.android.server.sip.SipSessionGroup$SipSessionImpl.setListener(Landroid/net/sip/ISipSessionListener;)V
NO_CATEGORY com.android.server.sip.SipSessionGroup$SipSessionImpl.startKeepAliveProcess(ILandroid/net/sip/SipProfile;Lcom/android/server/sip/SipSessionGroup$KeepAliveProcessCallback;)V
NO_CATEGORY com.android.server.sip.SipSessionGroup$SipSessionImpl.startKeepAliveProcess(ILcom/android/server/sip/SipSessionGroup$KeepAliveProcessCallback;)V
NO_CATEGORY com.android.server.sip.SipWakeupTimer.set(ILjava/lang/Runnable;)V
NO_CATEGORY com.android.server.StatusBarManagerService.addNotification(Lcom/android/internal/statusbar/StatusBarNotification;)Landroid/os/IBinder;
NO_CATEGORY com.android.server.StatusBarManagerService.setHardKeyboardEnabled(Z)V
NO_CATEGORY com.android.server.StatusBarManagerService.setIcon(Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;)V
NO_CATEGORY com.android.server.StatusBarManagerService.setIconVisibility(Ljava/lang/String;Z)V
NO_CATEGORY com.android.server.StatusBarManagerService.setSystemUiVisibility(II)V
NO_CATEGORY com.android.server.StatusBarManagerService.updateNotification(Landroid/os/IBinder;Lcom/android/internal/statusbar/StatusBarNotification;)V
NO_CATEGORY com.android.server.TelephonyRegistry.notifyCallForwardingChanged(Z)V
NO_CATEGORY com.android.server.TelephonyRegistry.notifyCallState(ILjava/lang/String;)V
NO_CATEGORY com.android.server.TelephonyRegistry.notifyCellLocation(Landroid/os/Bundle;)V
NO_CATEGORY com.android.server.TelephonyRegistry.notifyDataActivity(I)V
NO_CATEGORY com.android.server.TelephonyRegistry.notifyMessageWaitingChanged(Z)V
NO_CATEGORY com.android.server.TelephonyRegistry.notifyOtaspChanged(I)V
NO_CATEGORY com.android.server.TelephonyRegistry.notifyServiceState(Landroid/telephony/ServiceState;)V
NO_CATEGORY com.android.server.TelephonyRegistry.notifySignalStrength(Landroid/telephony/SignalStrength;)V
NO_CATEGORY com.android.server.TextServicesManagerService.getSpellCheckerService(Ljava/lang/String;Ljava/lang/String;Lcom/android/internal/textservice/ITextServicesSessionListener;Lcom/android/internal/textservice/ISpellCheckerSessionListener;Landroid/os/Bundle;)V
NO_CATEGORY com.android.server.TextServicesManagerService.setCurrentSpellChecker(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY com.android.server.TextServicesManagerService.setCurrentSpellCheckerSubtype(Ljava/lang/String;I)V
NO_CATEGORY com.android.server.TextServicesManagerService.setSpellCheckerEnabled(Z)V
NO_CATEGORY com.android.server.TextServicesManagerService$TextServicesSettings.putSelectedSpellChecker(Ljava/lang/String;)V
NO_CATEGORY com.android.server.TextServicesManagerService$TextServicesSettings.putSelectedSpellCheckerSubtype(I)V
NO_CATEGORY com.android.server.TextServicesManagerService$TextServicesSettings.setSpellCheckerEnabled(Z)V
NO_CATEGORY com.android.server.ThrottleService$DataRecorder.setNextPeriod(Ljava/util/Calendar;Ljava/util/Calendar;)Z
NO_CATEGORY com.android.server.UiModeManagerService.disableCarMode(I)V
NO_CATEGORY com.android.server.UiModeManagerService.enableCarMode(I)V
NO_CATEGORY com.android.server.UiModeManagerService.setNightMode(I)V
NO_CATEGORY com.android.server.UpdateLockService.sendLockChangedBroadcast(Z)V
NO_CATEGORY com.android.server.usb.UsbDebuggingManager.access$700(Lcom/android/server/usb/UsbDebuggingManager;Ljava/lang/String;)V
NO_CATEGORY com.android.server.usb.UsbDebuggingManager.setAdbEnabled(Z)V
NO_CATEGORY com.android.server.usb.UsbHostManager.openDevice(Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;
NO_CATEGORY com.android.server.usb.UsbService.hasAccessoryPermission(Landroid/hardware/usb/UsbAccessory;)Z
NO_CATEGORY com.android.server.usb.UsbService.hasDefaults(Ljava/lang/String;I)Z
NO_CATEGORY com.android.server.usb.UsbService.hasDevicePermission(Landroid/hardware/usb/UsbDevice;)Z
NO_CATEGORY com.android.server.usb.UsbService.openAccessory(Landroid/hardware/usb/UsbAccessory;)Landroid/os/ParcelFileDescriptor;
NO_CATEGORY com.android.server.usb.UsbService.openDevice(Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;
NO_CATEGORY com.android.server.usb.UsbService.setAccessoryPackage(Landroid/hardware/usb/UsbAccessory;Ljava/lang/String;I)V
NO_CATEGORY com.android.server.usb.UsbService.setCurrentFunction(Ljava/lang/String;Z)V
NO_CATEGORY com.android.server.usb.UsbService.setDevicePackage(Landroid/hardware/usb/UsbDevice;Ljava/lang/String;I)V
NO_CATEGORY com.android.server.usb.UsbService.setMassStorageBackingFile(Ljava/lang/String;)V
NO_CATEGORY com.android.server.usb.UsbSettingsManager.accessoryAttached(Landroid/hardware/usb/UsbAccessory;)V
NO_CATEGORY com.android.server.usb.UsbSettingsManager.accessoryDetached(Landroid/hardware/usb/UsbAccessory;)V
NO_CATEGORY com.android.server.usb.UsbSettingsManager.deviceAttached(Landroid/hardware/usb/UsbDevice;)V
NO_CATEGORY com.android.server.usb.UsbSettingsManager.deviceDetached(Landroid/hardware/usb/UsbDevice;)V
NO_CATEGORY com.android.server.usb.UsbSettingsManager.grantAccessoryPermission(Landroid/hardware/usb/UsbAccessory;I)V
NO_CATEGORY com.android.server.usb.UsbSettingsManager.grantDevicePermission(Landroid/hardware/usb/UsbDevice;I)V
NO_CATEGORY com.android.server.usb.UsbSettingsManager.hasPermission(Landroid/hardware/usb/UsbAccessory;)Z
NO_CATEGORY com.android.server.usb.UsbSettingsManager.hasPermission(Landroid/hardware/usb/UsbDevice;)Z
NO_CATEGORY com.android.server.usb.UsbSettingsManager.requestPermission(Landroid/hardware/usb/UsbAccessory;Ljava/lang/String;Landroid/app/PendingIntent;)V
NO_CATEGORY com.android.server.usb.UsbSettingsManager.requestPermission(Landroid/hardware/usb/UsbDevice;Ljava/lang/String;Landroid/app/PendingIntent;)V
NO_CATEGORY com.android.server.usb.UsbSettingsManager.setAccessoryPackage(Landroid/hardware/usb/UsbAccessory;Ljava/lang/String;)V
NO_CATEGORY com.android.server.usb.UsbSettingsManager.setDevicePackage(Landroid/hardware/usb/UsbDevice;Ljava/lang/String;)V
NO_CATEGORY com.android.server.WallpaperManagerService.bindWallpaperComponentLocked(Landroid/content/ComponentName;ZZLcom/android/server/WallpaperManagerService$WallpaperData;Landroid/os/IRemoteCallback;)Z
NO_CATEGORY com.android.server.WallpaperManagerService.hasNamedWallpaper(Ljava/lang/String;)Z
NO_CATEGORY com.android.server.WallpaperManagerService$MyPackageMonitor.onPackageUpdateFinished(Ljava/lang/String;I)V
NO_CATEGORY com.android.server.WallpaperManagerService$MyPackageMonitor.onPackageUpdateStarted(Ljava/lang/String;I)V
NO_CATEGORY com.android.server.WallpaperManagerService.setDimensionHints(II)V
NO_CATEGORY com.android.server.WallpaperManagerService.settingsRestored()V
NO_CATEGORY com.android.server.WallpaperManagerService.setWallpaperComponent(Landroid/content/ComponentName;)V
NO_CATEGORY com.android.server.WallpaperManagerService.setWallpaper(Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;
NO_CATEGORY com.android.server.WallpaperManagerService.switchUser(ILandroid/os/IRemoteCallback;)V
NO_CATEGORY com.android.server.WallpaperManagerService.updateWallpaperBitmapLocked(Ljava/lang/String;Lcom/android/server/WallpaperManagerService$WallpaperData;)Landroid/os/ParcelFileDescriptor;
NO_CATEGORY com.android.server.WallpaperManagerService$WallpaperConnection.setWallpaper(Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;
NO_CATEGORY com.android.server.WiredAccessoryManager.notifyWiredAccessoryChanged(JII)V
NO_CATEGORY com.android.server.wm.AppWindowToken.dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
NO_CATEGORY com.android.server.wm.BlackFrame$BlackSurface.setMatrix(Landroid/graphics/Matrix;)V
NO_CATEGORY com.android.server.wm.BlackFrame.setMatrix(Landroid/graphics/Matrix;)V
NO_CATEGORY com.android.server.wm.DimAnimator$Parameters.printTo(Ljava/lang/String;Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.wm.DimAnimator.printTo(Ljava/lang/String;Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.wm.DimSurface.printTo(Ljava/lang/String;Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.wm.DisplayContent.dump(Ljava/lang/String;Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.wm.DragState.sendDragStartedIfNeededLw(Lcom/android/server/wm/WindowState;)V
NO_CATEGORY com.android.server.wm.InputMonitor.notifyANR(Lcom/android/server/input/InputApplicationHandle;Lcom/android/server/input/InputWindowHandle;)J
NO_CATEGORY com.android.server.wm.InputMonitor.notifyLidSwitchChanged(JZ)V android.permission.USE_CREDENTIALS android.permission.MANAGE_ACCOUNTS android.permission.GET_ACCOUNTS android.permission.WAKE_LOCK android.permission.MODIFY_AUDIO_SETTINGS 
NO_CATEGORY com.android.server.wm.InputMonitor.setFocusedAppLw(Lcom/android/server/wm/AppWindowToken;)V
NO_CATEGORY com.android.server.wm.InputMonitor.setUpdateInputWindowsNeededLw()V
NO_CATEGORY com.android.server.wm.InputMonitor.updateInputWindowsLw(Z)V
NO_CATEGORY com.android.server.wm.ScreenRotationAnimation.dismiss(Landroid/view/SurfaceSession;JFII)Z
NO_CATEGORY com.android.server.wm.ScreenRotationAnimation.printTo(Ljava/lang/String;Ljava/io/PrintWriter;)V
NO_CATEGORY com.android.server.wm.ScreenRotationAnimation.setRotationInTransaction(ILandroid/view/SurfaceSession;JFII)Z
NO_CATEGORY com.android.server.wm.Session.sendWallpaperCommand(Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;Z)Landroid/os/Bundle;
NO_CATEGORY com.android.server.wm.Session.setInsets(Landroid/view/IWindow;ILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Region;)V
NO_CATEGORY com.android.server.wm.Session.setTransparentRegion(Landroid/view/IWindow;Landroid/graphics/Region;)V
NO_CATEGORY com.android.server.wm.Session.setUniverseTransform(Landroid/os/IBinder;FFFFFFF)V
NO_CATEGORY com.android.server.wm.Session.setWallpaperPosition(Landroid/os/IBinder;FFFF)V
NO_CATEGORY com.android.server.wm.StrictModeFlash.setVisibility(Z)V
NO_CATEGORY com.android.server.wm.ViewServer.access$000(Ljava/net/Socket;Ljava/lang/String;)Z
NO_CATEGORY com.android.server.wm.WindowAnimator.dumpLocked(Ljava/io/PrintWriter;Ljava/lang/String;Z)V
NO_CATEGORY com.android.server.wm.WindowAnimator.setAppLayoutChanges(Lcom/android/server/wm/AppWindowAnimator;ILjava/lang/String;)V
NO_CATEGORY com.android.server.wm.WindowAnimator.setPendingLayoutChanges(II)V
NO_CATEGORY com.android.server.wm.WindowAnimator.setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V
NO_CATEGORY com.android.server.wm.WindowManagerService.addAppToken(IILandroid/view/IApplicationToken;IIZZ)V
NO_CATEGORY com.android.server.wm.WindowManagerService.addDisplayContentChangeListener(ILandroid/view/IDisplayContentChangeListener;)V
NO_CATEGORY com.android.server.wm.WindowManagerService.addWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/view/WindowManager$LayoutParams;IILandroid/graphics/Rect;Landroid/view/InputChannel;)I
NO_CATEGORY com.android.server.wm.WindowManagerService.addWindowToken(Landroid/os/IBinder;I)V
NO_CATEGORY com.android.server.wm.WindowManagerService.createDisplayContentLocked(Landroid/view/Display;)V
NO_CATEGORY com.android.server.wm.WindowManagerService.dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
NO_CATEGORY com.android.server.wm.WindowManagerService.dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
NO_CATEGORY com.android.server.wm.WindowManagerService.dumpSessionsLocked(Ljava/io/PrintWriter;Z)V
NO_CATEGORY com.android.server.wm.WindowManagerService.dumpTokensLocked(Ljava/io/PrintWriter;Z)V
NO_CATEGORY com.android.server.wm.WindowManagerService.dumpWindows(Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
NO_CATEGORY com.android.server.wm.WindowManagerService.dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
NO_CATEGORY com.android.server.wm.WindowManagerService.dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
NO_CATEGORY com.android.server.wm.WindowManagerService.saveANRStateLocked(Lcom/android/server/wm/AppWindowToken;Lcom/android/server/wm/WindowState;)V
NO_CATEGORY com.android.server.wm.WindowManagerService.sendWindowWallpaperCommandLocked(Lcom/android/server/wm/WindowState;Ljava/lang/String;IIILandroid/os/Bundle;Z)Landroid/os/Bundle;
NO_CATEGORY com.android.server.wm.WindowManagerService.setAnimationScale(IF)V
NO_CATEGORY com.android.server.wm.WindowManagerService.setAnimationScales([F)V
NO_CATEGORY com.android.server.wm.WindowManagerService.setAnimDimParams(ILcom/android/server/wm/DimAnimator$Parameters;)V
NO_CATEGORY com.android.server.wm.WindowManagerService.setAppStartingWindow(Landroid/os/IBinder;Ljava/lang/String;ILandroid/content/res/CompatibilityInfo;Ljava/lang/CharSequence;IIILandroid/os/IBinder;Z)V
NO_CATEGORY com.android.server.wm.WindowManagerService.setFocusedApp(Landroid/os/IBinder;Z)V
NO_CATEGORY com.android.server.wm.WindowManagerService.setForcedDisplayDensity(II)V
NO_CATEGORY com.android.server.wm.WindowManagerService.setForcedDisplaySize(III)V
NO_CATEGORY com.android.server.wm.WindowManagerService.setInputFilter(Landroid/view/IInputFilter;)V
NO_CATEGORY com.android.server.wm.WindowManagerService.setStrictModeVisualIndicatorPreference(Ljava/lang/String;)V
NO_CATEGORY com.android.server.wm.WindowManagerService.setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZ)Z
NO_CATEGORY com.android.server.wm.WindowManagerService.setTransparentRegionHint(Lcom/android/server/wm/WindowStateAnimator;Landroid/graphics/Region;)V
NO_CATEGORY com.android.server.wm.WindowManagerService.setTransparentRegionWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/graphics/Region;)V
NO_CATEGORY com.android.server.wm.WindowManagerService.setUniverseTransformLocked(Lcom/android/server/wm/WindowState;FFFFFFF)V
NO_CATEGORY com.android.server.wm.WindowManagerService.setWindowWallpaperPositionLocked(Lcom/android/server/wm/WindowState;FFFF)V
NO_CATEGORY com.android.server.wm.WindowManagerService.startAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;I)V
NO_CATEGORY com.android.server.wm.WindowManagerService.startFreezingScreen(II)V
NO_CATEGORY com.android.server.wm.WindowManagerService.updateOrientationFromAppTokensLocked(Z)Z
NO_CATEGORY com.android.server.wm.WindowManagerService.updateRotationUncheckedLocked(Z)Z
NO_CATEGORY com.android.server.wm.WindowManagerService.updateRotationUnchecked(ZZ)V
NO_CATEGORY com.android.server.wm.WindowManagerService.updateRotation(ZZ)V
NO_CATEGORY com.android.server.wm.WindowManagerService.updateStatusBarVisibilityLocked(I)V
NO_CATEGORY com.android.server.wm.WindowManagerService.updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;Z)V
NO_CATEGORY com.android.server.wm.WindowManagerService.viewServerWindowCommand(Ljava/net/Socket;Ljava/lang/String;Ljava/lang/String;)Z
NO_CATEGORY com.android.server.wm.WindowStateAnimator.dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V
NO_CATEGORY com.android.server.wm.WindowStateAnimator.setSurfaceBoundariesLocked(Z)V
NO_CATEGORY com.android.server.wm.WindowStateAnimator.setTransparentRegionHint(Landroid/graphics/Region;)V
NO_CATEGORY com.android.server.wm.WindowStateAnimator.setWallpaperOffset(II)V
NO_CATEGORY com.android.server.wm.WindowStateAnimator$SurfaceTrace.setPosition(FF)V
NO_CATEGORY com.android.server.wm.WindowStateAnimator$SurfaceTrace.setSize(II)V
NO_CATEGORY com.android.server.wm.WindowStateAnimator$SurfaceTrace.setWindowCrop(Landroid/graphics/Rect;)V
NO_CATEGORY com.android.server.wm.WindowState.dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V
NO_CATEGORY com.android.soundrecorder.RemainingTimeCalculator.setBitRate(I)V
NO_CATEGORY com.android.soundrecorder.SoundRecorder.onCreate(Landroid/os/Bundle;)V
#NO_CATEGORY com.android.systemui.ExpandHelper.setGlow(F)V
#NO_CATEGORY com.android.systemui.ExpandHelper$ViewScaler.setHeight(F)V
#NO_CATEGORY com.android.systemui.media.NotificationPlayer.setUsesWakeLock(Landroid/content/Context;)V
#NO_CATEGORY com.android.systemui.recent.RecentsHorizontalScrollView.setLayoutTransition(Landroid/animation/LayoutTransition;)V
#NO_CATEGORY com.android.systemui.recent.RecentsHorizontalScrollView.setMinSwipeAlpha(F)V
#NO_CATEGORY com.android.systemui.recent.RecentsPanelView.setMinSwipeAlpha(F)V
#NO_CATEGORY com.android.systemui.recent.RecentsVerticalScrollView.setLayoutTransition(Landroid/animation/LayoutTransition;)V
#NO_CATEGORY com.android.systemui.recent.RecentsVerticalScrollView.setMinSwipeAlpha(F)V
#NO_CATEGORY com.android.systemui.screenshot.GlobalScreenshot.notifyScreenshotError(Landroid/content/Context;Landroid/app/NotificationManager;)V android.permission.VIBRATE 
#NO_CATEGORY com.android.systemui.screenshot.SaveImageInBackgroundTask.onPostExecute(Lcom/android/systemui/screenshot/SaveImageInBackgroundData;)V
#NO_CATEGORY com.android.systemui.SearchPanelView.setStatusBarView(Landroid/view/View;)V
#NO_CATEGORY com.android.systemui.statusbar.AnimatedImageView.setImageDrawable(Landroid/graphics/drawable/Drawable;)V
#NO_CATEGORY com.android.systemui.statusbar.AnimatedImageView.setImageResource(I)V
#NO_CATEGORY com.android.systemui.statusbar.BaseStatusBar.inflateViews(Lcom/android/systemui/statusbar/NotificationData$Entry;Landroid/view/ViewGroup;)Z
#NO_CATEGORY com.android.systemui.statusbar.CommandQueue$H.handleMessage(Landroid/os/Message;)V
#NO_CATEGORY com.android.systemui.statusbar.CommandQueue.setHardKeyboardStatus(ZZ)V
#NO_CATEGORY com.android.systemui.statusbar.CommandQueue.setIcon(ILcom/android/internal/statusbar/StatusBarIcon;)V
#NO_CATEGORY com.android.systemui.statusbar.CommandQueue.setNavigationIconHints(I)V
#NO_CATEGORY com.android.systemui.statusbar.CommandQueue.setSystemUiVisibility(II)V
#NO_CATEGORY com.android.systemui.statusbar.DelegateViewHelper.setInitialTouchRegion([Landroid/view/View;)V
#NO_CATEGORY com.android.systemui.statusbar.NotificationData$Entry.setUserExpanded(Z)Z
#NO_CATEGORY com.android.systemui.statusbar.NotificationData.setUserExpanded(Landroid/view/View;Z)Z
#NO_CATEGORY com.android.systemui.statusbar.NotificationData.setUserLocked(Landroid/view/View;Z)Z
#NO_CATEGORY com.android.systemui.statusbar.phone.NavigationBarView.notifyScreenOn(Z)V
#NO_CATEGORY com.android.systemui.statusbar.phone.NavigationBarView.setBar(Lcom/android/systemui/statusbar/BaseStatusBar;)V
#NO_CATEGORY com.android.systemui.statusbar.phone.NavigationBarView.setDelegateView(Landroid/view/View;)V
#NO_CATEGORY com.android.systemui.statusbar.phone.NavigationBarView.setDisabledFlags(I)V
#NO_CATEGORY com.android.systemui.statusbar.phone.NavigationBarView.setLowProfile(Z)V
#NO_CATEGORY com.android.systemui.statusbar.phone.NavigationBarView.setMenuVisibility(Z)V
#NO_CATEGORY com.android.systemui.statusbar.phone.NavigationBarView.setNavigationIconHints(I)V
#NO_CATEGORY com.android.systemui.statusbar.phone.NavigationBarView.setSlippery(Z)V
#NO_CATEGORY com.android.systemui.statusbar.phone.PanelBar.setPanelHolder(Lcom/android/systemui/statusbar/phone/PanelHolder;)V
#NO_CATEGORY com.android.systemui.statusbar.phone.PanelHolder.setSelectedPanel(Lcom/android/systemui/statusbar/phone/PanelView;)V
#NO_CATEGORY com.android.systemui.statusbar.phone.PanelView.setExpandedFraction(F)V
#NO_CATEGORY com.android.systemui.statusbar.phone.PanelView.setExpandedHeight(F)V
#NO_CATEGORY com.android.systemui.statusbar.phone.PhoneStatusBar$FastColorDrawable.setAlpha(I)V
#NO_CATEGORY com.android.systemui.statusbar.phone.PhoneStatusBar$FastColorDrawable.setBounds(IIII)V
#NO_CATEGORY com.android.systemui.statusbar.phone.PhoneStatusBar$FastColorDrawable.setBounds(Landroid/graphics/Rect;)V
#NO_CATEGORY com.android.systemui.statusbar.phone.PhoneStatusBar$FastColorDrawable.setColorFilter(Landroid/graphics/ColorFilter;)V
#NO_CATEGORY com.android.systemui.statusbar.phone.PhoneStatusBar.setHardKeyboardStatus(ZZ)V
#NO_CATEGORY com.android.systemui.statusbar.phone.PhoneStatusBar.setSystemUiVisibility(II)V
#NO_CATEGORY com.android.systemui.statusbar.phone.PhoneStatusBar.setVisibilityWhenDone(Landroid/animation/Animator;Landroid/view/View;I)Landroid/animation/Animator;
#NO_CATEGORY com.android.systemui.statusbar.phone.PhoneStatusBar.startActivityDismissingKeyguard(Landroid/content/Intent;Z)V
#NO_CATEGORY com.android.systemui.statusbar.phone.PhoneStatusBarView.startOpeningPanel(Lcom/android/systemui/statusbar/phone/PanelView;)V
#NO_CATEGORY com.android.systemui.statusbar.phone.QuickSettings.setImeWindowStatus(Z)V
#NO_CATEGORY com.android.systemui.statusbar.phone.QuickSettingsTileView.setContent(ILandroid/view/LayoutInflater;)V
#NO_CATEGORY com.android.systemui.statusbar.phone.SettingsPanelView.setBar(Lcom/android/systemui/statusbar/phone/PanelBar;)V
#NO_CATEGORY com.android.systemui.statusbar.policy.NotificationRowLayout.setLayoutTransitionsEnabled(Z)V
#NO_CATEGORY com.android.systemui.statusbar.policy.NotificationRowLayout.setUserExpandedChild(Landroid/view/View;Z)Z
#NO_CATEGORY com.android.systemui.statusbar.policy.NotificationRowLayout.setUserLockedChild(Landroid/view/View;Z)Z
#NO_CATEGORY com.android.systemui.statusbar.policy.ToggleSlider.setChecked(Z)V
#NO_CATEGORY com.android.systemui.statusbar.policy.ToggleSlider.setMax(I)V
#NO_CATEGORY com.android.systemui.statusbar.policy.ToggleSlider.setValue(I)V
#NO_CATEGORY com.android.systemui.statusbar.StatusBarIconView.set(Lcom/android/internal/statusbar/StatusBarIcon;)Z
#NO_CATEGORY com.android.systemui.statusbar.tablet.InputMethodButton.setIconImage(I)V
#NO_CATEGORY com.android.systemui.statusbar.tablet.NotificationPanel.setSettingsEnabled(Z)V
#NO_CATEGORY com.android.systemui.statusbar.tablet.NotificationPanelTitle.setPressed(Z)V
#NO_CATEGORY com.android.systemui.statusbar.tablet.TabletStatusBar.setHardKeyboardStatus(ZZ)V
#NO_CATEGORY com.android.systemui.statusbar.tablet.TabletStatusBar.setLightsOn(Z)V
#NO_CATEGORY com.android.systemui.statusbar.tablet.TabletStatusBar.setSystemUiVisibility(II)V
#NO_CATEGORY com.android.systemui.statusbar.tablet.TabletStatusBarView.setBar(Lcom/android/systemui/statusbar/BaseStatusBar;)V
#NO_CATEGORY com.android.systemui.statusbar.tablet.TabletStatusBarView.setDelegateView(Landroid/view/View;)V
#NO_CATEGORY com.android.systemui.statusbar.tablet.TabletStatusBarView.setIgnoreChildren(ILandroid/view/View;Landroid/view/View;)V
#NO_CATEGORY com.android.uiautomator.core.InteractionController.sendKeyAndWaitForEvent(IIIJ)Z
#NO_CATEGORY com.android.uiautomator.core.UiDevice.registerWatcher(Ljava/lang/String;Lcom/android/uiautomator/core/UiWatcher;)V
#NO_CATEGORY com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher.instrumentationFinished(Landroid/content/ComponentName;ILandroid/os/Bundle;)V
#NO_CATEGORY com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher.instrumentationStatus(Landroid/content/ComponentName;ILandroid/os/Bundle;)V
#NO_CATEGORY com.android.uiautomator.testrunner.UiAutomatorTestRunner$WatcherResultPrinter.addError(Ljunit/framework/Test;Ljava/lang/Throwable;)V
#NO_CATEGORY com.android.uiautomator.testrunner.UiAutomatorTestRunner$WatcherResultPrinter.addFailure(Ljunit/framework/Test;Ljunit/framework/AssertionFailedError;)V
#NO_CATEGORY com.android.uiautomator.testrunner.UiAutomatorTestRunner$WatcherResultPrinter.print(Ljunit/framework/TestResult;JLandroid/os/Bundle;)V
#NO_CATEGORY com.android.uiautomator.testrunner.UiAutomatorTestRunner$WatcherResultPrinter.startTest(Ljunit/framework/Test;)V
#NO_CATEGORY com.android.vcard.VCardProperty.addParameter(Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY com.android.vcard.VCardProperty.setValues([Ljava/lang/String;)V
#NO_CATEGORY com.android.vcard.VCardUtils$QuotedPrintableCodecPort.decodeQuotedPrintable([B)[B
#NO_CATEGORY com.android.videoeditor.LoadPreviewBitmapTask.onPostExecute(Landroid/graphics/Bitmap;)V
#NO_CATEGORY com.android.videoeditor.OverlayTitleTemplatePicker.onListItemClick(Landroid/widget/ListView;Landroid/view/View;IJ)V
#NO_CATEGORY com.android.videoeditor.service.ApiService$8.onProgress(I)V
#NO_CATEGORY com.android.videoeditor.service.ApiService$9.onProgress(I)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.addAudioTrack(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;Z)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.addEffectColor(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JJII)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.addEffectKenBurns(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JJLandroid/graphics/Rect;Landroid/graphics/Rect;)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.addMediaItemImageUri(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;IJLjava/lang/String;)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.addMediaItemVideoUri(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;ILjava/lang/String;)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.addOverlay(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;JJ)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.applyTheme(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.cancelExportVideoEditor(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.createVideoEditor(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.deleteProject(Landroid/content/Context;Ljava/lang/String;)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.exportVideoEditor(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;II)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.extractAudioTrackAudioWaveform(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.extractMediaItemAudioWaveform(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.getMediaItemThumbnails(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;IIJJII[I)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.getTransitionThumbnails(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;I)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.insertAlphaTransition(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JIIIZ)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.insertCrossfadeTransition(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JI)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.insertFadeBlackTransition(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JI)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.insertSlidingTransition(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JII)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.loadMediaItem(Landroid/content/Context;Ljava/lang/String;Landroid/net/Uri;Ljava/lang/String;)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.loadVideoEditor(Landroid/content/Context;Ljava/lang/String;)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.moveMediaItem(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.releaseVideoEditor(Landroid/content/Context;Ljava/lang/String;)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.removeAudioTrack(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.removeEffect(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.removeMediaItem(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.removeOverlay(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.removeTransition(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.saveVideoEditor(Landroid/content/Context;Ljava/lang/String;)V
#NO_CATEGORY com.android.videoeditor.service.ApiService$ServiceMediaProcessingProgressListener.onProgress(Ljava/lang/Object;II)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.setAspectRatio(Landroid/content/Context;Ljava/lang/String;I)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.setAudioTrackBoundaries(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;JJ)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.setAudioTrackDuck(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Z)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.setAudioTrackLoop(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Z)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.setAudioTrackMute(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Z)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.setAudioTrackVolume(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;I)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.setMediaItemBoundaries(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;JJ)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.setMediaItemDuration(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;J)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.setMediaItemMute(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Z)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.setMediaItemRenderingMode(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;I)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.setMediaItemVolume(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;I)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.setOverlayDuration(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.setOverlayStartTime(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.setOverlayUserAttributes(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)V
#NO_CATEGORY com.android.videoeditor.service.ApiService.setTransitionDuration(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;J)V
#NO_CATEGORY com.android.videoeditor.service.MovieOverlay.buildUserAttributes(ILjava/lang/String;Ljava/lang/String;)Landroid/os/Bundle;
#NO_CATEGORY com.android.videoeditor.TransitionsActivity.onListItemClick(Landroid/widget/ListView;Landroid/view/View;IJ)V
#NO_CATEGORY com.android.videoeditor.VideoEditorActivity.setAspectRatio(I)V
#NO_CATEGORY com.android.videoeditor.VideoEditorBaseActivity$ServiceListener.onAudioTrackBoundariesSet(Ljava/lang/String;Ljava/lang/String;JJLjava/lang/Exception;)V
#NO_CATEGORY com.android.videoeditor.VideoEditorBaseActivity$ServiceListener.onEffectAdded(Ljava/lang/String;Lcom/android/videoeditor/service/MovieEffect;Ljava/lang/String;Ljava/lang/Exception;)V
#NO_CATEGORY com.android.videoeditor.VideoEditorBaseActivity$ServiceListener.onEffectRemoved(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)V
#NO_CATEGORY com.android.videoeditor.VideoEditorBaseActivity$ServiceListener.onMediaItemBoundariesSet(Ljava/lang/String;Ljava/lang/String;JJLjava/lang/Exception;)V
#NO_CATEGORY com.android.videoeditor.VideoEditorBaseActivity$ServiceListener.onMediaItemDurationSet(Ljava/lang/String;Ljava/lang/String;JLjava/lang/Exception;)V
#NO_CATEGORY com.android.videoeditor.VideoEditorBaseActivity$ServiceListener.onMediaItemThumbnail(Ljava/lang/String;Ljava/lang/String;Landroid/graphics/Bitmap;IILjava/lang/Exception;)Z
#NO_CATEGORY com.android.videoeditor.VideoEditorBaseActivity$ServiceListener.onOverlayUserAttributesSet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;Ljava/lang/Exception;)V
#NO_CATEGORY com.android.videoeditor.VideoEditorBaseActivity$ServiceListener.onTransitionDurationSet(Ljava/lang/String;Ljava/lang/String;JLjava/lang/Exception;)V
#NO_CATEGORY com.android.videoeditor.VideoEditorBaseActivity$ServiceListener.onTransitionThumbnails(Ljava/lang/String;Ljava/lang/String;[Landroid/graphics/Bitmap;Ljava/lang/Exception;)Z
#NO_CATEGORY com.android.videoeditor.VideoEditorBaseActivity$ServiceListener.onVideoEditorLoaded(Ljava/lang/String;Lcom/android/videoeditor/service/VideoEditorProject;Ljava/util/List;Ljava/util/List;Ljava/lang/Exception;)V
#NO_CATEGORY com.android.videoeditor.widgets.AudioTrackLinearLayout.setSelected(Z)V
#NO_CATEGORY com.android.videoeditor.widgets.HorizontalScrollView.draw(Landroid/graphics/Canvas;)V
#NO_CATEGORY com.android.videoeditor.widgets.HorizontalScrollView.performAccessibilityAction(ILandroid/os/Bundle;)Z
#NO_CATEGORY com.android.videoeditor.widgets.HorizontalScrollView.setOverScrollMode(I)V
#NO_CATEGORY com.android.videoeditor.widgets.ImageViewTouchBase.setImageBitmapResetBase(Landroid/graphics/Bitmap;Z)V
#NO_CATEGORY com.android.videoeditor.widgets.MediaLinearLayout.setMediaItemThumbnail(Ljava/lang/String;Landroid/graphics/Bitmap;II)Z
#NO_CATEGORY com.android.videoeditor.widgets.MediaLinearLayout.setSelectedView(I)V
#NO_CATEGORY com.android.videoeditor.widgets.MediaLinearLayout.setSelected(Z)V
#NO_CATEGORY com.android.videoeditor.widgets.MediaLinearLayout.setTransitionThumbnails(Ljava/lang/String;[Landroid/graphics/Bitmap;)Z
#NO_CATEGORY com.android.videoeditor.widgets.OverlayLinearLayout$1.onSingleTapConfirmed(Landroid/view/View;ILandroid/view/MotionEvent;)Z
#NO_CATEGORY com.android.videoeditor.widgets.OverlayLinearLayout.setSelected(Z)V
#NO_CATEGORY com.android.videoeditor.widgets.OverlayView.setSelected(Z)V
#NO_CATEGORY com.android.videoeditor.widgets.TimelineHorizontalScrollView.setScaleListener(Landroid/view/ScaleGestureDetector$SimpleOnScaleGestureListener;)V
#NO_CATEGORY com.android.videoeditor.widgets.TimelineRelativeLayout.setSelected(Z)V
#NO_CATEGORY com.android.wallpaper.fall.ScriptC_fall.bind_g_Constants(Lcom/android/wallpaper/fall/ScriptField_Constants;)V
#NO_CATEGORY com.android.wallpaper.galaxy.GalaxyRS.setOffset(FFII)V
#NO_CATEGORY com.android.wallpaper.galaxy.ScriptC_galaxy.bind_Particles(Lcom/android/wallpaper/galaxy/ScriptField_Particle;)V
#NO_CATEGORY com.android.wallpaper.galaxy.ScriptC_galaxy.bind_vpConstants(Lcom/android/wallpaper/galaxy/ScriptField_VpConsts;)V
#NO_CATEGORY com.android.wallpaper.galaxy.ScriptField_VpConsts.set(Lcom/android/wallpaper/galaxy/ScriptField_VpConsts$Item;IZ)V
#NO_CATEGORY com.android.wallpaper.grass.GrassRS.setOffset(FFII)V
#NO_CATEGORY com.android.wallpaper.grass.ScriptC_grass.bind_Blades(Lcom/android/wallpaper/grass/ScriptField_Blade;)V
#NO_CATEGORY com.android.wallpaper.grass.ScriptC_grass.bind_Verticies(Lcom/android/wallpaper/grass/ScriptField_Vertex;)V
#NO_CATEGORY com.android.wallpaper.grass.ScriptField_Blade.set(Lcom/android/wallpaper/grass/ScriptField_Blade$Item;IZ)V
#NO_CATEGORY com.android.wallpaper.RenderScriptScene.setOffset(FFII)V
NO_CATEGORY com.beetstra.jutf7.UTF7StyleCharsetDecoder.decodeLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;
NO_CATEGORY com.beetstra.jutf7.UTF7StyleCharsetEncoder.encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
NO_CATEGORY com.coremedia.iso.AbstractBoxParser.parseBox(Ljava/nio/channels/ReadableByteChannel;Lcom/coremedia/iso/boxes/ContainerBox;)Lcom/coremedia/iso/boxes/Box;
NO_CATEGORY com.coremedia.iso.IsoTypeReader.readString(Ljava/nio/ByteBuffer;)Ljava/lang/String;
NO_CATEGORY com.coremedia.iso.IsoTypeWriter.writeIso639(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
NO_CATEGORY com.coremedia.iso.IsoTypeWriter.writeUInt16BE(Ljava/nio/ByteBuffer;I)V
NO_CATEGORY com.coremedia.iso.IsoTypeWriter.writeUInt16(Ljava/nio/ByteBuffer;I)V
NO_CATEGORY com.coremedia.iso.IsoTypeWriter.writeUInt24(Ljava/nio/ByteBuffer;I)V
NO_CATEGORY com.coremedia.iso.IsoTypeWriter.writeUInt32BE(Ljava/nio/ByteBuffer;J)V
NO_CATEGORY com.coremedia.iso.IsoTypeWriter.writeUInt32(Ljava/nio/ByteBuffer;J)V
NO_CATEGORY com.coremedia.iso.IsoTypeWriter.writeUInt64(Ljava/nio/ByteBuffer;J)V
NO_CATEGORY com.coremedia.iso.IsoTypeWriter.writeUtf8String(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
#NO_CATEGORY com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl.enableShutterSound(Z)V
#NO_CATEGORY com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl.setDisplayOrientation(I)V
#NO_CATEGORY com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl.setParameters(Landroid/hardware/Camera$Parameters;)V
#NO_CATEGORY com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl.setPreviewCallback(Landroid/hardware/Camera$PreviewCallback;)V
#NO_CATEGORY com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl.setPreviewCallbackWithBuffer(Landroid/hardware/Camera$PreviewCallback;)V
#NO_CATEGORY com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl.setPreviewDisplay(Landroid/view/SurfaceHolder;)V
#NO_CATEGORY com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl.setPreviewTexture(Landroid/graphics/SurfaceTexture;)V
#NO_CATEGORY com.google.android.apps.lightcycle.camera.CameraPreview$Util.setPictureWidth(Lcom/google/android/apps/lightcycle/camera/CameraUtility;Landroid/hardware/Camera$Parameters;I)V
#NO_CATEGORY com.google.android.apps.lightcycle.camera.CameraUtility.setFrameRate(Landroid/hardware/Camera$Parameters;)V
#NO_CATEGORY com.google.android.apps.lightcycle.camera.CameraUtility.setPictureWidth(Landroid/hardware/Camera$Parameters;I)V
#NO_CATEGORY com.google.android.apps.lightcycle.camera.NullSurfaceCameraPreview.setFastShutter(Z)V
#NO_CATEGORY com.google.android.apps.lightcycle.camera.NullSurfaceCameraPreview.setMainView(Lcom/google/android/apps/lightcycle/panorama/LightCycleView;)V
#NO_CATEGORY com.google.android.apps.lightcycle.camera.NullSurfaceCameraPreview.setPictureWidth(Landroid/hardware/Camera$Parameters;I)V
#NO_CATEGORY com.google.android.apps.lightcycle.camera.TextureCameraPreview.setFastShutter(Z)V
#NO_CATEGORY com.google.android.apps.lightcycle.camera.TextureCameraPreview.setMainView(Lcom/google/android/apps/lightcycle/panorama/LightCycleView;)V
#NO_CATEGORY com.google.android.apps.lightcycle.camera.TextureCameraPreview.setPictureWidth(Landroid/hardware/Camera$Parameters;I)V
#NO_CATEGORY com.google.android.apps.lightcycle.math.Matrix3x3d.setColumn(ILcom/google/android/apps/lightcycle/math/Vector3d;)V
#NO_CATEGORY com.google.android.apps.lightcycle.math.Matrix3x3d.set(DDDDDDDDD)V
#NO_CATEGORY com.google.android.apps.lightcycle.math.Matrix3x3d.set(IID)V
#NO_CATEGORY com.google.android.apps.lightcycle.math.Matrix3x3d.set(Lcom/google/android/apps/lightcycle/math/Matrix3x3d;)V
#NO_CATEGORY com.google.android.apps.lightcycle.math.Matrix3x3d.setSameDiagonal(D)V
#NO_CATEGORY com.google.android.apps.lightcycle.math.Quaternion.set(Lcom/google/android/apps/lightcycle/math/Quaternion;)V
#NO_CATEGORY com.google.android.apps.lightcycle.math.Vector3d.set(Lcom/google/android/apps/lightcycle/math/Vector3d;)V
#NO_CATEGORY com.google.android.apps.lightcycle.opengl.DeviceOrientedSprite.setPositionsCentered(FFII)V
#NO_CATEGORY com.google.android.apps.lightcycle.opengl.DeviceOrientedSprite.setPositions(Landroid/graphics/PointF;Landroid/graphics/PointF;II)V
#NO_CATEGORY com.google.android.apps.lightcycle.opengl.Shader.setTexCoords(Ljava/nio/FloatBuffer;)V
#NO_CATEGORY com.google.android.apps.lightcycle.opengl.Shader.setTransform([F)V
#NO_CATEGORY com.google.android.apps.lightcycle.opengl.Shader.setVertices(Ljava/nio/FloatBuffer;)V
#NO_CATEGORY com.google.android.apps.lightcycle.opengl.SingleColorShader.setColor([F)V
#NO_CATEGORY com.google.android.apps.lightcycle.opengl.Sprite.setTexture(Lcom/google/android/apps/lightcycle/opengl/GLTexture;)V
#NO_CATEGORY com.google.android.apps.lightcycle.panorama.Button.setPosition(Landroid/graphics/PointF;)V
#NO_CATEGORY com.google.android.apps.lightcycle.panorama.IncrementalAligner.addImage(Ljava/lang/String;[FI)V
#NO_CATEGORY com.google.android.apps.lightcycle.panorama.LightCycleNative$NativeUpdatePhotoRenderingCallback.updateTransforms([F)V
#NO_CATEGORY com.google.android.apps.lightcycle.panorama.LightCycleNative.setProgressCallback(ILcom/google/android/apps/lightcycle/panorama/LightCycleView$ProgressCallback;)V
#NO_CATEGORY com.google.android.apps.lightcycle.panorama.LightCycleView.requestPhoto([FII)V
#NO_CATEGORY com.google.android.apps.lightcycle.panorama.LightCycleView.setFrameDimensions(II)V
#NO_CATEGORY com.google.android.apps.lightcycle.panorama.LightCycleView.setLiveImageDisplay(Z)V
#NO_CATEGORY com.google.android.apps.lightcycle.panorama.LightCycleView.setLocationProviderEnabled(Z)V
#NO_CATEGORY com.google.android.apps.lightcycle.panorama.MessageSender.notifyAll(IFLjava/lang/String;)V
#NO_CATEGORY com.google.android.apps.lightcycle.panorama.Pano2dPreviewOverlay.setTextureId(I)V
#NO_CATEGORY com.google.android.apps.lightcycle.panorama.PanoramaFrameOverlay.setTextureId(I)V
#NO_CATEGORY com.google.android.apps.lightcycle.panorama.RenderedGui.setDoneButtonVisible(Z)V
#NO_CATEGORY com.google.android.apps.lightcycle.panorama.RenderedGui.setUndoButtonVisible(Z)V
#NO_CATEGORY com.google.android.apps.lightcycle.panorama.StitchingService.createImageContentValues(Ljava/lang/String;)Landroid/content/ContentValues;
#NO_CATEGORY com.google.android.apps.lightcycle.sensor.OrientationEKF.setHeadingDegrees(D)V
#NO_CATEGORY com.google.android.apps.lightcycle.sensor.SensorReader.setGyroBias([F)V
#NO_CATEGORY com.google.android.apps.lightcycle.sensor.SensorReader.setHeadingDegrees(D)V
#NO_CATEGORY com.google.android.apps.lightcycle.shaders.GroundPlaneShader.setColor([F)V
#NO_CATEGORY com.google.android.apps.lightcycle.shaders.ScaledTransparencyShader.setAlpha(F)V
#NO_CATEGORY com.google.android.apps.lightcycle.shaders.TargetShader.setAlpha(F)V android.permission.STOP_APP_SWITCHES 
#NO_CATEGORY com.google.android.apps.lightcycle.shaders.TargetShader.setContrastFactor(F)V
#NO_CATEGORY com.google.android.apps.lightcycle.shaders.TransparencyShader.setAlpha(F)V
#NO_CATEGORY com.google.android.apps.lightcycle.util.Size.set(Lcom/google/android/apps/lightcycle/util/Size;)V
NO_CATEGORY com.google.android.gms.common.internal.IGmsCallbacks$Stub$Proxy.onPostInitComplete(ILandroid/os/IBinder;Landroid/os/Bundle;)V
NO_CATEGORY com.google.android.gms.common.internal.IGmsServiceBroker$Stub$Proxy.getPanoramaService(Lcom/google/android/gms/common/internal/IGmsCallbacks;ILjava/lang/String;Landroid/os/Bundle;)V
NO_CATEGORY com.google.android.gms.common.internal.IGmsServiceBroker$Stub$Proxy.getPlusService(Lcom/google/android/gms/common/internal/IGmsCallbacks;ILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)V
NO_CATEGORY com.google.android.gms.panorama.internal.IPanoramaCallbacks$Stub$Proxy.onPanoramaInfoLoaded(ILandroid/os/Bundle;ILandroid/content/Intent;)V
NO_CATEGORY com.google.android.picasastore.FIFEUtil.setImageUriOptions(Ljava/lang/String;Landroid/net/Uri;)Landroid/net/Uri;
NO_CATEGORY com.google.android.picasastore.FIFEUtil.setImageUrlOptions(Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;
NO_CATEGORY com.google.android.picasastore.HttpUtils.openInputStream(Ljava/lang/String;)Ljava/io/InputStream;
NO_CATEGORY com.google.android.picasastore.ImageProxyUtil.setImageUrlSize(ILjava/lang/String;)Ljava/lang/String;
NO_CATEGORY com.google.android.picasastore.PicasaStoreFacade.broadcastOperationReport(Ljava/lang/String;JJIJJ)V
NO_CATEGORY com.google.android.picasastore.VersionInfo.setVersion(Ljava/lang/String;I)V
NO_CATEGORY com.google.android.picasasync.AlbumCollectorJson.addThumbnailUrl(Lcom/google/android/picasasync/JsonReader;Landroid/content/ContentValues;Ljava/lang/String;)V
NO_CATEGORY com.google.android.picasasync.PicasaApi.setAuthToken(Ljava/lang/String;)V
NO_CATEGORY com.google.android.picasasync.PicasaSyncHelper$SyncContext.setAccount(Ljava/lang/String;)Z
NO_CATEGORY com.google.android.picasasync.PicasaSyncManager.updateTasks(J)V
NO_CATEGORY com.google.android.picasasync.PrefetchHelper.setAlbumCachingFlag(JI)V
NO_CATEGORY com.google.android.picasasync.R.init(Ljava/lang/Class;)V
NO_CATEGORY com.google.android.picasasync.UploadsManager.access$1300(Lcom/google/android/picasasync/UploadsManager;Lcom/google/android/picasasync/UploadTaskEntry;Lcom/google/android/picasasync/UploadedEntry;Landroid/content/SyncResult;)Z
NO_CATEGORY com.google.android.picasasync.UploadTaskEntry.setFingerprint(Lcom/android/gallery3d/common/Fingerprint;)V
NO_CATEGORY com.googlecode.mp4parser.util.ByteBufferByteChannel.write(Ljava/nio/ByteBuffer;)I
#NO_CATEGORY com.google.common.base.CharMatcher$LookupTable.set(C)V
#NO_CATEGORY com.google.common.base.CharMatcher$Or.setBits(Lcom/google/common/base/CharMatcher$LookupTable;)V
#NO_CATEGORY com.google.common.collect.AbstractMapEntry.setValue(Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY com.google.common.collect.AbstractMultimap$WrappedList.addAll(ILjava/util/Collection;)Z
#NO_CATEGORY com.google.common.collect.AbstractMultimap$WrappedList$WrappedListIterator.set(Ljava/lang/Object;)V
#NO_CATEGORY com.google.common.collect.AbstractMultiset.setCount(Ljava/lang/Object;I)I
#NO_CATEGORY com.google.common.collect.AbstractMultiset.setCount(Ljava/lang/Object;II)Z
#NO_CATEGORY com.google.common.collect.ForwardingConcurrentMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY com.google.common.collect.ForwardingMapEntry.setValue(Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY com.google.common.collect.ForwardingMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY com.google.common.collect.ForwardingMultiset.setCount(Ljava/lang/Object;I)I
#NO_CATEGORY com.google.common.collect.ForwardingMultiset.setCount(Ljava/lang/Object;II)Z
#NO_CATEGORY com.google.common.collect.ImmutableSortedMap$Builder.put(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
#NO_CATEGORY com.google.common.collect.Lists$AbstractListWrapper.set(ILjava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY com.google.common.collect.Lists$ReverseList$1.set(Ljava/lang/Object;)V
#NO_CATEGORY com.google.common.collect.Lists$ReverseList.set(ILjava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry.setExpirationTime(J)V
#NO_CATEGORY com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy.readEntries(Ljava/io/ObjectInputStream;)V
#NO_CATEGORY com.google.common.collect.MapMakerInternalMap$NullEntry.setExpirationTime(J)V
#NO_CATEGORY com.google.common.collect.MapMakerInternalMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY com.google.common.collect.MapMakerInternalMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY com.google.common.collect.MapMakerInternalMap$SoftEntry.setExpirationTime(J)V
#NO_CATEGORY com.google.common.collect.MapMakerInternalMap$StrongEntry.setExpirationTime(J)V
#NO_CATEGORY com.google.common.collect.MapMakerInternalMap$WeakEntry.setExpirationTime(J)V
#NO_CATEGORY com.google.common.collect.MapMakerInternalMap$WriteThroughEntry.setValue(Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY com.google.common.collect.MapMaker$NullConcurrentMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY com.google.common.collect.Maps$AbstractFilteredMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1.setValue(Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY com.google.common.collect.Multisets$SetMultiset.setCount(Ljava/lang/Object;II)Z
#NO_CATEGORY com.google.common.collect.Multisets$UnmodifiableMultiset.setCount(Ljava/lang/Object;I)I
#NO_CATEGORY com.google.common.collect.Multisets$UnmodifiableMultiset.setCount(Ljava/lang/Object;II)Z
#NO_CATEGORY com.google.common.collect.Serialization$FieldSetter.set(Ljava/lang/Object;I)V
#NO_CATEGORY com.google.common.collect.Serialization$FieldSetter.set(Ljava/lang/Object;Ljava/lang/Object;)V
#NO_CATEGORY com.google.common.collect.Sets$SetFromMap.add(Ljava/lang/Object;)Z
#NO_CATEGORY com.google.common.collect.TreeMultiset.setCount(Ljava/lang/Object;I)I
#NO_CATEGORY com.google.common.collect.TreeMultiset.setCount(Ljava/lang/Object;II)Z
NO_CATEGORY com.google.common.io.ByteStreams$ByteArrayDataOutputStream.write([BII)V
NO_CATEGORY com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeBoolean(Z)V
NO_CATEGORY com.google.common.io.ByteStreams$ByteArrayDataOutputStream.write([B)V
NO_CATEGORY com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeByte(I)V
NO_CATEGORY com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeBytes(Ljava/lang/String;)V
NO_CATEGORY com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeChar(I)V
NO_CATEGORY com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeChars(Ljava/lang/String;)V
NO_CATEGORY com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeDouble(D)V
NO_CATEGORY com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeFloat(F)V
NO_CATEGORY com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeInt(I)V
NO_CATEGORY com.google.common.io.ByteStreams$ByteArrayDataOutputStream.write(I)V
NO_CATEGORY com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeLong(J)V
NO_CATEGORY com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeShort(I)V
NO_CATEGORY com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeUTF(Ljava/lang/String;)V
NO_CATEGORY com.google.common.io.ByteStreams.copy(Ljava/io/InputStream;Ljava/io/OutputStream;)J
NO_CATEGORY com.google.common.io.ByteStreams.write([BLcom/google/common/io/OutputSupplier;)V
NO_CATEGORY com.google.common.io.Files.write([BLjava/io/File;)V
NO_CATEGORY com.google.common.primitives.Ints$IntArrayAsList.set(ILjava/lang/Integer;)Ljava/lang/Integer;
NO_CATEGORY com.google.common.primitives.Ints$IntArrayAsList.set(ILjava/lang/Object;)Ljava/lang/Object;
NO_CATEGORY dalvik.system.profiler.HprofData.addStackTrace(Ldalvik/system/profiler/HprofData$StackTrace;[I)V
NO_CATEGORY dalvik.system.VMRuntime.setMinimumHeapSize(J)J
NO_CATEGORY dalvik.system.VMRuntime.setTargetHeapUtilization(F)F
NO_CATEGORY gov.nist.core.DuplicateNameValueList.put(Ljava/lang/String;Lgov/nist/core/NameValue;)Lgov/nist/core/NameValue;
NO_CATEGORY gov.nist.core.DuplicateNameValueList.set(Lgov/nist/core/NameValue;)V
NO_CATEGORY gov.nist.core.DuplicateNameValueList.set(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY gov.nist.core.GenericObject.dbgPrint(Ljava/lang/String;)V
NO_CATEGORY gov.nist.core.GenericObjectList.match(Ljava/lang/Object;)Z
NO_CATEGORY gov.nist.core.Host.setAddress(Ljava/lang/String;)V
NO_CATEGORY gov.nist.core.Host.setHostAddress(Ljava/lang/String;)V
NO_CATEGORY gov.nist.core.Host.setHostname(Ljava/lang/String;)V
NO_CATEGORY gov.nist.core.InternalErrorHandler.handleException(Ljava/lang/String;)V
NO_CATEGORY gov.nist.core.LexerCore.addKeyword(Ljava/lang/String;I)V
NO_CATEGORY gov.nist.core.LexerCore.addLexer(Ljava/lang/String;)Ljava/util/Hashtable;
NO_CATEGORY gov.nist.core.MultiValueMapImpl.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
NO_CATEGORY gov.nist.core.MultiValueMapImpl.put(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
NO_CATEGORY gov.nist.core.MultiValueMapImpl.put(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
NO_CATEGORY gov.nist.core.NameValueList.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
NO_CATEGORY gov.nist.core.NameValueList.put(Ljava/lang/String;Lgov/nist/core/NameValue;)Lgov/nist/core/NameValue;
NO_CATEGORY gov.nist.core.NameValueList.set(Lgov/nist/core/NameValue;)V
NO_CATEGORY gov.nist.core.NameValueList.set(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY gov.nist.core.NameValue.setValue(Ljava/lang/Object;)Ljava/lang/Object;
NO_CATEGORY gov.nist.core.ParserCore.dbg_enter(Ljava/lang/String;)V
NO_CATEGORY gov.nist.core.ParserCore.dbg_leave(Ljava/lang/String;)V
NO_CATEGORY gov.nist.core.ParserCore.peekLine(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.AddressImpl.setUser(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.Authority.setHost(Lgov/nist/core/Host;)V
NO_CATEGORY gov.nist.javax.sip.address.Authority.setPassword(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.Authority.setPort(I)V
NO_CATEGORY gov.nist.javax.sip.address.Authority.setUser(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setDefaultParm(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setGrParam(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setHeader(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setHost(Lgov/nist/core/Host;)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setHost(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setHostPort(Lgov/nist/core/HostPort;)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setIsdnSubAddress(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setMAddr(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setMAddrParam(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setMethod(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setMethodParam(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setParameter(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setPort(I)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setQHeader(Lgov/nist/core/NameValue;)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setScheme(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setSecure(Z)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setTransportParam(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setTTLParam(I)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setUriParameter(Lgov/nist/core/NameValue;)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setUriParm(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setUser(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setUserParam(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.SipUri.setUserPassword(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.TelephoneNumber.setIsdnSubaddress(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.TelephoneNumber.setParameter(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.TelephoneNumber.setParm(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY gov.nist.javax.sip.address.TelephoneNumber.setPostDial(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.TelURLImpl.setGlobal(Z)V
NO_CATEGORY gov.nist.javax.sip.address.TelURLImpl.setIsdnSubAddress(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.TelURLImpl.setParameter(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.TelURLImpl.setPhoneContext(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.TelURLImpl.setPhoneNumber(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.address.TelURLImpl.setPostDial(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.clientauthutils.CredentialsCache.cacheAuthorizationHeader(Ljava/lang/String;Ljavax/sip/header/AuthorizationHeader;I)V
NO_CATEGORY gov.nist.javax.sip.DialogFilter.processRequest(Lgov/nist/javax/sip/message/SIPRequest;Lgov/nist/javax/sip/stack/MessageChannel;)V
NO_CATEGORY gov.nist.javax.sip.DialogFilter.processResponse(Lgov/nist/javax/sip/message/SIPResponse;Lgov/nist/javax/sip/stack/MessageChannel;Lgov/nist/javax/sip/stack/SIPDialog;)V
NO_CATEGORY gov.nist.javax.sip.DialogFilter.processResponse(Lgov/nist/javax/sip/message/SIPResponse;Lgov/nist/javax/sip/stack/MessageChannel;)V
NO_CATEGORY gov.nist.javax.sip.header.AcceptEncoding.setQValue(F)V
NO_CATEGORY gov.nist.javax.sip.header.AcceptLanguage.setAcceptLanguage(Ljava/util/Locale;)V
NO_CATEGORY gov.nist.javax.sip.header.AcceptLanguage.setLanguageRange(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.AcceptLanguage.setQValue(F)V
NO_CATEGORY gov.nist.javax.sip.header.Accept.setContentSubType(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.Accept.setContentType(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.Accept.setQValue(F)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationHeader.setAlgorithm(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationHeader.setChallenge(Lgov/nist/javax/sip/header/Challenge;)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationHeader.setCK(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationHeader.setCNonce(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationHeader.setDomain(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationHeader.setIK(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationHeader.setIntegrityProtected(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationHeader.setNonceCount(I)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationHeader.setNonce(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationHeader.setOpaque(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationHeader.setParameter(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationHeader.setQop(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationHeader.setRealm(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationHeader.setResponse(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationHeader.setStale(Z)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationHeader.setUsername(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationInfo.setCNonce(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationInfo.setNextNonce(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationInfo.setNonceCount(I)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationInfo.setParameter(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationInfo.setQop(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.AuthenticationInfo.setResponse(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.CallID.setCallId(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.CallInfo.setPurpose(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.Challenge.setParameter(Lgov/nist/core/NameValue;)V
NO_CATEGORY gov.nist.javax.sip.header.ContentDisposition.setHandling(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ContentLanguage.setLanguageTag(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ContentLength.setContentLength(I)V
NO_CATEGORY gov.nist.javax.sip.header.ContentType.setContentSubType(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ContentType.setContentType(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ContentType.setContentType(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.CSeq.setMethod(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.CSeq.setSeqNumber(J)V
NO_CATEGORY gov.nist.javax.sip.header.CSeq.setSequenceNumber(I)V
NO_CATEGORY gov.nist.javax.sip.header.ErrorInfo.setErrorMessage(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.Event.setEventId(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.extensions.Join.setFromTag(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.extensions.Join.setToTag(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.extensions.Join.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.extensions.MinSE.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.extensions.References.setParameter(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.extensions.References.setRel(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.extensions.References.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.extensions.ReferredBy.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.extensions.Replaces.setFromTag(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.extensions.Replaces.setToTag(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.extensions.Replaces.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.extensions.SessionExpires.setRefresher(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.extensions.SessionExpires.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.From.setTag(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.HeaderFactoryImpl.setPrettyEncoding(Z)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PAccessNetworkInfo.setCGI3GPP(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PAccessNetworkInfo.setCI3GPP2(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PAccessNetworkInfo.setDSLLocation(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PAccessNetworkInfo.setParameter(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PAccessNetworkInfo.setUtranCellID3GPP(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PAccessNetworkInfo.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PAssertedIdentity.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PAssertedService.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PAssociatedURI.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.Path.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PCalledPartyID.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PChargingFunctionAddresses.setChargingCollectionFunctionAddress(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PChargingFunctionAddresses.setEventChargingFunctionAddress(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PChargingFunctionAddresses.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PChargingVector.setICIDGeneratedAt(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PChargingVector.setICID(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PChargingVector.setOriginatingIOI(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PChargingVector.setTerminatingIOI(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PChargingVector.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PMediaAuthorization.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PPreferredIdentity.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PPreferredService.setSubserviceIdentifiers(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PPreferredService.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PProfileKey.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.Privacy.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PServedUser.setRegistrationState(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PServedUser.setSessionCase(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PServedUser.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PUserDatabase.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PVisitedNetworkID.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.PVisitedNetworkID.setVisitedNetworkID(Lgov/nist/core/Token;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.SecurityAgree.setAlgorithm(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.SecurityAgree.setEncryptionAlgorithm(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.SecurityAgree.setMode(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.SecurityAgree.setParameter(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.SecurityAgree.setPortClient(I)V
NO_CATEGORY gov.nist.javax.sip.header.ims.SecurityAgree.setPortServer(I)V
NO_CATEGORY gov.nist.javax.sip.header.ims.SecurityAgree.setPreference(F)V
NO_CATEGORY gov.nist.javax.sip.header.ims.SecurityAgree.setProtocol(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.SecurityAgree.setSPIClient(I)V
NO_CATEGORY gov.nist.javax.sip.header.ims.SecurityAgree.setSPIServer(I)V
NO_CATEGORY gov.nist.javax.sip.header.ims.SecurityClient.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.SecurityServer.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.SecurityVerify.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ims.ServiceRoute.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.InReplyTo.setCallId(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.NameMap.addExtensionHeader(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ParametersHeader.setMultiParameter(Lgov/nist/core/NameValue;)V
NO_CATEGORY gov.nist.javax.sip.header.ParametersHeader.setMultiParameter(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ParametersHeader.setParameter(Lgov/nist/core/NameValue;)V
NO_CATEGORY gov.nist.javax.sip.header.ParametersHeader.setParameter(Ljava/lang/String;F)V
NO_CATEGORY gov.nist.javax.sip.header.ParametersHeader.setParameter(Ljava/lang/String;I)V
NO_CATEGORY gov.nist.javax.sip.header.ParametersHeader.setParameter(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY gov.nist.javax.sip.header.ParametersHeader.setParameter(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.ParametersHeader.setParameter(Ljava/lang/String;Z)V
NO_CATEGORY gov.nist.javax.sip.header.ParametersHeader.setQuotedParameter(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.Protocol.setProtocol(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.RAck.setCSeqNumber(I)V
NO_CATEGORY gov.nist.javax.sip.header.RAck.setRSeqNumber(I)V
NO_CATEGORY gov.nist.javax.sip.header.Reason.setCause(I)V
NO_CATEGORY gov.nist.javax.sip.header.Reason.setText(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.RetryAfter.setDuration(I)V
NO_CATEGORY gov.nist.javax.sip.header.RetryAfter.setRetryAfter(I)V
NO_CATEGORY gov.nist.javax.sip.header.RSeq.setSequenceNumber(I)V
NO_CATEGORY gov.nist.javax.sip.header.SIPDateHeader.setDate(Ljava/util/Calendar;)V
NO_CATEGORY gov.nist.javax.sip.header.SIPETag.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.SIPHeaderList.set(ILgov/nist/javax/sip/header/SIPHeader;)Lgov/nist/javax/sip/header/SIPHeader;
NO_CATEGORY gov.nist.javax.sip.header.SIPHeaderList.set(ILjava/lang/Object;)Ljava/lang/Object;
NO_CATEGORY gov.nist.javax.sip.header.SIPIfMatch.setValue(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.To.setTag(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.Via.setBranch(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.Via.setHost(Lgov/nist/core/Host;)V
NO_CATEGORY gov.nist.javax.sip.header.Via.setHost(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.Via.setMAddr(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.Via.setPort(I)V
NO_CATEGORY gov.nist.javax.sip.header.Via.setProtocol(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.Via.setProtocolVersion(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.Via.setReceived(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.Via.setTransport(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.header.Via.setTTL(I)V
NO_CATEGORY gov.nist.javax.sip.ListeningPointImpl.sendHeartbeat(Ljava/lang/String;I)V
NO_CATEGORY gov.nist.javax.sip.ListeningPointImpl.setSentBy(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.message.HeaderIterator.set(Ljava/lang/Object;)V
NO_CATEGORY gov.nist.javax.sip.message.MessageFactoryImpl.setDefaultContentEncodingCharset(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.message.SIPMessage.attachHeader(Lgov/nist/javax/sip/header/SIPHeader;ZZ)V
NO_CATEGORY gov.nist.javax.sip.message.SIPMessage.setCallId(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.message.SIPMessage.setFromTag(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.message.SIPMessage.setHeader(Lgov/nist/javax/sip/header/SIPHeaderList;)V
NO_CATEGORY gov.nist.javax.sip.message.SIPMessage.setMessageContent(Ljava/lang/String;Ljava/lang/String;[B)V
NO_CATEGORY gov.nist.javax.sip.message.SIPMessage.setToTag(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.message.SIPRequest.encodeAsBytes(Ljava/lang/String;)[B
NO_CATEGORY gov.nist.javax.sip.message.SIPRequest.setMethod(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.message.SIPRequest.setSIPVersion(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.message.SIPResponse.setReasonPhrase(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.message.SIPResponse.setSIPVersion(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.message.SIPResponse.setStatusCode(I)V
NO_CATEGORY gov.nist.javax.sip.parser.ParserFactory.createParser(Ljava/lang/String;)Lgov/nist/javax/sip/parser/HeaderParser;
NO_CATEGORY gov.nist.javax.sip.SipProviderImpl.sendRequest(Ljavax/sip/message/Request;)V
NO_CATEGORY gov.nist.javax.sip.SipProviderImpl.sendResponse(Ljavax/sip/message/Response;)V
NO_CATEGORY gov.nist.javax.sip.SipProviderImpl.setListeningPoint(Ljavax/sip/ListeningPoint;)V
NO_CATEGORY gov.nist.javax.sip.SipStackImpl.createListeningPoint(Ljava/lang/String;ILjava/lang/String;)Ljavax/sip/ListeningPoint;
NO_CATEGORY gov.nist.javax.sip.SipStackImpl.<init>(Ljava/util/Properties;)V
NO_CATEGORY gov.nist.javax.sip.stack.IOHandler.sendBytes(Ljava/net/InetAddress;Ljava/net/InetAddress;ILjava/lang/String;[BZLgov/nist/javax/sip/stack/MessageChannel;)Ljava/net/Socket;
NO_CATEGORY gov.nist.javax.sip.stack.MessageChannel.sendMessage(Lgov/nist/javax/sip/message/SIPMessage;Ljava/net/InetAddress;I)V
NO_CATEGORY gov.nist.javax.sip.stack.MessageChannel.sendMessage(Lgov/nist/javax/sip/message/SIPMessage;Ljavax/sip/address/Hop;)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPClientTransaction.processResponse(Lgov/nist/javax/sip/message/SIPResponse;Lgov/nist/javax/sip/stack/MessageChannel;)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPClientTransaction.sendMessage(Lgov/nist/javax/sip/message/SIPMessage;)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPClientTransaction.setState(Ljavax/sip/TransactionState;)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPDialog.sendAck(Ljavax/sip/message/Request;)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPDialog.sendReliableProvisionalResponse(Ljavax/sip/message/Response;)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPDialog.sendRequest(Ljavax/sip/ClientTransaction;)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPDialog.sendRequest(Ljavax/sip/ClientTransaction;Z)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPDialog.setLastResponse(Lgov/nist/javax/sip/stack/SIPTransaction;Lgov/nist/javax/sip/message/SIPResponse;)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPDialog.setResponseTags(Lgov/nist/javax/sip/message/SIPResponse;)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPDialog.setState(I)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPDialog.startRetransmitTimer(Lgov/nist/javax/sip/stack/SIPServerTransaction;Ljavax/sip/message/Response;)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPServerTransaction.processRequest(Lgov/nist/javax/sip/message/SIPRequest;Lgov/nist/javax/sip/stack/MessageChannel;)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPServerTransaction.sendMessage(Lgov/nist/javax/sip/message/SIPMessage;)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPServerTransaction.sendResponse(Ljavax/sip/message/Response;)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPServerTransaction.setMapped(Z)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPServerTransaction.setOriginalRequest(Lgov/nist/javax/sip/message/SIPRequest;)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPServerTransaction.setState(Ljavax/sip/TransactionState;)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPTransaction.sendMessage(Lgov/nist/javax/sip/message/SIPMessage;)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPTransactionStack.addForkedClientTransaction(Lgov/nist/javax/sip/stack/SIPClientTransaction;)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPTransactionStack.addTransactionPendingAck(Lgov/nist/javax/sip/stack/SIPServerTransaction;)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPTransactionStack.putInMergeTable(Lgov/nist/javax/sip/stack/SIPServerTransaction;Lgov/nist/javax/sip/message/SIPRequest;)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPTransactionStack.putPendingTransaction(Lgov/nist/javax/sip/stack/SIPServerTransaction;)V
NO_CATEGORY gov.nist.javax.sip.stack.SIPTransactionStack.setHostAddress(Ljava/lang/String;)V
NO_CATEGORY gov.nist.javax.sip.stack.TCPMessageChannel.processMessage(Lgov/nist/javax/sip/message/SIPMessage;)V
NO_CATEGORY gov.nist.javax.sip.stack.TCPMessageChannel.sendMessage([BLjava/net/InetAddress;IZ)V
NO_CATEGORY gov.nist.javax.sip.stack.TCPMessageChannel.sendMessage(Lgov/nist/javax/sip/message/SIPMessage;)V
NO_CATEGORY gov.nist.javax.sip.stack.TCPMessageProcessor.cacheMessageChannel(Lgov/nist/javax/sip/stack/TCPMessageChannel;)V
NO_CATEGORY gov.nist.javax.sip.stack.TCPMessageProcessor.createMessageChannel(Lgov/nist/core/HostPort;)Lgov/nist/javax/sip/stack/MessageChannel;
NO_CATEGORY gov.nist.javax.sip.stack.TCPMessageProcessor.createMessageChannel(Ljava/net/InetAddress;I)Lgov/nist/javax/sip/stack/MessageChannel;
NO_CATEGORY gov.nist.javax.sip.stack.TLSMessageChannel.processMessage(Lgov/nist/javax/sip/message/SIPMessage;)V
NO_CATEGORY gov.nist.javax.sip.stack.TLSMessageChannel.sendMessage([BLjava/net/InetAddress;IZ)V
NO_CATEGORY gov.nist.javax.sip.stack.TLSMessageChannel.sendMessage(Lgov/nist/javax/sip/message/SIPMessage;)V
NO_CATEGORY gov.nist.javax.sip.stack.TLSMessageProcessor.cacheMessageChannel(Lgov/nist/javax/sip/stack/TLSMessageChannel;)V
NO_CATEGORY gov.nist.javax.sip.stack.TLSMessageProcessor.createMessageChannel(Lgov/nist/core/HostPort;)Lgov/nist/javax/sip/stack/MessageChannel;
NO_CATEGORY gov.nist.javax.sip.stack.TLSMessageProcessor.createMessageChannel(Ljava/net/InetAddress;I)Lgov/nist/javax/sip/stack/MessageChannel;
NO_CATEGORY gov.nist.javax.sip.stack.UDPMessageChannel$PingBackTimerTask.<init>(Lgov/nist/javax/sip/stack/UDPMessageChannel;Ljava/lang/String;I)V
NO_CATEGORY gov.nist.javax.sip.stack.UDPMessageChannel.sendMessage([BLjava/net/InetAddress;ILjava/lang/String;Z)V
NO_CATEGORY gov.nist.javax.sip.stack.UDPMessageChannel.sendMessage([BLjava/net/InetAddress;IZ)V
NO_CATEGORY gov.nist.javax.sip.stack.UDPMessageChannel.sendMessage(Lgov/nist/javax/sip/message/SIPMessage;)V
NO_CATEGORY java.io.BufferedOutputStream.write([BII)V
NO_CATEGORY java.io.BufferedWriter.write([CII)V
NO_CATEGORY java.io.BufferedWriter.write(Ljava/lang/String;II)V
NO_CATEGORY java.io.CharArrayWriter.append(C)Ljava/io/CharArrayWriter;
NO_CATEGORY java.io.DataOutputStream.write([BII)V
NO_CATEGORY java.io.DataOutputStream.writeByte(I)V
NO_CATEGORY java.io.DataOutputStream.writeChar(I)V
NO_CATEGORY java.io.DataOutputStream.writeChars(Ljava/lang/String;)V
NO_CATEGORY java.io.DataOutputStream.writeDouble(D)V
NO_CATEGORY java.io.DataOutputStream.writeFloat(F)V
NO_CATEGORY java.io.DataOutputStream.write(I)V
NO_CATEGORY java.io.DataOutputStream.writeUTF(Ljava/lang/String;)V
NO_CATEGORY java.io.EmulatedFieldsForDumping.put(Ljava/lang/String;B)V
NO_CATEGORY java.io.EmulatedFieldsForDumping.put(Ljava/lang/String;C)V
NO_CATEGORY java.io.EmulatedFieldsForDumping.put(Ljava/lang/String;D)V
NO_CATEGORY java.io.EmulatedFieldsForDumping.put(Ljava/lang/String;F)V
NO_CATEGORY java.io.EmulatedFieldsForDumping.put(Ljava/lang/String;I)V
NO_CATEGORY java.io.EmulatedFieldsForDumping.put(Ljava/lang/String;J)V
NO_CATEGORY java.io.EmulatedFieldsForDumping.put(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY java.io.EmulatedFieldsForDumping.put(Ljava/lang/String;S)V
NO_CATEGORY java.io.EmulatedFieldsForDumping.put(Ljava/lang/String;Z)V
NO_CATEGORY java.io.File.setExecutable(Z)Z
NO_CATEGORY java.io.File.setExecutable(ZZ)Z
NO_CATEGORY java.io.File.setLastModified(J)Z
NO_CATEGORY java.io.File.setReadable(Z)Z
NO_CATEGORY java.io.File.setReadable(ZZ)Z
NO_CATEGORY java.io.File.setWritable(Z)Z
NO_CATEGORY java.io.File.setWritable(ZZ)Z
NO_CATEGORY java.io.FilterOutputStream.write([BII)V
NO_CATEGORY java.io.FilterOutputStream.write(I)V
NO_CATEGORY java.io.ObjectOutputStream.write([BII)V
NO_CATEGORY java.io.ObjectOutputStream.writeBoolean(Z)V
NO_CATEGORY java.io.ObjectOutputStream.writeByte(I)V
NO_CATEGORY java.io.ObjectOutputStream.writeBytes(Ljava/lang/String;)V
NO_CATEGORY java.io.ObjectOutputStream.writeChar(I)V
NO_CATEGORY java.io.ObjectOutputStream.writeChars(Ljava/lang/String;)V
NO_CATEGORY java.io.ObjectOutputStream.writeClassDescriptor(Ljava/io/ObjectStreamClass;)V
NO_CATEGORY java.io.ObjectOutputStream.writeDouble(D)V
NO_CATEGORY java.io.ObjectOutputStream.writeFloat(F)V
NO_CATEGORY java.io.ObjectOutputStream.writeInt(I)V
NO_CATEGORY java.io.ObjectOutputStream.write(I)V
NO_CATEGORY java.io.ObjectOutputStream.writeLong(J)V
NO_CATEGORY java.io.ObjectOutputStream.writeObject(Ljava/lang/Object;)V
NO_CATEGORY java.io.ObjectOutputStream.writeShort(I)V android.permission.STOP_APP_SWITCHES 
NO_CATEGORY java.io.ObjectOutputStream.writeUnshared(Ljava/lang/Object;)V
NO_CATEGORY java.io.ObjectOutputStream.writeUTF(Ljava/lang/String;)V
NO_CATEGORY java.io.OutputStream.write([BII)V
NO_CATEGORY java.io.OutputStream.write([B)V
NO_CATEGORY java.io.OutputStreamWriter.write(Ljava/lang/String;)V

NO_CATEGORY java.io.FileWriter.write(Ljava/lang/String;)V

NO_CATEGORY java.io.PipedOutputStream.write([BII)V
NO_CATEGORY java.io.PrintStream.print(Ljava/lang/String;)V
NO_CATEGORY java.io.PrintStream.println(C)V
NO_CATEGORY java.io.PrintStream.println([C)V
NO_CATEGORY java.io.PrintStream.println(D)V
NO_CATEGORY java.io.PrintStream.println(F)V
NO_CATEGORY java.io.PrintStream.println(I)V
NO_CATEGORY java.io.PrintStream.println(J)V
NO_CATEGORY java.io.PrintStream.println(Ljava/lang/Object;)V
NO_CATEGORY java.io.PrintStream.println(Z)V
NO_CATEGORY java.io.PrintStream.write([BII)V
NO_CATEGORY java.io.PrintStream.write(I)V
NO_CATEGORY java.io.PrintWriter.append(C)Ljava/io/PrintWriter;
NO_CATEGORY java.io.PrintWriter.print(Ljava/lang/String;)V
NO_CATEGORY java.io.PrintWriter.println(C)V
NO_CATEGORY java.io.PrintWriter.println([C)V
NO_CATEGORY java.io.PrintWriter.println(D)V
NO_CATEGORY java.io.PrintWriter.println(F)V
NO_CATEGORY java.io.PrintWriter.println(I)V
NO_CATEGORY java.io.PrintWriter.println(J)V
NO_CATEGORY java.io.PrintWriter.println(Ljava/lang/Object;)V
NO_CATEGORY java.io.PrintWriter.println(Ljava/lang/String;)V
NO_CATEGORY java.io.PrintWriter.println(Z)V
NO_CATEGORY java.io.PrintWriter.write([C)V
NO_CATEGORY java.io.PrintWriter.write(Ljava/lang/String;II)V
NO_CATEGORY java.io.PrintWriter.write(Ljava/lang/String;)V
NO_CATEGORY java.io.RandomAccessFile.write([B)V
NO_CATEGORY java.io.RandomAccessFile.writeChar(I)V
NO_CATEGORY java.io.RandomAccessFile.writeChars(Ljava/lang/String;)V
NO_CATEGORY java.io.RandomAccessFile.writeDouble(D)V
NO_CATEGORY java.io.RandomAccessFile.writeFloat(F)V
NO_CATEGORY java.io.RandomAccessFile.writeUTF(Ljava/lang/String;)V
NO_CATEGORY java.io.Reader.read(Ljava/nio/CharBuffer;)I
NO_CATEGORY java.io.StringWriter.append(C)Ljava/io/StringWriter;
NO_CATEGORY java.io.Writer.append(C)Ljava/io/Writer;
NO_CATEGORY java.io.Writer.write([C)V
NO_CATEGORY java.io.Writer.write(Ljava/lang/String;)V
NO_CATEGORY java.lang.AbstractStringBuilder.setCharAt(IC)V
NO_CATEGORY java.lang.AbstractStringBuilder.substring(II)Ljava/lang/String;
NO_CATEGORY java.lang.ClassLoader.definePackage(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;)Ljava/lang/Package;
NO_CATEGORY java.lang.ClassLoader.setClassAssertionStatus(Ljava/lang/String;Z)V
NO_CATEGORY java.lang.ClassLoader.setDefaultAssertionStatus(Z)V
NO_CATEGORY java.lang.ClassLoader.setPackageAssertionStatus(Ljava/lang/String;Z)V
NO_CATEGORY java.lang.ProcessManager$ProcessImpl.setExitValue(I)V
NO_CATEGORY java.lang.reflect.Array.set(Ljava/lang/Object;ILjava/lang/Object;)V
NO_CATEGORY java.lang.reflect.Field.setBoolean(Ljava/lang/Object;Z)V
NO_CATEGORY java.lang.reflect.Field.setByte(Ljava/lang/Object;B)V
NO_CATEGORY java.lang.reflect.Field.setChar(Ljava/lang/Object;C)V
NO_CATEGORY java.lang.reflect.Field.setDouble(Ljava/lang/Object;D)V
NO_CATEGORY java.lang.reflect.Field.setFloat(Ljava/lang/Object;F)V
NO_CATEGORY java.lang.reflect.Field.setInt(Ljava/lang/Object;I)V
NO_CATEGORY java.lang.reflect.Field.set(Ljava/lang/Object;Ljava/lang/Object;)V
NO_CATEGORY java.lang.reflect.Field.setLong(Ljava/lang/Object;J)V
NO_CATEGORY java.lang.reflect.Field.setShort(Ljava/lang/Object;S)V
# NO_CATEGORY java.lang.StringBuffer.setCharAt(IC)V
# NO_CATEGORY java.lang.StringBuffer.setLength(I)V
# NO_CATEGORY java.lang.StringBuilder.setCharAt(IC)V
# NO_CATEGORY java.lang.StringBuilder.setLength(I)V
# NO_CATEGORY java.lang.String.startsWith(Ljava/lang/String;)Z
# NO_CATEGORY java.lang.String.substring(II)Ljava/lang/String;
NO_CATEGORY java.lang.System.setErr(Ljava/io/PrintStream;)V
NO_CATEGORY java.lang.System.setIn(Ljava/io/InputStream;)V
NO_CATEGORY java.lang.System.setOut(Ljava/io/PrintStream;)V
NO_CATEGORY java.lang.System.setProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
NO_CATEGORY java.lang.ThreadGroup.setMaxPriority(I)V
NO_CATEGORY java.lang.ThreadLocal.set(Ljava/lang/Object;)V
NO_CATEGORY java.lang.Throwable.setStackTrace([Ljava/lang/StackTraceElement;)V
#NO_CATEGORY java.math.BigDecimal.setScale(II)Ljava/math/BigDecimal;
#NO_CATEGORY java.math.BigDecimal.setScale(I)Ljava/math/BigDecimal;
#NO_CATEGORY java.math.BigDecimal.setScale(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
#NO_CATEGORY java.math.BigInteger.setBit(I)Ljava/math/BigInteger;
#NO_CATEGORY java.math.BigInt.setSign(I)V
NO_CATEGORY java.net.AddressCache.put(Ljava/lang/String;[Ljava/net/InetAddress;)V
NO_CATEGORY java.net.AddressCache.putUnknownHost(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY java.net.DatagramPacket.setSocketAddress(Ljava/net/SocketAddress;)V
NO_CATEGORY java.net.DatagramSocket.bind(Ljava/net/SocketAddress;)V
NO_CATEGORY java.net.DatagramSocket.send(Ljava/net/DatagramPacket;)V
NO_CATEGORY java.net.DatagramSocket.setBroadcast(Z)V
NO_CATEGORY java.net.DatagramSocket.setReceiveBufferSize(I)V
NO_CATEGORY java.net.DatagramSocket.setReuseAddress(Z)V
NO_CATEGORY java.net.DatagramSocket.setSendBufferSize(I)V
NO_CATEGORY java.net.DatagramSocket.setSoTimeout(I)V
NO_CATEGORY java.net.DatagramSocket.setTrafficClass(I)V
NO_CATEGORY java.net.MulticastSocket.send(Ljava/net/DatagramPacket;B)V
NO_CATEGORY java.net.MulticastSocket.setInterface(Ljava/net/InetAddress;)V
NO_CATEGORY java.net.MulticastSocket.setLoopbackMode(Z)V
NO_CATEGORY java.net.MulticastSocket.setNetworkInterface(Ljava/net/NetworkInterface;)V
NO_CATEGORY java.net.MulticastSocket.setTimeToLive(I)V
NO_CATEGORY java.net.MulticastSocket.setTTL(B)V
NO_CATEGORY java.net.PlainDatagramSocketImpl.setTimeToLive(I)V
NO_CATEGORY java.net.PlainDatagramSocketImpl.setTTL(B)V
NO_CATEGORY java.net.PlainSocketImpl$PlainSocketOutputStream.write(I)V
NO_CATEGORY java.net.ServerSocket.bind(Ljava/net/SocketAddress;I)V
NO_CATEGORY java.net.ServerSocket.bind(Ljava/net/SocketAddress;)V
NO_CATEGORY java.net.ServerSocket.setPerformancePreferences(III)V
NO_CATEGORY java.net.ServerSocket.setReceiveBufferSize(I)V
NO_CATEGORY java.net.ServerSocket.setReuseAddress(Z)V
NO_CATEGORY java.net.ServerSocket.setSoTimeout(I)V
NO_CATEGORY java.net.Socket.bind(Ljava/net/SocketAddress;)V
NO_CATEGORY java.net.SocketImpl.setPerformancePreferences(III)V
NO_CATEGORY java.net.Socket.sendUrgentData(I)V
NO_CATEGORY java.net.Socket.setKeepAlive(Z)V
NO_CATEGORY java.net.Socket.setOOBInline(Z)V
NO_CATEGORY java.net.Socket.setPerformancePreferences(III)V
NO_CATEGORY java.net.Socket.setReceiveBufferSize(I)V
NO_CATEGORY java.net.Socket.setReuseAddress(Z)V
NO_CATEGORY java.net.Socket.setSendBufferSize(I)V
NO_CATEGORY java.net.Socket.setSoLinger(ZI)V
NO_CATEGORY java.net.Socket.setSoTimeout(I)V
NO_CATEGORY java.net.Socket.setTcpNoDelay(Z)V
NO_CATEGORY java.net.Socket.setTrafficClass(I)V
NO_CATEGORY java.net.Socks4Message.setCommandOrResult(I)V
NO_CATEGORY java.net.Socks4Message.setIP([B)V
NO_CATEGORY java.net.Socks4Message.setPort(I)V
NO_CATEGORY java.net.Socks4Message.setUserId(Ljava/lang/String;)V
NO_CATEGORY java.net.URLConnection.setDefaultRequestProperty(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY java.net.URLConnection.setDefaultUseCaches(Z)V
NO_CATEGORY java.net.URLConnection.setRequestProperty(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY java.nio.BaseByteBuffer.putChar(C)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.BaseByteBuffer.putChar(IC)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.ByteBuffer.put([BII)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.channels.Channels$ChannelOutputStream.write([BII)V
NO_CATEGORY java.nio.channels.Channels$OutputStreamChannel.write(Ljava/nio/ByteBuffer;)I
NO_CATEGORY java.nio.CharBuffer.put([CII)Ljava/nio/CharBuffer;
NO_CATEGORY java.nio.CharBuffer.put(Ljava/lang/String;II)Ljava/nio/CharBuffer;
NO_CATEGORY java.nio.CharBuffer.put(Ljava/lang/String;)Ljava/nio/CharBuffer;
NO_CATEGORY java.nio.charset.CoderResult.malformedForLength(I)Ljava/nio/charset/CoderResult;
NO_CATEGORY java.nio.charset.CoderResult.unmappableForLength(I)Ljava/nio/charset/CoderResult;
NO_CATEGORY java.nio.CharToByteBufferAdapter.put([CII)Ljava/nio/CharBuffer;
NO_CATEGORY java.nio.CharToByteBufferAdapter.put(C)Ljava/nio/CharBuffer;
NO_CATEGORY java.nio.CharToByteBufferAdapter.put(IC)Ljava/nio/CharBuffer;
NO_CATEGORY java.nio.DatagramChannelImpl$DatagramSocketAdapter.bind(Ljava/net/SocketAddress;)V
NO_CATEGORY java.nio.DatagramChannelImpl$DatagramSocketAdapter.send(Ljava/net/DatagramPacket;)V
NO_CATEGORY java.nio.DatagramChannelImpl.read([Ljava/nio/ByteBuffer;II)J
NO_CATEGORY java.nio.DatagramChannelImpl.write(Ljava/nio/ByteBuffer;)I
NO_CATEGORY java.nio.DatagramChannelImpl.write([Ljava/nio/ByteBuffer;II)J
NO_CATEGORY java.nio.DoubleBuffer.put([DII)Ljava/nio/DoubleBuffer;
NO_CATEGORY java.nio.DoubleToByteBufferAdapter.put([DII)Ljava/nio/DoubleBuffer;
NO_CATEGORY java.nio.DoubleToByteBufferAdapter.put(D)Ljava/nio/DoubleBuffer;
NO_CATEGORY java.nio.DoubleToByteBufferAdapter.put(ID)Ljava/nio/DoubleBuffer;
NO_CATEGORY java.nio.FileChannelImpl.write(Ljava/nio/ByteBuffer;)I
NO_CATEGORY java.nio.FileChannelImpl.write(Ljava/nio/ByteBuffer;J)I
NO_CATEGORY java.nio.FloatBuffer.put([FII)Ljava/nio/FloatBuffer;
NO_CATEGORY java.nio.FloatToByteBufferAdapter.put([FII)Ljava/nio/FloatBuffer;
NO_CATEGORY java.nio.FloatToByteBufferAdapter.put(F)Ljava/nio/FloatBuffer;
NO_CATEGORY java.nio.FloatToByteBufferAdapter.put(IF)Ljava/nio/FloatBuffer;
NO_CATEGORY java.nio.IntBuffer.put([III)Ljava/nio/IntBuffer;
NO_CATEGORY java.nio.IntToByteBufferAdapter.put([III)Ljava/nio/IntBuffer;
NO_CATEGORY java.nio.IntToByteBufferAdapter.put(II)Ljava/nio/IntBuffer;
NO_CATEGORY java.nio.IntToByteBufferAdapter.put(I)Ljava/nio/IntBuffer;
NO_CATEGORY java.nio.LongBuffer.put([JII)Ljava/nio/LongBuffer;
NO_CATEGORY java.nio.LongToByteBufferAdapter.put(IJ)Ljava/nio/LongBuffer;
NO_CATEGORY java.nio.LongToByteBufferAdapter.put([JII)Ljava/nio/LongBuffer;
NO_CATEGORY java.nio.LongToByteBufferAdapter.put(J)Ljava/nio/LongBuffer;
NO_CATEGORY java.nio.MappedByteBufferAdapter.put([BII)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.MappedByteBufferAdapter.put(B)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.MappedByteBufferAdapter.putChar(C)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.MappedByteBufferAdapter.putChar(IC)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.MappedByteBufferAdapter.putDouble(D)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.MappedByteBufferAdapter.putDouble(ID)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.MappedByteBufferAdapter.putFloat(F)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.MappedByteBufferAdapter.putFloat(IF)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.MappedByteBufferAdapter.put(IB)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.MappedByteBufferAdapter.putInt(II)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.MappedByteBufferAdapter.putInt(I)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.MappedByteBufferAdapter.putLong(IJ)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.MappedByteBufferAdapter.putLong(J)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.MappedByteBufferAdapter.putShort(IS)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.MappedByteBufferAdapter.putShort(S)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.PipeImpl$PipeSinkChannel.write(Ljava/nio/ByteBuffer;)I
NO_CATEGORY java.nio.ReadWriteHeapByteBuffer.putDouble(D)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.ReadWriteHeapByteBuffer.putDouble(ID)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.ReadWriteHeapByteBuffer.putFloat(F)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.ReadWriteHeapByteBuffer.putFloat(IF)Ljava/nio/ByteBuffer;
NO_CATEGORY java.nio.ServerSocketChannelImpl$ServerSocketAdapter.bind(Ljava/net/SocketAddress;I)V
NO_CATEGORY java.nio.ServerSocketChannelImpl$ServerSocketAdapter.bind(Ljava/net/SocketAddress;)V
NO_CATEGORY java.nio.ShortBuffer.put([SII)Ljava/nio/ShortBuffer;
NO_CATEGORY java.nio.ShortToByteBufferAdapter.put(IS)Ljava/nio/ShortBuffer;
NO_CATEGORY java.nio.ShortToByteBufferAdapter.put([SII)Ljava/nio/ShortBuffer;
NO_CATEGORY java.nio.ShortToByteBufferAdapter.put(S)Ljava/nio/ShortBuffer;
NO_CATEGORY java.nio.SocketChannelImpl.read([Ljava/nio/ByteBuffer;II)J
NO_CATEGORY java.nio.SocketChannelImpl$SocketAdapter.bind(Ljava/net/SocketAddress;)V
NO_CATEGORY java.nio.SocketChannelImpl$SocketChannelOutputStream.write([BII)V
NO_CATEGORY java.nio.SocketChannelImpl.write(Ljava/nio/ByteBuffer;)I
NO_CATEGORY java.nio.SocketChannelImpl.write([Ljava/nio/ByteBuffer;II)J
NO_CATEGORY java.security.cert.PKIXParameters.setDate(Ljava/util/Date;)V
NO_CATEGORY java.security.KeyStore.setCertificateEntry(Ljava/lang/String;Ljava/security/cert/Certificate;)V
NO_CATEGORY java.security.KeyStore.setEntry(Ljava/lang/String;Ljava/security/KeyStore$Entry;Ljava/security/KeyStore$ProtectionParameter;)V
NO_CATEGORY java.security.KeyStore.setKeyEntry(Ljava/lang/String;[B[Ljava/security/cert/Certificate;)V
NO_CATEGORY java.security.KeyStore.setKeyEntry(Ljava/lang/String;Ljava/security/Key;[C[Ljava/security/cert/Certificate;)V
NO_CATEGORY java.security.Provider$Service.putAttribute(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY java.security.SecureRandom.setSeed([B)V
NO_CATEGORY java.security.SecureRandom.setSeed(J)V
NO_CATEGORY java.security.Security.setProperty(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY java.security.Signature.setParameter(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY java.sql.Date.setHours(I)V
NO_CATEGORY java.sql.Date.setMinutes(I)V
NO_CATEGORY java.sql.Date.setSeconds(I)V
NO_CATEGORY java.sql.Date.setTime(J)V
NO_CATEGORY java.text.AttributedString.addAttribute(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;II)V
NO_CATEGORY java.text.AttributedString.addAttribute(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;)V
NO_CATEGORY java.text.BreakIterator.setText(Ljava/lang/String;)V
NO_CATEGORY java.text.ChoiceFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;
NO_CATEGORY java.text.CollationElementIterator.setOffset(I)V
NO_CATEGORY java.text.CollationElementIterator.setText(Ljava/lang/String;)V
NO_CATEGORY java.text.Collator.setDecomposition(I)V
NO_CATEGORY java.text.Collator.setStrength(I)V
NO_CATEGORY java.text.DateFormat.setLenient(Z)V
NO_CATEGORY java.text.DateFormat.setTimeZone(Ljava/util/TimeZone;)V
NO_CATEGORY java.text.DateFormatSymbols.setAmPmStrings([Ljava/lang/String;)V
NO_CATEGORY java.text.DateFormatSymbols.setEras([Ljava/lang/String;)V
NO_CATEGORY java.text.DateFormatSymbols.setMonths([Ljava/lang/String;)V
NO_CATEGORY java.text.DateFormatSymbols.setShortMonths([Ljava/lang/String;)V
NO_CATEGORY java.text.DateFormatSymbols.setShortWeekdays([Ljava/lang/String;)V
NO_CATEGORY java.text.DateFormatSymbols.setWeekdays([Ljava/lang/String;)V
NO_CATEGORY java.text.DateFormatSymbols.setZoneStrings([[Ljava/lang/String;)V
NO_CATEGORY java.text.DecimalFormat.setCurrency(Ljava/util/Currency;)V android.permission.STOP_APP_SWITCHES 
NO_CATEGORY java.text.DecimalFormat.setDecimalFormatSymbols(Ljava/text/DecimalFormatSymbols;)V
NO_CATEGORY java.text.DecimalFormat.setDecimalSeparatorAlwaysShown(Z)V
NO_CATEGORY java.text.DecimalFormat.setGroupingSize(I)V
NO_CATEGORY java.text.DecimalFormat.setGroupingUsed(Z)V
NO_CATEGORY java.text.DecimalFormat.setMaximumFractionDigits(I)V
NO_CATEGORY java.text.DecimalFormat.setMaximumIntegerDigits(I)V
NO_CATEGORY java.text.DecimalFormat.setMinimumFractionDigits(I)V
NO_CATEGORY java.text.DecimalFormat.setMinimumIntegerDigits(I)V
NO_CATEGORY java.text.DecimalFormat.setMultiplier(I)V
NO_CATEGORY java.text.DecimalFormat.setNegativePrefix(Ljava/lang/String;)V
NO_CATEGORY java.text.DecimalFormat.setNegativeSuffix(Ljava/lang/String;)V
NO_CATEGORY java.text.DecimalFormat.setParseBigDecimal(Z)V
NO_CATEGORY java.text.DecimalFormat.setParseIntegerOnly(Z)V
NO_CATEGORY java.text.DecimalFormat.setPositivePrefix(Ljava/lang/String;)V
NO_CATEGORY java.text.DecimalFormat.setPositiveSuffix(Ljava/lang/String;)V
NO_CATEGORY java.text.DecimalFormatSymbols.setInternationalCurrencySymbol(Ljava/lang/String;)V
NO_CATEGORY java.text.MessageFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)[Ljava/lang/Object;
NO_CATEGORY java.text.MessageFormat.setFormatByArgumentIndex(ILjava/text/Format;)V
NO_CATEGORY java.text.MessageFormat.setFormat(ILjava/text/Format;)V
NO_CATEGORY java.text.MessageFormat.setFormatsByArgumentIndex([Ljava/text/Format;)V
NO_CATEGORY java.text.MessageFormat.setFormats([Ljava/text/Format;)V
NO_CATEGORY java.text.NumberFormat.setCurrency(Ljava/util/Currency;)V
NO_CATEGORY java.text.NumberFormat.setRoundingMode(Ljava/math/RoundingMode;)V
NO_CATEGORY java.text.RuleBasedBreakIterator.setText(Ljava/text/CharacterIterator;)V
NO_CATEGORY java.text.SimpleDateFormat.set2DigitYearStart(Ljava/util/Date;)V
NO_CATEGORY java.text.SimpleDateFormat.setDateFormatSymbols(Ljava/text/DateFormatSymbols;)V
NO_CATEGORY java.util.AbstractList$FullListIterator.set(Ljava/lang/Object;)V
NO_CATEGORY java.util.AbstractList.set(ILjava/lang/Object;)Ljava/lang/Object;
NO_CATEGORY java.util.AbstractList$SubAbstractList.set(ILjava/lang/Object;)Ljava/lang/Object;
NO_CATEGORY java.util.AbstractList$SubAbstractList$SubAbstractListIterator.set(Ljava/lang/Object;)V
NO_CATEGORY java.util.AbstractMap$SimpleImmutableEntry.setValue(Ljava/lang/Object;)Ljava/lang/Object;
NO_CATEGORY java.util.AbstractSequentialList.set(ILjava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY java.util.ArrayList.set(ILjava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY java.util.Arrays$ArrayList.set(ILjava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY java.util.BitSet.set(II)V
#NO_CATEGORY java.util.BitSet.set(IIZ)V
#NO_CATEGORY java.util.BitSet.set(I)V
#NO_CATEGORY java.util.BitSet.set(IZ)V
#NO_CATEGORY java.util.Calendar.set(IIIIII)V
#NO_CATEGORY java.util.Calendar.set(IIIII)V
#NO_CATEGORY java.util.Calendar.set(III)V
#NO_CATEGORY java.util.Calendar.setTime(Ljava/util/Date;)V
#NO_CATEGORY java.util.Collections$CheckedListIterator.set(Ljava/lang/Object;)V
#NO_CATEGORY java.util.Collections$CheckedList.set(ILjava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY java.util.Collections$CheckedMap$CheckedEntry.setValue(Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY java.util.Collections$CheckedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY java.util.Collections$SetFromMap.add(Ljava/lang/Object;)Z
#NO_CATEGORY java.util.Collections$SynchronizedList.set(ILjava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY java.util.Collections$SynchronizedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY java.util.Collections$UnmodifiableList.set(ILjava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry.setValue(Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY java.util.concurrent.atomic.AtomicBoolean.set(Z)V
#NO_CATEGORY java.util.concurrent.atomic.AtomicInteger.lazySet(I)V
#NO_CATEGORY java.util.concurrent.atomic.AtomicLong.lazySet(J)V
#NO_CATEGORY java.util.concurrent.atomic.AtomicReferenceArray.lazySet(ILjava/lang/Object;)V
#NO_CATEGORY java.util.concurrent.atomic.AtomicReferenceArray.set(ILjava/lang/Object;)V
#NO_CATEGORY java.util.concurrent.atomic.AtomicReference.lazySet(Ljava/lang/Object;)V
#NO_CATEGORY java.util.concurrent.ConcurrentHashMap$HashEntry.setNext(Ljava/util/concurrent/ConcurrentHashMap$HashEntry;)V
#NO_CATEGORY java.util.concurrent.ConcurrentHashMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY java.util.concurrent.ConcurrentHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY java.util.concurrent.ConcurrentHashMap.setEntryAt([Ljava/util/concurrent/ConcurrentHashMap$HashEntry;ILjava/util/concurrent/ConcurrentHashMap$HashEntry;)V
#NO_CATEGORY java.util.concurrent.ConcurrentHashMap$WriteThroughEntry.setValue(Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY java.util.concurrent.ConcurrentLinkedQueue$Node.lazySetNext(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)V
#NO_CATEGORY java.util.concurrent.CopyOnWriteArrayList$CowIterator.set(Ljava/lang/Object;)V
#NO_CATEGORY java.util.concurrent.CopyOnWriteArrayList$CowSubList.set(ILjava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY java.util.concurrent.CopyOnWriteArrayList.set(ILjava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.put(Ljava/lang/Object;)V
#NO_CATEGORY java.util.concurrent.ThreadPoolExecutor.setKeepAliveTime(JLjava/util/concurrent/TimeUnit;)V
#NO_CATEGORY java.util.Date.setDate(I)V
#NO_CATEGORY java.util.Date.setHours(I)V
#NO_CATEGORY java.util.Date.setMinutes(I)V
#NO_CATEGORY java.util.Date.setMonth(I)V
#NO_CATEGORY java.util.Date.setSeconds(I)V
#NO_CATEGORY java.util.Date.setYear(I)V
#NO_CATEGORY java.util.EnumMap$Entry.setValue(Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY java.util.EnumMap.put(Ljava/lang/Enum;Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY java.util.EnumMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY java.util.Formatter$CachedDecimalFormat.update(Llibcore/icu/LocaleData;Ljava/lang/String;)Llibcore/icu/NativeDecimalFormat;
#NO_CATEGORY java.util.Formatter$FormatToken.setFlag(I)Z
NO_CATEGORY java.util.GregorianCalendar.setGregorianChange(Ljava/util/Date;)V
# NO_CATEGORY java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
# NO_CATEGORY java.util.HashSet.add(Ljava/lang/Object;)Z
NO_CATEGORY java.util.HugeEnumSet.setRange(Ljava/lang/Enum;Ljava/lang/Enum;)V
NO_CATEGORY java.util.jar.Attributes.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
NO_CATEGORY java.util.jar.Attributes.putValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
NO_CATEGORY java.util.jar.JarFile$JarFileInputStream.read([BII)I
NO_CATEGORY java.util.jar.JarVerifier.addMetaEntry(Ljava/lang/String;[B)V
NO_CATEGORY java.util.jar.JarVerifier$VerifierEntry.write([BII)V
NO_CATEGORY java.util.jar.JarVerifier$VerifierEntry.write(I)V
NO_CATEGORY java.util.jar.Manifest.write(Ljava/io/OutputStream;)V
NO_CATEGORY java.util.jar.Manifest.write(Ljava/util/jar/Manifest;Ljava/io/OutputStream;)V
NO_CATEGORY java.util.logging.ErrorManager.error(Ljava/lang/String;Ljava/lang/Exception;I)V
NO_CATEGORY java.util.logging.Handler.setEncoding(Ljava/lang/String;)V
NO_CATEGORY java.util.logging.Logger.setLevel(Ljava/util/logging/Level;)V
NO_CATEGORY java.util.logging.Logger.setManager(Ljava/util/logging/LogManager;)V
NO_CATEGORY java.util.logging.Logger.setParent(Ljava/util/logging/Logger;)V
NO_CATEGORY java.util.logging.LogManager.addLogger(Ljava/util/logging/Logger;)Z
NO_CATEGORY java.util.MiniEnumSet.setRange(Ljava/lang/Enum;Ljava/lang/Enum;)V
NO_CATEGORY java.util.Properties.setProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
NO_CATEGORY java.util.Properties.store(Ljava/io/Writer;Ljava/lang/String;)V
NO_CATEGORY java.util.Properties.storeToXML(Ljava/io/OutputStream;Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY java.util.Random.setSeed(J)V
#NO_CATEGORY java.util.TreeMap$BoundedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY java.util.TreeMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
#NO_CATEGORY java.util.TreeSet.add(Ljava/lang/Object;)Z
#NO_CATEGORY java.util.Vector.setElementAt(Ljava/lang/Object;I)V
#NO_CATEGORY java.util.Vector.set(ILjava/lang/Object;)Ljava/lang/Object;
NO_CATEGORY java.util.zip.Adler32.update([BII)V
NO_CATEGORY java.util.zip.Adler32.update([B)V
NO_CATEGORY java.util.zip.Adler32.update(I)V
NO_CATEGORY java.util.zip.CRC32.update([BII)V
NO_CATEGORY java.util.zip.CRC32.update([B)V
NO_CATEGORY java.util.zip.CRC32.update(I)V
NO_CATEGORY java.util.zip.DeflaterOutputStream.write(I)V
NO_CATEGORY java.util.zip.Deflater.setDictionary([BII)V
NO_CATEGORY java.util.zip.Deflater.setDictionary([B)V
NO_CATEGORY java.util.zip.Deflater.setInput([B)V
NO_CATEGORY java.util.zip.GZIPOutputStream.write([BII)V
NO_CATEGORY java.util.zip.Inflater.setDictionary([BII)V
NO_CATEGORY java.util.zip.Inflater.setDictionary([B)V
NO_CATEGORY java.util.zip.Inflater.setInput([B)V
NO_CATEGORY java.util.zip.ZipEntry.setTime(J)V
NO_CATEGORY java.util.zip.ZipOutputStream.write([BII)V
NO_CATEGORY javax.crypto.CipherOutputStream.write(I)V
NO_CATEGORY javax.net.ssl.SSLContext.setDefault(Ljavax/net/ssl/SSLContext;)V
NO_CATEGORY javax.net.ssl.SSLEngine.setSSLParameters(Ljavax/net/ssl/SSLParameters;)V
NO_CATEGORY javax.net.ssl.SSLParameters.setCipherSuites([Ljava/lang/String;)V
NO_CATEGORY javax.net.ssl.SSLParameters.setProtocols([Ljava/lang/String;)V
NO_CATEGORY javax.net.ssl.SSLSocket.setSSLParameters(Ljavax/net/ssl/SSLParameters;)V
NO_CATEGORY javax.obex.ClientOperation.sendHeaders(Ljavax/obex/HeaderSet;)V
NO_CATEGORY javax.obex.ClientSession.delete(Ljavax/obex/HeaderSet;)Ljavax/obex/HeaderSet;
NO_CATEGORY javax.obex.ClientSession.sendRequest(I[BLjavax/obex/HeaderSet;Ljavax/obex/PrivateInputStream;)Z
NO_CATEGORY javax.obex.ClientSession.setConnectionID(J)V
NO_CATEGORY javax.obex.ClientSession.setPath(Ljavax/obex/HeaderSet;ZZ)Ljavax/obex/HeaderSet;
NO_CATEGORY javax.obex.HeaderSet.setHeader(ILjava/lang/Object;)V
NO_CATEGORY javax.obex.ObexHelper.createHeader(Ljavax/obex/HeaderSet;Z)[B
NO_CATEGORY javax.obex.PrivateOutputStream.readBytes(I)[B
NO_CATEGORY javax.obex.PrivateOutputStream.write([BII)V
NO_CATEGORY javax.obex.PrivateOutputStream.write([B)V
NO_CATEGORY javax.obex.PrivateOutputStream.write(I)V
NO_CATEGORY javax.obex.ServerOperation.sendHeaders(Ljavax/obex/HeaderSet;)V
NO_CATEGORY javax.obex.ServerOperation.sendReply(I)Z
NO_CATEGORY javax.obex.ServerSession.sendResponse(I[B)V
NO_CATEGORY javax.sip.SipFactory.createSipStack(Ljava/util/Properties;)Ljavax/sip/SipStack;
NO_CATEGORY javax.xml.parsers.DocumentBuilderFactory.setSchema(Ljavax/xml/validation/Schema;)V
NO_CATEGORY javax.xml.parsers.DocumentBuilderFactory.setXIncludeAware(Z)V
NO_CATEGORY javax.xml.validation.ValidatorHandler.setFeature(Ljava/lang/String;Z)V
NO_CATEGORY javax.xml.validation.ValidatorHandler.setProperty(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY javax.xml.validation.Validator.setFeature(Ljava/lang/String;Z)V
NO_CATEGORY javax.xml.validation.Validator.setProperty(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY junit.runner.BaseTestRunner.setPreference(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY junit.textui.ResultPrinter.printFooter(Ljunit/framework/TestResult;)V
NO_CATEGORY libcore.icu.CollationElementIteratorICU.setOffset(I)V
NO_CATEGORY libcore.icu.CollationElementIteratorICU.setText(Ljava/lang/String;)V
NO_CATEGORY libcore.icu.NativeBreakIterator.setText(Ljava/lang/String;)V
NO_CATEGORY libcore.icu.NativeConverter.setCallbackDecode(JLjava/nio/charset/CharsetDecoder;)V
NO_CATEGORY libcore.icu.NativeConverter.setCallbackEncode(JLjava/nio/charset/CharsetEncoder;)V
NO_CATEGORY libcore.icu.NativeDecimalFormat.setCurrency(Ljava/util/Currency;)V
NO_CATEGORY libcore.icu.NativeDecimalFormat.setDecimalFormatSymbols(Ljava/text/DecimalFormatSymbols;)V
NO_CATEGORY libcore.icu.NativeDecimalFormat.setDecimalFormatSymbols(Llibcore/icu/LocaleData;)V
NO_CATEGORY libcore.icu.NativeDecimalFormat.setDecimalSeparatorAlwaysShown(Z)V
NO_CATEGORY libcore.icu.NativeDecimalFormat.setGroupingSize(I)V
NO_CATEGORY libcore.icu.NativeDecimalFormat.setGroupingUsed(Z)V
NO_CATEGORY libcore.icu.NativeDecimalFormat.setMaximumFractionDigits(I)V
NO_CATEGORY libcore.icu.NativeDecimalFormat.setMaximumIntegerDigits(I)V
NO_CATEGORY libcore.icu.NativeDecimalFormat.setMinimumFractionDigits(I)V
NO_CATEGORY libcore.icu.NativeDecimalFormat.setMinimumIntegerDigits(I)V
NO_CATEGORY libcore.icu.NativeDecimalFormat.setMultiplier(I)V
NO_CATEGORY libcore.icu.NativeDecimalFormat.setNegativePrefix(Ljava/lang/String;)V
NO_CATEGORY libcore.icu.NativeDecimalFormat.setNegativeSuffix(Ljava/lang/String;)V
NO_CATEGORY libcore.icu.NativeDecimalFormat.setParseIntegerOnly(Z)V
NO_CATEGORY libcore.icu.NativeDecimalFormat.setPositivePrefix(Ljava/lang/String;)V
NO_CATEGORY libcore.icu.NativeDecimalFormat.setPositiveSuffix(Ljava/lang/String;)V
NO_CATEGORY libcore.icu.NativeDecimalFormat.setRoundingMode(Ljava/math/RoundingMode;D)V
NO_CATEGORY libcore.icu.RuleBasedCollatorICU.setAttribute(II)V
NO_CATEGORY libcore.icu.RuleBasedCollatorICU.setDecomposition(I)V
NO_CATEGORY libcore.icu.RuleBasedCollatorICU.setStrength(I)V
NO_CATEGORY libcore.io.DropBox$DefaultReporter.addData(Ljava/lang/String;[BI)V
NO_CATEGORY libcore.io.DropBox$DefaultReporter.addText(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY libcore.io.ForwardingOs.setegid(I)V
NO_CATEGORY libcore.io.ForwardingOs.seteuid(I)V
NO_CATEGORY libcore.io.ForwardingOs.setgid(I)V
NO_CATEGORY libcore.io.ForwardingOs.setuid(I)V
NO_CATEGORY libcore.io.Streams.copy(Ljava/io/InputStream;Ljava/io/OutputStream;)I
NO_CATEGORY libcore.io.Streams.readFully(Ljava/io/Reader;)Ljava/lang/String;
NO_CATEGORY libcore.io.Streams.readFullyNoClose(Ljava/io/InputStream;)[B
NO_CATEGORY libcore.net.http.AbstractHttpInputStream.cacheWrite([BII)V
NO_CATEGORY libcore.net.http.ChunkedOutputStream.write([BII)V
#NO_CATEGORY libcore.net.http.FixedLengthOutputStream.write([BII)V
#NO_CATEGORY libcore.net.http.HttpConnectionPool.recycle(Llibcore/net/http/HttpConnection;)V
#NO_CATEGORY libcore.net.http.HttpConnection.setRecycled()V
#NO_CATEGORY libcore.net.http.HttpConnection.setSoTimeout(I)V
#NO_CATEGORY libcore.net.http.HttpConnection.setupSecureSocket(Ljavax/net/ssl/SSLSocketFactory;Z)V
#NO_CATEGORY libcore.net.http.HttpsURLConnectionImpl.setAllowUserInteraction(Z)V
#NO_CATEGORY libcore.net.http.HttpsURLConnectionImpl.setChunkedStreamingMode(I)V
#NO_CATEGORY libcore.net.http.HttpsURLConnectionImpl.setConnectTimeout(I)V
#NO_CATEGORY libcore.net.http.HttpsURLConnectionImpl.setDefaultUseCaches(Z)V
#NO_CATEGORY libcore.net.http.HttpsURLConnectionImpl.setDoInput(Z)V
#NO_CATEGORY libcore.net.http.HttpsURLConnectionImpl.setDoOutput(Z)V
#NO_CATEGORY libcore.net.http.HttpsURLConnectionImpl.setFixedLengthStreamingMode(I)V
#NO_CATEGORY libcore.net.http.HttpsURLConnectionImpl.setIfModifiedSince(J)V
#NO_CATEGORY libcore.net.http.HttpsURLConnectionImpl.setInstanceFollowRedirects(Z)V
#NO_CATEGORY libcore.net.http.HttpsURLConnectionImpl.setReadTimeout(I)V
#NO_CATEGORY libcore.net.http.HttpsURLConnectionImpl.setRequestMethod(Ljava/lang/String;)V
#NO_CATEGORY libcore.net.http.HttpsURLConnectionImpl.setRequestProperty(Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY libcore.net.http.HttpsURLConnectionImpl.setUseCaches(Z)V
#NO_CATEGORY libcore.net.http.HttpURLConnectionImpl.setRequestProperty(Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY libcore.net.http.RawHeaders.set(Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY libcore.net.http.RawHeaders.setStatusLine(Ljava/lang/String;)V
#NO_CATEGORY libcore.net.http.RequestHeaders.setIfModifiedSince(Ljava/util/Date;)V
#NO_CATEGORY libcore.net.http.RetryableOutputStream.write([BII)V
#NO_CATEGORY libcore.net.http.RetryableOutputStream.writeToSocket(Ljava/io/OutputStream;)V
#NO_CATEGORY libcore.net.UriCodec.decode(Ljava/lang/String;ZLjava/nio/charset/Charset;Z)Ljava/lang/String;
#NO_CATEGORY libcore.net.url.JarURLConnectionImpl.setDefaultUseCaches(Z)V
#NO_CATEGORY libcore.net.url.JarURLConnectionImpl.setUseCaches(Z)V
NO_CATEGORY org.apache.commons.io.IOUtils.copyLarge(Ljava/io/InputStream;Ljava/io/OutputStream;)J
NO_CATEGORY org.apache.harmony.crypto.internal.NullCipherSpi.engineUpdate(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
NO_CATEGORY org.apache.harmony.dalvik.ddmc.DdmServer.registerHandler(ILorg/apache/harmony/dalvik/ddmc/ChunkHandler;)V
NO_CATEGORY org.apache.harmony.security.asn1.ASN1Any.setEncodingContent(Lorg/apache/harmony/security/asn1/BerOutputStream;)V
NO_CATEGORY org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList.setEncodingContent(Lorg/apache/harmony/security/asn1/BerOutputStream;)V
NO_CATEGORY org.apache.harmony.security.asn1.ASN1BitString.setEncodingContent(Lorg/apache/harmony/security/asn1/BerOutputStream;)V
NO_CATEGORY org.apache.harmony.security.asn1.ASN1Boolean.setEncodingContent(Lorg/apache/harmony/security/asn1/BerOutputStream;)V
NO_CATEGORY org.apache.harmony.security.asn1.ASN1Enumerated.setEncodingContent(Lorg/apache/harmony/security/asn1/BerOutputStream;)V
NO_CATEGORY org.apache.harmony.security.asn1.ASN1Explicit.setEncodingContent(Lorg/apache/harmony/security/asn1/BerOutputStream;)V
NO_CATEGORY org.apache.harmony.security.asn1.ASN1GeneralizedTime.setEncodingContent(Lorg/apache/harmony/security/asn1/BerOutputStream;)V
NO_CATEGORY org.apache.harmony.security.asn1.ASN1Implicit.setEncodingContent(Lorg/apache/harmony/security/asn1/BerOutputStream;)V
NO_CATEGORY org.apache.harmony.security.asn1.ASN1Integer.setEncodingContent(Lorg/apache/harmony/security/asn1/BerOutputStream;)V
NO_CATEGORY org.apache.harmony.security.asn1.ASN1OctetString.setEncodingContent(Lorg/apache/harmony/security/asn1/BerOutputStream;)V
NO_CATEGORY org.apache.harmony.security.asn1.ASN1Oid$1.setEncodingContent(Lorg/apache/harmony/security/asn1/BerOutputStream;)V
NO_CATEGORY org.apache.harmony.security.asn1.ASN1Oid.setEncodingContent(Lorg/apache/harmony/security/asn1/BerOutputStream;)V
NO_CATEGORY org.apache.harmony.security.asn1.ASN1SequenceOf.setEncodingContent(Lorg/apache/harmony/security/asn1/BerOutputStream;)V
NO_CATEGORY org.apache.harmony.security.asn1.ASN1Sequence.setEncodingContent(Lorg/apache/harmony/security/asn1/BerOutputStream;)V
NO_CATEGORY org.apache.harmony.security.asn1.ASN1SetOf.setEncodingContent(Lorg/apache/harmony/security/asn1/BerOutputStream;)V
NO_CATEGORY org.apache.harmony.security.asn1.ASN1Set.setEncodingContent(Lorg/apache/harmony/security/asn1/BerOutputStream;)V
NO_CATEGORY org.apache.harmony.security.asn1.ASN1StringType.setEncodingContent(Lorg/apache/harmony/security/asn1/BerOutputStream;)V
NO_CATEGORY org.apache.harmony.security.asn1.ASN1UTCTime.setEncodingContent(Lorg/apache/harmony/security/asn1/BerOutputStream;)V
NO_CATEGORY org.apache.harmony.security.asn1.BitString.setBit(IZ)V
NO_CATEGORY org.apache.harmony.security.fortress.Services.initServiceInfo(Ljava/security/Provider;)V
NO_CATEGORY org.apache.harmony.security.x501.AttributeTypeAndValue$1.setEncodingContent(Lorg/apache/harmony/security/asn1/BerOutputStream;)V
NO_CATEGORY org.apache.harmony.security.x509.AlternativeName.dumpValue(Ljava/lang/StringBuilder;Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.security.x509.AuthorityKeyIdentifier.dumpValue(Ljava/lang/StringBuilder;Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.security.x509.CertificateIssuer.dumpValue(Ljava/lang/StringBuilder;Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.security.x509.CertificatePolicies.dumpValue(Ljava/lang/StringBuilder;Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.security.x509.CRLDistributionPoints.dumpValue(Ljava/lang/StringBuilder;Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.security.x509.DistributionPoint.dumpValue(Ljava/lang/StringBuilder;Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.security.x509.DistributionPointName.dumpValue(Ljava/lang/StringBuilder;Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.security.x509.ExtendedKeyUsage.dumpValue(Ljava/lang/StringBuilder;Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.security.x509.Extension.dumpValue(Ljava/lang/StringBuilder;Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.security.x509.Extensions.dumpValue(Ljava/lang/StringBuilder;Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.security.x509.ExtensionValue.dumpValue(Ljava/lang/StringBuilder;)V
NO_CATEGORY org.apache.harmony.security.x509.IssuingDistributionPoint.dumpValue(Ljava/lang/StringBuilder;Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.security.x509.NameConstraints.dumpValue(Ljava/lang/StringBuilder;Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.security.x509.ReasonFlags$1.setEncodingContent(Lorg/apache/harmony/security/asn1/BerOutputStream;)V
NO_CATEGORY org.apache.harmony.security.x509.TBSCertificate.dumpValue(Ljava/lang/StringBuilder;)V
NO_CATEGORY org.apache.harmony.security.x509.TBSCertList.dumpValue(Ljava/lang/StringBuilder;)V
NO_CATEGORY org.apache.harmony.security.x509.TBSCertList$RevokedCertificate.dumpValue(Ljava/lang/StringBuilder;Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xml.dom.AttrImpl.setPrefix(Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xml.dom.CharacterDataImpl.setData(Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xml.dom.DOMConfigurationImpl$FixedParameter.set(Lorg/apache/harmony/xml/dom/DOMConfigurationImpl;Ljava/lang/Object;)V
NO_CATEGORY org.apache.harmony.xml.dom.DOMConfigurationImpl.setParameter(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY org.apache.harmony.xml.dom.ElementImpl.setAttribute(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xml.dom.ElementImpl.setAttributeNS(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xml.dom.ElementImpl.setIdAttribute(Ljava/lang/String;Z)V
NO_CATEGORY org.apache.harmony.xml.dom.ElementImpl.setIdAttributeNS(Ljava/lang/String;Ljava/lang/String;Z)V
NO_CATEGORY org.apache.harmony.xml.dom.ElementImpl.setPrefix(Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xml.dom.NodeImpl.setNodeValue(Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xml.dom.NodeImpl.setPrefix(Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xml.dom.NodeImpl.setTextContent(Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xml.dom.NodeImpl.setUserData(Ljava/lang/String;Ljava/lang/Object;Lorg/w3c/dom/UserDataHandler;)Ljava/lang/Object;
NO_CATEGORY org.apache.harmony.xml.ExpatParser$EntityParser.startElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;II)V
NO_CATEGORY org.apache.harmony.xml.ExpatParser.startDtd(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xml.ExpatParser.startElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;II)V
NO_CATEGORY org.apache.harmony.xml.ExpatParser.startNamespace(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xml.ExpatReader.setProperty(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl.setFeature(Ljava/lang/String;Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.AbstractSessionContext.setSessionTimeout(I)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.AbstractSessionContext.toBytes(Ljavax/net/ssl/SSLSession;)[B
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.AlertProtocol.alert(BB)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.CertificateMessage.send(Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.CertificateRequest.send(Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.CertificateVerify.send(Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.ClientHello.send(Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.ClientKeyExchange.send(Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.ClientSessionContext.setSessionTimeout(I)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.ConnectionStateSSLv3.decrypt(B[BII)[B
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.ConnectionStateSSLv3.encrypt(B[BII)[B
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.ConnectionStateSSLv3.<init>(Lorg/apache/harmony/xnet/provider/jsse/SSLSessionImpl;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.ConnectionStateTLS.decrypt(B[BII)[B
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.ConnectionStateTLS.encrypt(B[BII)[B
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.DigitalSignature.update([B)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.FileClientSessionCache$Impl.putSessionData(Ljavax/net/ssl/SSLSession;[B)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.FileClientSessionCache.usingDirectory(Ljava/io/File;)Lorg/apache/harmony/xnet/provider/jsse/SSLClientSessionCache;
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.Finished.send(Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.HandshakeProtocol.send(Lorg/apache/harmony/xnet/provider/jsse/Message;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.Logger$Stream.println(Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.NativeCrypto.setEnabledCipherSuites(I[Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.NativeCrypto.setEnabledProtocols(I[Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl.setEnabledCipherSuites([Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl.setEnabledProtocols([Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl.setEnableSessionCreation(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl.setNeedClientAuth(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl.setUseClientMode(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl.setWantClientAuth(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl.putValue(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl.sendUrgentData(I)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl.setEnabledCipherSuites([Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl.setEnabledProtocols([Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl.setEnableSessionCreation(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl.setNeedClientAuth(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl.setOOBInline(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl.setUseClientMode(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl.setWantClientAuth(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl$SSLOutputStream.write(I)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper.setKeepAlive(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper.setReceiveBufferSize(I)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper.setReuseAddress(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper.setSendBufferSize(I)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper.setSoLinger(ZI)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper.setSoTimeout(I)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper.setTcpNoDelay(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper.setTrafficClass(I)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.PinFailureLogger.log(Ljava/lang/String;ZZLjava/util/List;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.ServerHelloDone.send(Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.ServerHello.send(Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.ServerKeyExchange.send(Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.ServerSessionContext.setSessionTimeout(I)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLEngineImpl.setEnabledCipherSuites([Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLEngineImpl.setEnabledProtocols([Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLEngineImpl.setEnableSessionCreation(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLEngineImpl.setNeedClientAuth(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLEngineImpl.setUseClientMode(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLEngineImpl.setWantClientAuth(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLEngineImpl.wrap([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol.alert(BB)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol.wrap(B[BII)[B
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl.setEnabledCipherSuites([Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl.setEnabledProtocols([Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl.setEnableSessionCreation(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl.setNeedClientAuth(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl.setUseClientMode(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl.setWantClientAuth(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLSessionImpl.putValue(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLSocketImpl.sendUrgentData(I)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLSocketImpl.setEnabledCipherSuites([Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLSocketImpl.setEnabledProtocols([Ljava/lang/String;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLSocketImpl.setEnableSessionCreation(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLSocketImpl.setNeedClientAuth(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLSocketImpl.setOOBInline(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLSocketImpl.setUseClientMode(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLSocketImpl.setWantClientAuth(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLSocketImpl.writeAppData([BII)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLSocketOutputStream.write([BII)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLSocketOutputStream.write(I)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper.setKeepAlive(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper.setReceiveBufferSize(I)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper.setReuseAddress(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper.setSendBufferSize(I)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper.setSoLinger(ZI)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper.setSoTimeout(I)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper.setTcpNoDelay(Z)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper.setTrafficClass(I)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.TrustedCertificateIndex.index(Ljava/security/cert/TrustAnchor;)V
NO_CATEGORY org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore.installCertificate(Ljava/security/cert/X509Certificate;)V
NO_CATEGORY org.apache.http.auth.AuthSchemeRegistry.register(Ljava/lang/String;Lorg/apache/http/auth/AuthSchemeFactory;)V
NO_CATEGORY org.apache.http.auth.AuthSchemeRegistry.setItems(Ljava/util/Map;)V
NO_CATEGORY org.apache.http.conn.BasicManagedEntity.writeTo(Ljava/io/OutputStream;)V
NO_CATEGORY org.apache.http.conn.scheme.SchemeRegistry.register(Lorg/apache/http/conn/scheme/Scheme;)Lorg/apache/http/conn/scheme/Scheme;
NO_CATEGORY org.apache.http.conn.scheme.SchemeRegistry.setItems(Ljava/util/Map;)V
NO_CATEGORY org.apache.http.cookie.CookieSpecRegistry.register(Ljava/lang/String;Lorg/apache/http/cookie/CookieSpecFactory;)V
NO_CATEGORY org.apache.http.cookie.CookieSpecRegistry.setItems(Ljava/util/Map;)V
NO_CATEGORY org.apache.http.entity.AbstractHttpEntity.setContentEncoding(Ljava/lang/String;)V
NO_CATEGORY org.apache.http.entity.AbstractHttpEntity.setContentType(Ljava/lang/String;)V
NO_CATEGORY org.apache.http.entity.BufferedHttpEntity.writeTo(Ljava/io/OutputStream;)V
NO_CATEGORY org.apache.http.entity.HttpEntityWrapper.writeTo(Ljava/io/OutputStream;)V
NO_CATEGORY org.apache.http.impl.AbstractHttpClientConnection.sendRequestHeader(Lorg/apache/http/HttpRequest;)V
NO_CATEGORY org.apache.http.impl.auth.DigestScheme.overrideParamter(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY org.apache.http.impl.client.BasicCredentialsProvider.setCredentials(Lorg/apache/http/auth/AuthScope;Lorg/apache/http/auth/Credentials;)V
NO_CATEGORY org.apache.http.impl.client.ClientParamsStack.setParameter(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;
NO_CATEGORY org.apache.http.impl.client.DefaultRequestDirector.handleResponse(Lorg/apache/http/impl/client/RoutedRequest;Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/impl/client/RoutedRequest;
NO_CATEGORY org.apache.http.impl.conn.AbstractClientConnAdapter.setIdleDuration(JLjava/util/concurrent/TimeUnit;)V
NO_CATEGORY org.apache.http.impl.conn.AbstractClientConnAdapter.setSocketTimeout(I)V
NO_CATEGORY org.apache.http.impl.conn.AbstractPooledConnAdapter.setState(Ljava/lang/Object;)V
NO_CATEGORY org.apache.http.impl.conn.DefaultClientConnection.openCompleted(ZLorg/apache/http/params/HttpParams;)V
NO_CATEGORY org.apache.http.impl.conn.DefaultClientConnection.update(Ljava/net/Socket;Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V
NO_CATEGORY org.apache.http.impl.conn.LoggingSessionOutputBuffer.write([BII)V
NO_CATEGORY org.apache.http.impl.conn.LoggingSessionOutputBuffer.write([B)V
NO_CATEGORY org.apache.http.impl.conn.LoggingSessionOutputBuffer.write(I)V
NO_CATEGORY org.apache.http.impl.conn.LoggingSessionOutputBuffer.writeLine(Ljava/lang/String;)V
NO_CATEGORY org.apache.http.impl.conn.LoggingSessionOutputBuffer.writeLine(Lorg/apache/http/util/CharArrayBuffer;)V
NO_CATEGORY org.apache.http.impl.cookie.AbstractCookieSpec.registerAttribHandler(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V
NO_CATEGORY org.apache.http.impl.cookie.BasicClientCookie.setAttribute(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY org.apache.http.impl.cookie.BasicClientCookie.setDomain(Ljava/lang/String;)V
NO_CATEGORY org.apache.http.impl.cookie.DateUtils$DateFormatHolder.formatFor(Ljava/lang/String;)Ljava/text/SimpleDateFormat;
NO_CATEGORY org.apache.http.impl.HttpConnectionMetricsImpl.setMetric(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY org.apache.http.impl.io.AbstractSessionOutputBuffer.write([BII)V
NO_CATEGORY org.apache.http.impl.io.AbstractSessionOutputBuffer.write([B)V
NO_CATEGORY org.apache.http.impl.io.AbstractSessionOutputBuffer.writeLine(Ljava/lang/String;)V
NO_CATEGORY org.apache.http.impl.io.AbstractSessionOutputBuffer.writeLine(Lorg/apache/http/util/CharArrayBuffer;)V
NO_CATEGORY org.apache.http.impl.io.ChunkedOutputStream.flushCacheWithAppend([BII)V
NO_CATEGORY org.apache.http.impl.io.ChunkedOutputStream.write([B)V
NO_CATEGORY org.apache.http.impl.io.ContentLengthOutputStream.write([BII)V
NO_CATEGORY org.apache.http.impl.io.ContentLengthOutputStream.write([B)V
NO_CATEGORY org.apache.http.impl.io.ContentLengthOutputStream.write(I)V
NO_CATEGORY org.apache.http.impl.io.IdentityOutputStream.write([BII)V
NO_CATEGORY org.apache.http.impl.io.IdentityOutputStream.write([B)V
NO_CATEGORY org.apache.http.impl.io.IdentityOutputStream.write(I)V
NO_CATEGORY org.apache.http.impl.SocketHttpClientConnection.setSocketTimeout(I)V
NO_CATEGORY org.apache.http.message.AbstractHttpMessage.setHeader(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY org.apache.http.message.AbstractHttpMessage.setHeader(Lorg/apache/http/Header;)V
NO_CATEGORY org.apache.http.message.AbstractHttpMessage.setHeaders([Lorg/apache/http/Header;)V
NO_CATEGORY org.apache.http.message.BasicHttpResponse.setReasonPhrase(Ljava/lang/String;)V
NO_CATEGORY org.apache.http.message.BasicHttpResponse.setStatusCode(I)V
NO_CATEGORY org.apache.http.message.BasicHttpResponse.setStatusLine(Lorg/apache/http/ProtocolVersion;ILjava/lang/String;)V
NO_CATEGORY org.apache.http.message.BasicHttpResponse.setStatusLine(Lorg/apache/http/ProtocolVersion;I)V
NO_CATEGORY org.apache.http.message.HeaderGroup.setHeaders([Lorg/apache/http/Header;)V
NO_CATEGORY org.apache.http.params.AbstractHttpParams.setBooleanParameter(Ljava/lang/String;Z)Lorg/apache/http/params/HttpParams;
NO_CATEGORY org.apache.http.params.AbstractHttpParams.setDoubleParameter(Ljava/lang/String;D)Lorg/apache/http/params/HttpParams;
NO_CATEGORY org.apache.http.params.AbstractHttpParams.setIntParameter(Ljava/lang/String;I)Lorg/apache/http/params/HttpParams;
NO_CATEGORY org.apache.http.params.AbstractHttpParams.setLongParameter(Ljava/lang/String;J)Lorg/apache/http/params/HttpParams;
NO_CATEGORY org.apache.http.params.BasicHttpParams.setParameter(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;
NO_CATEGORY org.apache.http.params.BasicHttpParams.setParameters([Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY org.apache.http.protocol.BasicHttpContext.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY org.apache.http.protocol.DefaultedHttpContext.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY org.apache.james.mime4j.decoder.DecoderUtil.decodeBase64(Ljava/lang/String;)[B
NO_CATEGORY org.apache.james.mime4j.decoder.DecoderUtil.decodeBaseQuotedPrintable(Ljava/lang/String;)[B
NO_CATEGORY org.apache.james.mime4j.field.ContentTypeField$Parser.parse(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/james/mime4j/field/Field;
NO_CATEGORY org.apache.james.mime4j.field.DelegatingFieldParser.setFieldParser(Ljava/lang/String;Lorg/apache/james/mime4j/field/FieldParser;)V
NO_CATEGORY org.ccil.cowan.tagsoup.AttributesImpl.setAttribute(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY org.ccil.cowan.tagsoup.AttributesImpl.setLocalName(ILjava/lang/String;)V
NO_CATEGORY org.ccil.cowan.tagsoup.AttributesImpl.setQName(ILjava/lang/String;)V
NO_CATEGORY org.ccil.cowan.tagsoup.AttributesImpl.setType(ILjava/lang/String;)V
NO_CATEGORY org.ccil.cowan.tagsoup.AttributesImpl.setURI(ILjava/lang/String;)V
NO_CATEGORY org.ccil.cowan.tagsoup.AttributesImpl.setValue(ILjava/lang/String;)V
NO_CATEGORY org.ccil.cowan.tagsoup.Element.setAttribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY org.ccil.cowan.tagsoup.ElementType.setAttribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY org.ccil.cowan.tagsoup.ElementType.setAttribute(Lorg/ccil/cowan/tagsoup/AttributesImpl;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY org.ccil.cowan.tagsoup.HTMLScanner.scan(Ljava/io/Reader;Lorg/ccil/cowan/tagsoup/ScanHandler;)V
NO_CATEGORY org.ccil.cowan.tagsoup.Parser.setFeature(Ljava/lang/String;Z)V
NO_CATEGORY org.ccil.cowan.tagsoup.Parser.setProperty(Ljava/lang/String;Ljava/lang/Object;)V
NO_CATEGORY org.ccil.cowan.tagsoup.PYXWriter.aname([CII)V
NO_CATEGORY org.ccil.cowan.tagsoup.PYXWriter.aval([CII)V
NO_CATEGORY org.ccil.cowan.tagsoup.PYXWriter.endElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY org.ccil.cowan.tagsoup.PYXWriter.etag([CII)V
NO_CATEGORY org.ccil.cowan.tagsoup.PYXWriter.gi([CII)V
NO_CATEGORY org.ccil.cowan.tagsoup.PYXWriter.pi([CII)V
NO_CATEGORY org.ccil.cowan.tagsoup.PYXWriter.pitarget([CII)V
NO_CATEGORY org.ccil.cowan.tagsoup.PYXWriter.processingInstruction(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY org.ccil.cowan.tagsoup.PYXWriter.startElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V
NO_CATEGORY org.ccil.cowan.tagsoup.Schema.elementType(Ljava/lang/String;III)V
NO_CATEGORY org.ccil.cowan.tagsoup.Schema.entity(Ljava/lang/String;I)V

#NO_CATEGORY org.kxml2.io.KXmlParser.defineEntityReplacementText(Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY org.kxml2.io.KXmlParser.setInput(Ljava/io/InputStream;Ljava/lang/String;)V
#NO_CATEGORY org.kxml2.io.KXmlParser.setProperty(Ljava/lang/String;Ljava/lang/Object;)V
#NO_CATEGORY org.xmlpull.v1.XmlPullParserFactory.setFeature(Ljava/lang/String;Z)V
#NO_CATEGORY org.xmlpull.v1.XmlPullParserFactory.setNamespaceAware(Z)V
#NO_CATEGORY org.xmlpull.v1.XmlPullParserFactory.setValidating(Z)V
#NO_CATEGORY org.xml.sax.helpers.AttributesImpl.setAttribute(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY org.xml.sax.helpers.AttributesImpl.setLocalName(ILjava/lang/String;)V
#NO_CATEGORY org.xml.sax.helpers.AttributesImpl.setQName(ILjava/lang/String;)V
#NO_CATEGORY org.xml.sax.helpers.AttributesImpl.setType(ILjava/lang/String;)V
#NO_CATEGORY org.xml.sax.helpers.AttributesImpl.setURI(ILjava/lang/String;)V
#NO_CATEGORY org.xml.sax.helpers.AttributesImpl.setValue(ILjava/lang/String;)V
#NO_CATEGORY org.xml.sax.helpers.NamespaceSupport$Context.declarePrefix(Ljava/lang/String;Ljava/lang/String;)V
#NO_CATEGORY org.xml.sax.helpers.ParserAdapter.setProperty(Ljava/lang/String;Ljava/lang/Object;)V
#NO_CATEGORY org.xml.sax.helpers.ParserAdapter.startElement(Ljava/lang/String;Lorg/xml/sax/AttributeList;)V
PHONE_CONNECTION com.android.internal.telephony.CallManager.sendBurstDtmf(Ljava/lang/String;IILandroid/os/Message;)Z
PHONE_CONNECTION com.android.internal.telephony.CallManager.sendDtmf(C)Z
PHONE_CONNECTION com.android.internal.telephony.cdma.CdmaDataConnectionTracker.onDisconnectDone(ILandroid/os/AsyncResult;)V
PHONE_CONNECTION com.android.internal.telephony.cdma.CDMALTEPhone.sendDtmf(C)V android.permission.WAKE_LOCK 
PHONE_CONNECTION com.android.internal.telephony.cdma.CDMAPhone.sendBurstDtmf(Ljava/lang/String;IILandroid/os/Message;)V
PHONE_CONNECTION com.android.internal.telephony.cdma.CDMAPhone.sendDtmf(C)V android.permission.WAKE_LOCK 
PHONE_CONNECTION com.android.internal.telephony.cdma.CDMAPhone.startDtmf(C)V
PHONE_CONNECTION com.android.internal.telephony.DataConnectionAc.addApnContextSync(Lcom/android/internal/telephony/ApnContext;)V
PHONE_CONNECTION com.android.internal.telephony.DataConnectionAc.removeApnContextSync(Lcom/android/internal/telephony/ApnContext;)V
PHONE_CONNECTION com.android.internal.telephony.DataConnectionAc.reqSetReconnectIntent(Landroid/app/PendingIntent;)V
PHONE_CONNECTION com.android.internal.telephony.DataConnectionAc.setLinkPropertiesHttpProxySync(Landroid/net/ProxyProperties;)V
PHONE_CONNECTION com.android.internal.telephony.DataConnectionAc.setReconnectIntentSync(Landroid/app/PendingIntent;)V
PHONE_CONNECTION com.android.internal.telephony.DataConnectionAc.updateLinkPropertiesDataCallStateSync(Lcom/android/internal/telephony/DataCallState;)Lcom/android/internal/telephony/DataConnection$UpdateLinkPropertyResult;
PHONE_CONNECTION com.android.internal.telephony.gsm.GsmDataConnection.onConnect(Lcom/android/internal/telephony/DataConnection$ConnectionParams;)V android.permission.WAKE_LOCK 
PHONE_CONNECTION com.android.internal.telephony.gsm.GsmDataConnectionTracker.onDisconnectDone(ILandroid/os/AsyncResult;)V
PHONE_CONNECTION com.android.internal.telephony.gsm.GsmMmiCode.sendUssd(Ljava/lang/String;)V
PHONE_CONNECTION com.android.internal.telephony.gsm.GSMPhone.sendBurstDtmf(Ljava/lang/String;)V
PHONE_CONNECTION com.android.internal.telephony.gsm.GSMPhone.sendDtmf(C)V
PHONE_CONNECTION com.android.internal.telephony.gsm.GSMPhone.sendUssdResponse(Ljava/lang/String;)V
PHONE_CONNECTION com.android.internal.telephony.gsm.GSMPhone.startDtmf(C)V
PHONE_CONNECTION com.android.internal.telephony.PhoneProxy.sendBurstDtmf(Ljava/lang/String;IILandroid/os/Message;)V
PHONE_CONNECTION com.android.internal.telephony.PhoneProxy.sendDtmf(C)V android.permission.STOP_APP_SWITCHES 
PHONE_CONNECTION com.android.internal.telephony.PhoneProxy.sendUssdResponse(Ljava/lang/String;)V
PHONE_CONNECTION com.android.internal.telephony.RIL.hangupWaitingOrBackground(Landroid/os/Message;)V android.permission.WAKE_LOCK 
PHONE_CONNECTION com.android.internal.telephony.RIL.sendBurstDtmf(Ljava/lang/String;IILandroid/os/Message;)V
PHONE_CONNECTION com.android.internal.telephony.RIL.sendDtmf(CLandroid/os/Message;)V
PHONE_CONNECTION com.android.internal.telephony.sip.SipPhone.sendBurstDtmf(Ljava/lang/String;)V
PHONE_CONNECTION com.android.internal.telephony.sip.SipPhone.sendDtmf(C)V
PHONE_CONNECTION com.android.internal.telephony.sip.SipPhone.sendUssdResponse(Ljava/lang/String;)V
PHONE_CONNECTION com.android.internal.telephony.sip.SipPhone.startDtmf(C)V
PHONE_CONNECTION com.android.server.ConnectivityService.sendConnectedBroadcast(Landroid/net/NetworkInfo;)V
PHONE_CONNECTION com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState.notify(I)V
PHONE_CONNECTION com.android.server.connectivity.Tethering$TetherMasterSM$InitialState.turnOnUpstreamMobileConnection(I)Z android.permission.READ_PHONE_STATE android.permission.BLUETOOTH android.permission.CHANGE_WIFI_STATE android.permission.ACCESS_WIFI_STATE android.permission.CHANGE_NETWORK_STATE android.permission.BLUETOOTH_ADMIN android.permission.ACCESS_NETWORK_STATE 
PHONE_CONNECTION com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState.notifyTetheredOfNewUpstreamIface(Ljava/lang/String;)V
PHONE_CONNECTION com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState.turnOnUpstreamMobileConnection(I)Z android.permission.READ_PHONE_STATE android.permission.BLUETOOTH android.permission.CHANGE_WIFI_STATE android.permission.ACCESS_WIFI_STATE android.permission.CHANGE_NETWORK_STATE android.permission.BLUETOOTH_ADMIN android.permission.ACCESS_NETWORK_STATE 
PHONE_CONNECTION com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState.turnOnUpstreamMobileConnection(I)Z android.permission.READ_PHONE_STATE android.permission.BLUETOOTH android.permission.CHANGE_WIFI_STATE android.permission.ACCESS_WIFI_STATE android.permission.CHANGE_NETWORK_STATE android.permission.BLUETOOTH_ADMIN android.permission.ACCESS_NETWORK_STATE 
PHONE_STATE com.android.internal.telephony.ApnContext.setDataConnectionAc(Lcom/android/internal/telephony/DataConnectionAc;)V
PHONE_STATE com.android.internal.telephony.ApnContext.setDataConnection(Lcom/android/internal/telephony/DataConnection;)V
PHONE_STATE com.android.internal.telephony.BaseCommands.setOnIccRefresh(Landroid/os/Handler;ILjava/lang/Object;)V
PHONE_STATE com.android.internal.telephony.BaseCommands.setOnIccSmsFull(Landroid/os/Handler;ILjava/lang/Object;)V
PHONE_STATE com.android.internal.telephony.cdma.CDMALTEPhone.notifyDataConnection(Ljava/lang/String;Ljava/lang/String;)V android.permission.BROADCAST_STICKY 
PHONE_STATE com.android.internal.telephony.cdma.CDMAPhone.notifyDataConnection(Ljava/lang/String;Ljava/lang/String;)V android.permission.BROADCAST_STICKY 
PHONE_STATE com.android.internal.telephony.cdma.CDMAPhone.notifyDisconnect(Lcom/android/internal/telephony/Connection;)V
PHONE_STATE com.android.internal.telephony.cdma.CDMAPhone.notifyNewRingingConnection(Lcom/android/internal/telephony/Connection;)V
PHONE_STATE com.android.internal.telephony.DataConnectionTracker.notifyDataConnection(Ljava/lang/String;)V
PHONE_STATE com.android.internal.telephony.DefaultPhoneNotifier.notifyDataConnectionFailed(Lcom/android/internal/telephony/Phone;Ljava/lang/String;Ljava/lang/String;)V
PHONE_STATE com.android.internal.telephony.gsm.GsmDataConnectionTracker.notifyDataConnection(Ljava/lang/String;)V
PHONE_STATE com.android.internal.telephony.gsm.GSMPhone.notifyDataConnection(Ljava/lang/String;Ljava/lang/String;)V android.permission.BROADCAST_STICKY 
PHONE_STATE com.android.internal.telephony.gsm.GSMPhone.notifyDisconnect(Lcom/android/internal/telephony/Connection;)V
PHONE_STATE com.android.internal.telephony.gsm.GSMPhone.notifyNewRingingConnection(Lcom/android/internal/telephony/Connection;)V
PHONE_STATE com.android.internal.telephony.IccCardProxy.setIccFdnEnabled(ZLjava/lang/String;Landroid/os/Message;)V
PHONE_STATE com.android.internal.telephony.IccCardProxy.setIccLockEnabled(ZLjava/lang/String;Landroid/os/Message;)V
PHONE_STATE com.android.internal.telephony.IPhoneStateListener$Stub$Proxy.onDataConnectionStateChanged(II)V
PHONE_STATE com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifyDataConnectionFailed(Ljava/lang/String;Ljava/lang/String;)V
PHONE_STATE com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifyDataConnection(IZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/net/LinkProperties;Landroid/net/LinkCapabilities;IZ)V
PHONE_STATE com.android.internal.telephony.PhoneBase.notifyDataConnectionFailed(Ljava/lang/String;Ljava/lang/String;)V
PHONE_STATE com.android.internal.telephony.PhoneBase.notifyDataConnection(Ljava/lang/String;Ljava/lang/String;Lcom/android/internal/telephony/PhoneConstants$DataState;)V
PHONE_STATE com.android.internal.telephony.PhoneBase.notifyDataConnection(Ljava/lang/String;Ljava/lang/String;)V android.permission.BROADCAST_STICKY 
PHONE_STATE com.android.internal.telephony.PhoneBase.notifyDataConnection(Ljava/lang/String;)V
PHONE_STATE com.android.internal.telephony.PhoneBase.notifyDisconnectP(Lcom/android/internal/telephony/Connection;)V
PHONE_STATE com.android.internal.telephony.PhoneBase.notifyNewRingingConnectionP(Lcom/android/internal/telephony/Connection;)V
PHONE_STATE com.android.internal.telephony.RIL.changeIccPin2ForApp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
PHONE_STATE com.android.internal.telephony.RIL.changeIccPinForApp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
PHONE_STATE com.android.internal.telephony.RIL.hangupConnection(ILandroid/os/Message;)V
PHONE_STATE com.android.internal.telephony.RIL.iccIOForApp(IILjava/lang/String;IIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
PHONE_STATE com.android.internal.telephony.RIL.separateConnection(ILandroid/os/Message;)V
PHONE_STATE com.android.internal.telephony.RIL.supplyIccPin2ForApp(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V android.permission.WAKE_LOCK 
PHONE_STATE com.android.internal.telephony.RIL.supplyIccPinForApp(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
PHONE_STATE com.android.internal.telephony.RIL.supplyIccPuk2ForApp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V android.permission.WAKE_LOCK 
PHONE_STATE com.android.internal.telephony.RIL.supplyIccPukForApp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
PHONE_STATE com.android.internal.telephony.sip.SipPhoneBase.notifyDataConnection(Ljava/lang/String;Ljava/lang/String;)V android.permission.BROADCAST_STICKY 
PHONE_STATE com.android.internal.telephony.sip.SipPhoneBase.notifyDisconnect(Lcom/android/internal/telephony/Connection;)V
PHONE_STATE com.android.internal.telephony.sip.SipPhoneBase.notifyNewRingingConnection(Lcom/android/internal/telephony/Connection;)V
PHONE_STATE com.android.internal.telephony.sip.SipPhone.notifyDataConnection(Ljava/lang/String;Ljava/lang/String;)V android.permission.BROADCAST_STICKY 
PHONE_STATE com.android.internal.telephony.UiccCardApplication.changeIccFdnPassword(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
PHONE_STATE com.android.internal.telephony.UiccCardApplication.changeIccLockPassword(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
PHONE_STATE com.android.internal.telephony.UiccCardApplication.setIccFdnEnabled(ZLjava/lang/String;Landroid/os/Message;)V
PHONE_STATE com.android.internal.telephony.UiccCardApplication.setIccLockEnabled(ZLjava/lang/String;Landroid/os/Message;)V
PHONE_STATE com.android.server.TelephonyRegistry.notifyDataConnectionFailed(Ljava/lang/String;Ljava/lang/String;)V android.permission.BROADCAST_STICKY 
PHONE_STATE com.android.server.TelephonyRegistry.notifyDataConnection(IZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/net/LinkProperties;Landroid/net/LinkCapabilities;IZ)V
SMS_MMS android.provider.Telephony$Sms.moveMessageToFolder(Landroid/content/Context;Landroid/net/Uri;II)Z
SMS_MMS android.telephony.gsm.SmsManager.sendDataMessage(Ljava/lang/String;Ljava/lang/String;S[BLandroid/app/PendingIntent;Landroid/app/PendingIntent;)V
SMS_MMS android.telephony.gsm.SmsManager.sendMultipartTextMessage(Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V android.permission.SEND_SMS 
SMS_MMS android.telephony.gsm.SmsManager.sendTextMessage(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/app/PendingIntent;Landroid/app/PendingIntent;)V
SMS_MMS android.telephony.gsm.SmsManager.updateMessageOnSim(II[B)Z android.permission.SEND_SMS android.permission.RECEIVE_SMS android.permission.WAKE_LOCK 
SMS_MMS android.telephony.SmsCbMessage.writeToParcel(Landroid/os/Parcel;I)V
SMS_MMS android.telephony.SmsManager.copyMessageToIcc([B[BI)Z
SMS_MMS android.telephony.SmsManager.deleteMessageFromIcc(I)Z android.permission.SEND_SMS android.permission.RECEIVE_SMS android.permission.WAKE_LOCK 
SMS_MMS android.telephony.SmsManager.disableCellBroadcast(I)Z android.permission.RECEIVE_SMS 
SMS_MMS android.telephony.SmsManager.disableCellBroadcastRange(II)Z
SMS_MMS android.telephony.SmsManager.enableCellBroadcast(I)Z
SMS_MMS android.telephony.SmsManager.enableCellBroadcastRange(II)Z
SMS_MMS android.telephony.SmsManager.sendDataMessage(Ljava/lang/String;Ljava/lang/String;S[BLandroid/app/PendingIntent;Landroid/app/PendingIntent;)V
SMS_MMS android.telephony.SmsManager.sendMultipartTextMessage(Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V
SMS_MMS android.telephony.SmsManager.sendTextMessage(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/app/PendingIntent;Landroid/app/PendingIntent;)V
SMS_MMS android.telephony.SmsManager.updateMessageOnIcc(II[B)Z
SMS_MMS com.android.internal.telephony.cdma.CDMAPhone.sendUssdResponse(Ljava/lang/String;)V
SMS_MMS com.android.internal.telephony.cdma.CdmaSMSDispatcher.dispatch(Landroid/content/Intent;Ljava/lang/String;Landroid/content/BroadcastReceiver;)V android.permission.WAKE_LOCK 
SMS_MMS com.android.internal.telephony.cdma.CdmaSMSDispatcher.dispatch(Landroid/content/Intent;Ljava/lang/String;)V android.permission.WAKE_LOCK 
SMS_MMS com.android.internal.telephony.cdma.CdmaSMSDispatcher.dispatchMessage(Lcom/android/internal/telephony/SmsMessageBase;)I android.permission.READ_SMS android.permission.SEND_SMS android.permission.WRITE_SMS android.permission.RECEIVE_SMS android.permission.READ_CONTACTS android.permission.WRITE_CONTACTS android.permission.WAKE_LOCK 
SMS_MMS com.android.internal.telephony.cdma.CdmaSMSDispatcher.processMessagePart([BLjava/lang/String;IIIJIZ)I android.permission.READ_SMS android.permission.SEND_SMS android.permission.WRITE_SMS android.permission.RECEIVE_SMS android.permission.READ_CONTACTS android.permission.WRITE_CONTACTS android.permission.WAKE_LOCK 
SMS_MMS com.android.internal.telephony.cdma.CdmaSMSDispatcher.sendData(Ljava/lang/String;Ljava/lang/String;I[BLandroid/app/PendingIntent;Landroid/app/PendingIntent;)V
SMS_MMS com.android.internal.telephony.cdma.CdmaSMSDispatcher.sendNewSubmitPdu(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/android/internal/telephony/SmsHeader;ILandroid/app/PendingIntent;Landroid/app/PendingIntent;Z)V
SMS_MMS com.android.internal.telephony.cdma.CdmaSMSDispatcher.sendSms(Lcom/android/internal/telephony/SMSDispatcher$SmsTracker;)V
SMS_MMS com.android.internal.telephony.cdma.CdmaSMSDispatcher.sendSubmitPdu(Lcom/android/internal/telephony/cdma/SmsMessage$SubmitPdu;Landroid/app/PendingIntent;Landroid/app/PendingIntent;Ljava/lang/String;)V android.permission.WAKE_LOCK 
SMS_MMS com.android.internal.telephony.cdma.CdmaSMSDispatcher.sendText(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/app/PendingIntent;Landroid/app/PendingIntent;)V
SMS_MMS com.android.internal.telephony.cdma.RuimSmsInterfaceManager.copyMessageToIccEf(I[B[B)Z
SMS_MMS com.android.internal.telephony.cdma.RuimSmsInterfaceManager.enableCellBroadcast(I)Z
SMS_MMS com.android.internal.telephony.cdma.RuimSmsInterfaceManager.enableCellBroadcastRange(II)Z
SMS_MMS com.android.internal.telephony.cdma.RuimSmsInterfaceManager.sendData(Ljava/lang/String;Ljava/lang/String;I[BLandroid/app/PendingIntent;Landroid/app/PendingIntent;)V android.permission.SEND_SMS 
SMS_MMS com.android.internal.telephony.cdma.RuimSmsInterfaceManager.updateMessageOnIccEf(II[B)Z
SMS_MMS com.android.internal.telephony.gsm.GsmSMSDispatcher.dispatch(Landroid/content/Intent;Ljava/lang/String;Landroid/content/BroadcastReceiver;)V android.permission.WAKE_LOCK 
SMS_MMS com.android.internal.telephony.gsm.GsmSMSDispatcher.dispatch(Landroid/content/Intent;Ljava/lang/String;)V android.permission.WAKE_LOCK 
SMS_MMS com.android.internal.telephony.gsm.GsmSMSDispatcher.dispatchMessage(Lcom/android/internal/telephony/SmsMessageBase;)I
SMS_MMS com.android.internal.telephony.gsm.GsmSMSDispatcher.processMessagePart([BLjava/lang/String;IIIJIZ)I android.permission.READ_SMS android.permission.SEND_SMS android.permission.WRITE_SMS android.permission.RECEIVE_SMS android.permission.READ_CONTACTS android.permission.WRITE_CONTACTS android.permission.WAKE_LOCK 
SMS_MMS com.android.internal.telephony.gsm.GsmSMSDispatcher.sendData(Ljava/lang/String;Ljava/lang/String;I[BLandroid/app/PendingIntent;Landroid/app/PendingIntent;)V
SMS_MMS com.android.internal.telephony.gsm.GsmSMSDispatcher.sendNewSubmitPdu(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/android/internal/telephony/SmsHeader;ILandroid/app/PendingIntent;Landroid/app/PendingIntent;Z)V android.permission.WAKE_LOCK 
SMS_MMS com.android.internal.telephony.gsm.GsmSMSDispatcher.sendSms(Lcom/android/internal/telephony/SMSDispatcher$SmsTracker;)V
SMS_MMS com.android.internal.telephony.gsm.GsmSMSDispatcher.sendText(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/app/PendingIntent;Landroid/app/PendingIntent;)V
SMS_MMS com.android.internal.telephony.gsm.SimSmsInterfaceManager.copyMessageToIccEf(I[B[B)Z
SMS_MMS com.android.internal.telephony.gsm.SimSmsInterfaceManager.enableCellBroadcast(I)Z
SMS_MMS com.android.internal.telephony.gsm.SimSmsInterfaceManager.enableCellBroadcastRange(II)Z
SMS_MMS com.android.internal.telephony.gsm.SimSmsInterfaceManager.sendData(Ljava/lang/String;Ljava/lang/String;I[BLandroid/app/PendingIntent;Landroid/app/PendingIntent;)V android.permission.SEND_SMS 
SMS_MMS com.android.internal.telephony.gsm.SimSmsInterfaceManager.updateMessageOnIccEf(II[B)Z
SMS_MMS com.android.internal.telephony.IccSmsInterfaceManagerProxy.enableCellBroadcast(I)Z
SMS_MMS com.android.internal.telephony.IccSmsInterfaceManagerProxy.enableCellBroadcastRange(II)Z
SMS_MMS com.android.internal.telephony.IccSmsInterfaceManagerProxy.sendData(Ljava/lang/String;Ljava/lang/String;I[BLandroid/app/PendingIntent;Landroid/app/PendingIntent;)V
SMS_MMS com.android.internal.telephony.IccSmsInterfaceManagerProxy.sendMultipartText(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
SMS_MMS com.android.internal.telephony.IccSmsInterfaceManagerProxy.sendText(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/app/PendingIntent;Landroid/app/PendingIntent;)V
SMS_MMS com.android.internal.telephony.IccSmsInterfaceManagerProxy.setPremiumSmsPermission(Ljava/lang/String;I)V
SMS_MMS com.android.internal.telephony.IccSmsInterfaceManagerProxy.updateMessageOnIccEf(II[B)Z
SMS_MMS com.android.internal.telephony.IccSmsInterfaceManager.sendData(Ljava/lang/String;Ljava/lang/String;I[BLandroid/app/PendingIntent;Landroid/app/PendingIntent;)V android.permission.SEND_SMS 
SMS_MMS com.android.internal.telephony.IccSmsInterfaceManager.sendMultipartText(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
SMS_MMS com.android.internal.telephony.IccSmsInterfaceManager.sendText(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/app/PendingIntent;Landroid/app/PendingIntent;)V
SMS_MMS com.android.internal.telephony.IccSmsInterfaceManager.setPremiumSmsPermission(Ljava/lang/String;I)V
SMS_MMS com.android.internal.telephony.ISms$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
SMS_MMS com.android.internal.telephony.ISms$Stub$Proxy.copyMessageToIccEf(I[B[B)Z
SMS_MMS com.android.internal.telephony.ISms$Stub$Proxy.disableCellBroadcast(I)Z android.permission.RECEIVE_SMS 
SMS_MMS com.android.internal.telephony.ISms$Stub$Proxy.disableCellBroadcastRange(II)Z android.permission.RECEIVE_SMS android.permission.WAKE_LOCK 
SMS_MMS com.android.internal.telephony.ISms$Stub$Proxy.enableCellBroadcast(I)Z
SMS_MMS com.android.internal.telephony.ISms$Stub$Proxy.enableCellBroadcastRange(II)Z
SMS_MMS com.android.internal.telephony.ISms$Stub$Proxy.sendData(Ljava/lang/String;Ljava/lang/String;I[BLandroid/app/PendingIntent;Landroid/app/PendingIntent;)V android.permission.SEND_SMS 
SMS_MMS com.android.internal.telephony.ISms$Stub$Proxy.sendMultipartText(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
SMS_MMS com.android.internal.telephony.ISms$Stub$Proxy.sendText(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/app/PendingIntent;Landroid/app/PendingIntent;)V
SMS_MMS com.android.internal.telephony.ISms$Stub$Proxy.setPremiumSmsPermission(Ljava/lang/String;I)V
SMS_MMS com.android.internal.telephony.ISms$Stub$Proxy.updateMessageOnIccEf(II[B)Z
SMS_MMS com.android.internal.telephony.SMSDispatcher.dispatchBroadcastMessage(Landroid/telephony/SmsCbMessage;)V
SMS_MMS com.android.internal.telephony.SMSDispatcher.dispatch(Landroid/content/Intent;Ljava/lang/String;Landroid/content/BroadcastReceiver;)V android.permission.WAKE_LOCK 
SMS_MMS com.android.internal.telephony.SMSDispatcher.dispatch(Landroid/content/Intent;Ljava/lang/String;)V android.permission.WAKE_LOCK 
SMS_MMS com.android.internal.telephony.SMSDispatcher.dispatchPdus([[B)V
SMS_MMS com.android.internal.telephony.SMSDispatcher.dispatchPortAddressedPdus([[BI)V
SMS_MMS com.android.internal.telephony.SMSDispatcher.handleSendComplete(Landroid/os/AsyncResult;)V
SMS_MMS com.android.internal.telephony.SMSDispatcher.processMessagePart([BLjava/lang/String;IIIJIZ)I android.permission.READ_SMS android.permission.SEND_SMS android.permission.WRITE_SMS android.permission.RECEIVE_SMS android.permission.READ_CONTACTS android.permission.WRITE_CONTACTS android.permission.WAKE_LOCK 
SMS_MMS com.android.internal.telephony.SMSDispatcher.sendMultipartText(Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V
SMS_MMS com.android.internal.telephony.SMSDispatcher.sendRawPdu([B[BLandroid/app/PendingIntent;Landroid/app/PendingIntent;Ljava/lang/String;)V
SMS_MMS com.android.internal.telephony.SMSDispatcher.setPremiumSmsPermission(Ljava/lang/String;I)V
SMS_MMS com.android.internal.telephony.SmsHeader.toByteArray(Lcom/android/internal/telephony/SmsHeader;)[B
SMS_MMS com.android.internal.telephony.SmsUsageMonitor.check(Ljava/lang/String;I)Z
SMS_MMS com.android.internal.telephony.SmsUsageMonitor.setPremiumSmsPermission(Ljava/lang/String;I)V
SMS_MMS com.android.internal.telephony.WapPushOverSms.dispatchWapPdu([B)I
SMS_MMS com.android.mms.data.Conversation.setDraftState(Z)V
SMS_MMS com.android.mms.data.Conversation.startDeleteAll(Lcom/android/mms/data/Conversation$ConversationQueryHandler;IZ)V
SMS_MMS com.android.mms.data.Conversation.startDelete(Lcom/android/mms/data/Conversation$ConversationQueryHandler;IZLjava/util/Collection;)V
SMS_MMS com.android.mms.data.Conversation.startQuery(Landroid/content/AsyncQueryHandler;ILjava/lang/String;)V
SMS_MMS com.android.mms.data.RecipientIdCache.updateNumbers(JLcom/android/mms/data/ContactList;)V
SMS_MMS com.android.mms.data.WorkingMessage.send(Ljava/lang/String;)V
SMS_MMS com.android.mms.data.WorkingMessage.setHasEmail(ZZ)V
SMS_MMS com.android.mms.data.WorkingMessage.setHasMultipleRecipients(ZZ)V
SMS_MMS com.android.mms.data.WorkingMessage.setLengthRequiresMms(ZZ)V
SMS_MMS com.android.mms.dom.AttrImpl.setNodeValue(Ljava/lang/String;)V
SMS_MMS com.android.mms.dom.DocumentImpl.setDocumentURI(Ljava/lang/String;)V
SMS_MMS com.android.mms.dom.DocumentImpl.setStrictErrorChecking(Z)V
SMS_MMS com.android.mms.dom.DocumentImpl.setXmlStandalone(Z)V
SMS_MMS com.android.mms.dom.DocumentImpl.setXmlVersion(Ljava/lang/String;)V
SMS_MMS com.android.mms.dom.ElementImpl.setAttribute(Ljava/lang/String;Ljava/lang/String;)V
SMS_MMS com.android.mms.dom.ElementImpl.setAttributeNS(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
SMS_MMS com.android.mms.dom.ElementImpl.setIdAttribute(Ljava/lang/String;Z)V
SMS_MMS com.android.mms.dom.ElementImpl.setIdAttributeNS(Ljava/lang/String;Ljava/lang/String;Z)V
SMS_MMS com.android.mms.dom.NodeImpl.setNodeValue(Ljava/lang/String;)V
SMS_MMS com.android.mms.dom.NodeImpl.setPrefix(Ljava/lang/String;)V
SMS_MMS com.android.mms.dom.NodeImpl.setTextContent(Ljava/lang/String;)V
SMS_MMS com.android.mms.dom.NodeImpl.setUserData(Ljava/lang/String;Ljava/lang/Object;Lorg/w3c/dom/UserDataHandler;)Ljava/lang/Object;
SMS_MMS com.android.mms.dom.smil.ElementParallelTimeContainerImpl.setEndSync(Ljava/lang/String;)V
SMS_MMS com.android.mms.dom.smil.ElementTimeImpl.setDur(F)V
SMS_MMS com.android.mms.dom.smil.SmilDocumentImpl.setDur(F)V
SMS_MMS com.android.mms.dom.smil.SmilElementImpl.setId(Ljava/lang/String;)V
SMS_MMS com.android.mms.dom.smil.SmilMediaElementImpl.setDur(F)V
SMS_MMS com.android.mms.dom.smil.SmilMediaElementImpl.setSrc(Ljava/lang/String;)V
SMS_MMS com.android.mms.dom.smil.SmilParElementImpl.setDur(F)V
SMS_MMS com.android.mms.dom.smil.SmilRegionElementImpl.setBackgroundColor(Ljava/lang/String;)V
SMS_MMS com.android.mms.dom.smil.SmilRegionElementImpl.setFit(Ljava/lang/String;)V
SMS_MMS com.android.mms.dom.smil.SmilRegionElementImpl.setHeight(I)V
SMS_MMS com.android.mms.dom.smil.SmilRegionElementImpl.setId(Ljava/lang/String;)V
SMS_MMS com.android.mms.dom.smil.SmilRegionElementImpl.setLeft(I)V
SMS_MMS com.android.mms.dom.smil.SmilRegionElementImpl.setTop(I)V
SMS_MMS com.android.mms.dom.smil.SmilRegionElementImpl.setWidth(I)V
SMS_MMS com.android.mms.dom.smil.SmilRootLayoutElementImpl.setBackgroundColor(Ljava/lang/String;)V
SMS_MMS com.android.mms.dom.smil.SmilRootLayoutElementImpl.setHeight(I)V
SMS_MMS com.android.mms.dom.smil.SmilRootLayoutElementImpl.setWidth(I)V
SMS_MMS com.android.mms.model.SlideModel.set(ILcom/android/mms/model/MediaModel;)Lcom/android/mms/model/MediaModel;
SMS_MMS com.android.mms.model.SlideModel.set(ILjava/lang/Object;)Ljava/lang/Object;
SMS_MMS com.android.mms.model.SlideshowModel.openPartFiles(Landroid/content/ContentResolver;)Ljava/util/HashMap;
SMS_MMS com.android.mms.model.SlideshowModel.set(ILcom/android/mms/model/SlideModel;)Lcom/android/mms/model/SlideModel;
SMS_MMS com.android.mms.model.SlideshowModel.set(ILjava/lang/Object;)Ljava/lang/Object;
SMS_MMS com.android.mms.transaction.MessageStatusReceiver.onReceive(Landroid/content/Context;Landroid/content/Intent;)V
SMS_MMS com.android.mms.transaction.MessagingNotification.blockingUpdateAllNotifications(Landroid/content/Context;J)V
SMS_MMS com.android.mms.transaction.MessagingNotification.notifyDownloadFailed(Landroid/content/Context;J)V
SMS_MMS com.android.mms.transaction.MessagingNotification.notifySendFailed(Landroid/content/Context;)V
SMS_MMS com.android.mms.transaction.MessagingNotification.notifySendFailed(Landroid/content/Context;Z)V
SMS_MMS com.android.mms.transaction.MmsMessageSender.sendMessage(J)Z
SMS_MMS com.android.mms.transaction.MmsMessageSender.sendReadRec(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;I)V
SMS_MMS com.android.mms.transaction.NotificationTransaction.sendPdu([BLjava/lang/String;)[B android.permission.READ_PHONE_STATE android.permission.CHANGE_NETWORK_STATE 
SMS_MMS com.android.mms.transaction.NotificationTransaction.sendPdu(J[BLjava/lang/String;)[B android.permission.READ_PHONE_STATE android.permission.CHANGE_NETWORK_STATE 
SMS_MMS com.android.mms.transaction.PushReceiver$ReceivePushTask.doInBackground([Landroid/content/Intent;)Ljava/lang/Void;
SMS_MMS com.android.mms.transaction.ReadRecTransaction.sendPdu([BLjava/lang/String;)[B android.permission.READ_PHONE_STATE android.permission.CHANGE_NETWORK_STATE 
SMS_MMS com.android.mms.transaction.ReadRecTransaction.sendPdu(J[BLjava/lang/String;)[B android.permission.READ_PHONE_STATE android.permission.CHANGE_NETWORK_STATE 
SMS_MMS com.android.mms.transaction.RetrieveTransaction.sendPdu([BLjava/lang/String;)[B android.permission.READ_PHONE_STATE android.permission.CHANGE_NETWORK_STATE 
SMS_MMS com.android.mms.transaction.RetrieveTransaction.sendPdu(J[BLjava/lang/String;)[B android.permission.READ_PHONE_STATE android.permission.CHANGE_NETWORK_STATE 
SMS_MMS com.android.mms.transaction.RetryScheduler.setRetryAlarm(Landroid/content/Context;)V
SMS_MMS com.android.mms.transaction.SendTransaction.sendPdu([BLjava/lang/String;)[B android.permission.READ_PHONE_STATE android.permission.CHANGE_NETWORK_STATE 
SMS_MMS com.android.mms.transaction.SendTransaction.sendPdu(J[BLjava/lang/String;)[B android.permission.READ_PHONE_STATE android.permission.CHANGE_NETWORK_STATE 
SMS_MMS com.android.mms.transaction.SmsMessageSender.sendMessage(J)Z
SMS_MMS com.android.mms.transaction.SmsSingleRecipientSender.sendMessage(J)Z
SMS_MMS com.android.mms.transaction.Transaction.sendPdu([B)[B
SMS_MMS com.android.mms.transaction.Transaction.sendPdu([BLjava/lang/String;)[B android.permission.READ_PHONE_STATE android.permission.CHANGE_NETWORK_STATE 
SMS_MMS com.android.mms.transaction.Transaction.sendPdu(J[B)[B
SMS_MMS com.android.mms.transaction.Transaction.sendPdu(J[BLjava/lang/String;)[B android.permission.READ_PHONE_STATE android.permission.CHANGE_NETWORK_STATE 
SMS_MMS com.android.mms.transaction.TransactionService.update(Lcom/android/mms/transaction/Observable;)V
SMS_MMS com.android.mms.ui.AudioAttachmentView.setImage(Ljava/lang/String;Landroid/graphics/Bitmap;)V
SMS_MMS com.android.mms.ui.AudioAttachmentView.setImageRegionFit(Ljava/lang/String;)V
SMS_MMS com.android.mms.ui.AudioAttachmentView.setImageVisibility(Z)V
SMS_MMS com.android.mms.ui.AudioAttachmentView.setText(Ljava/lang/String;Ljava/lang/String;)V
SMS_MMS com.android.mms.ui.AudioAttachmentView.setTextVisibility(Z)V
SMS_MMS com.android.mms.ui.AudioAttachmentView.setVideoThumbnail(Ljava/lang/String;Landroid/graphics/Bitmap;)V
SMS_MMS com.android.mms.ui.AudioAttachmentView.setVideoVisibility(Z)V
SMS_MMS com.android.mms.ui.BasicSlideEditorView.setAudio(Landroid/net/Uri;Ljava/lang/String;Ljava/util/Map;)V
SMS_MMS com.android.mms.ui.BasicSlideEditorView.setImage(Ljava/lang/String;Landroid/graphics/Bitmap;)V
SMS_MMS com.android.mms.ui.BasicSlideEditorView.setImageRegionFit(Ljava/lang/String;)V
SMS_MMS com.android.mms.ui.BasicSlideEditorView.setImageVisibility(Z)V
SMS_MMS com.android.mms.ui.BasicSlideEditorView.setText(Ljava/lang/String;Ljava/lang/String;)V
SMS_MMS com.android.mms.ui.BasicSlideEditorView.setTextVisibility(Z)V
SMS_MMS com.android.mms.ui.BasicSlideEditorView.setVideo(Ljava/lang/String;Landroid/net/Uri;)V
SMS_MMS com.android.mms.ui.BasicSlideEditorView.setVideoThumbnail(Ljava/lang/String;Landroid/graphics/Bitmap;)V
SMS_MMS com.android.mms.ui.BasicSlideEditorView.setVideoVisibility(Z)V
SMS_MMS com.android.mms.ui.ComposeMessageActivity$43.setViewValue(Landroid/view/View;Ljava/lang/Object;Ljava/lang/String;)Z
SMS_MMS com.android.mms.ui.ComposeMessageActivity.onSaveInstanceState(Landroid/os/Bundle;)V
SMS_MMS com.android.mms.ui.ComposeMessageActivity.startActivityForResult(Landroid/content/Intent;I)V
SMS_MMS com.android.mms.ui.ConversationList$4.onQueryTextSubmit(Ljava/lang/String;)Z
SMS_MMS com.android.mms.ui.ConversationListAdapter.bindView(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;)V
SMS_MMS com.android.mms.ui.ConversationList.createAddContactIntent(Ljava/lang/String;)Landroid/content/Intent;
SMS_MMS com.android.mms.ui.ConversationListItem.setChecked(Z)V
SMS_MMS com.android.mms.ui.MessageListAdapter.bindView(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;)V
SMS_MMS com.android.mms.ui.MessageListItem.setAudio(Landroid/net/Uri;Ljava/lang/String;Ljava/util/Map;)V
SMS_MMS com.android.mms.ui.MessageListItem.setImage(Ljava/lang/String;Landroid/graphics/Bitmap;)V
SMS_MMS com.android.mms.ui.MessageListItem.setImageRegionFit(Ljava/lang/String;)V
SMS_MMS com.android.mms.ui.MessageListItem.setImageVisibility(Z)V
SMS_MMS com.android.mms.ui.MessageListItem.setText(Ljava/lang/String;Ljava/lang/String;)V
SMS_MMS com.android.mms.ui.MessageListItem.setTextVisibility(Z)V
SMS_MMS com.android.mms.ui.MessageListItem.setVideo(Ljava/lang/String;Landroid/net/Uri;)V
SMS_MMS com.android.mms.ui.MessageListItem.setVideoThumbnail(Ljava/lang/String;Landroid/graphics/Bitmap;)V
SMS_MMS com.android.mms.ui.MessageListItem.setVideoVisibility(Z)V
SMS_MMS com.android.mms.ui.MessageUtils.recordSound(Landroid/app/Activity;IJ)V
SMS_MMS com.android.mms.ui.MessageUtils.selectAudio(Landroid/app/Activity;I)V
SMS_MMS com.android.mms.ui.MessagingPreferenceActivity.enableNotifications(ZLandroid/content/Context;)V
SMS_MMS com.android.mms.ui.NoConfirmationSendService.onHandleIntent(Landroid/content/Intent;)V
SMS_MMS com.android.mms.ui.SlideListItemView.setAudio(Landroid/net/Uri;Ljava/lang/String;Ljava/util/Map;)V
SMS_MMS com.android.mms.ui.SlideListItemView.setImage(Ljava/lang/String;Landroid/graphics/Bitmap;)V
SMS_MMS com.android.mms.ui.SlideListItemView.setImageRegionFit(Ljava/lang/String;)V
SMS_MMS com.android.mms.ui.SlideListItemView.setImageVisibility(Z)V
SMS_MMS com.android.mms.ui.SlideListItemView.setText(Ljava/lang/String;Ljava/lang/String;)V
SMS_MMS com.android.mms.ui.SlideListItemView.setTextVisibility(Z)V
SMS_MMS com.android.mms.ui.SlideListItemView.setVideo(Ljava/lang/String;Landroid/net/Uri;)V
SMS_MMS com.android.mms.ui.SlideListItemView.setVideoThumbnail(Ljava/lang/String;Landroid/graphics/Bitmap;)V
SMS_MMS com.android.mms.ui.SlideListItemView.setVideoVisibility(Z)V
SMS_MMS com.android.mms.ui.SlideshowAttachmentView.setImage(Ljava/lang/String;Landroid/graphics/Bitmap;)V
SMS_MMS com.android.mms.ui.SlideshowAttachmentView.setImageRegionFit(Ljava/lang/String;)V
SMS_MMS com.android.mms.ui.SlideshowAttachmentView.setImageVisibility(Z)V
SMS_MMS com.android.mms.ui.SlideshowAttachmentView.setText(Ljava/lang/String;Ljava/lang/String;)V
SMS_MMS com.android.mms.ui.SlideshowAttachmentView.setTextVisibility(Z)V
SMS_MMS com.android.mms.ui.SlideshowAttachmentView.setVideo(Ljava/lang/String;Landroid/net/Uri;)V
SMS_MMS com.android.mms.ui.SlideshowAttachmentView.setVideoThumbnail(Ljava/lang/String;Landroid/graphics/Bitmap;)V
SMS_MMS com.android.mms.ui.SlideshowAttachmentView.setVideoVisibility(Z)V
SMS_MMS com.android.mms.ui.SlideView.enableMMSConformanceMode(IIII)V
SMS_MMS com.android.mms.ui.SlideView.setAudio(Landroid/net/Uri;Ljava/lang/String;Ljava/util/Map;)V
SMS_MMS com.android.mms.ui.SlideView.setImage(Ljava/lang/String;Landroid/graphics/Bitmap;)V
SMS_MMS com.android.mms.ui.SlideView.setImageRegionFit(Ljava/lang/String;)V
SMS_MMS com.android.mms.ui.SlideView.setImageRegion(IIII)V
SMS_MMS com.android.mms.ui.SlideView.setImageVisibility(Z)V
SMS_MMS com.android.mms.ui.SlideView.setText(Ljava/lang/String;Ljava/lang/String;)V
SMS_MMS com.android.mms.ui.SlideView.setTextRegion(IIII)V
SMS_MMS com.android.mms.ui.SlideView.setTextVisibility(Z)V
SMS_MMS com.android.mms.ui.SlideView.setVideo(Ljava/lang/String;Landroid/net/Uri;)V
SMS_MMS com.android.mms.ui.SlideView.setVideoRegion(IIII)V
SMS_MMS com.android.mms.ui.SlideView.setVideoThumbnail(Ljava/lang/String;Landroid/graphics/Bitmap;)V
SMS_MMS com.android.mms.ui.SlideView.setVideoVisibility(Z)V
SMS_MMS com.android.mms.ui.VideoAttachmentView.setImage(Ljava/lang/String;Landroid/graphics/Bitmap;)V
SMS_MMS com.android.mms.ui.VideoAttachmentView.setImageRegionFit(Ljava/lang/String;)V
SMS_MMS com.android.mms.ui.VideoAttachmentView.setImageVisibility(Z)V
SMS_MMS com.android.mms.ui.VideoAttachmentView.setText(Ljava/lang/String;Ljava/lang/String;)V
SMS_MMS com.android.mms.ui.VideoAttachmentView.setTextVisibility(Z)V
SMS_MMS com.android.mms.ui.VideoAttachmentView.setVideo(Ljava/lang/String;Landroid/net/Uri;)V
SMS_MMS com.android.mms.ui.VideoAttachmentView.setVideoThumbnail(Ljava/lang/String;Landroid/graphics/Bitmap;)V
SMS_MMS com.android.mms.ui.VideoAttachmentView.setVideoVisibility(Z)V
SMS_MMS com.android.mms.util.BackgroundLoaderManager.addCallback(Landroid/net/Uri;Lcom/android/mms/util/ItemLoadedCallback;)Z
SMS_MMS com.android.mms.util.DownloadManager.markState(Landroid/net/Uri;I)V
SMS_MMS com.android.mms.util.ImageCacheService.putImageData(Ljava/lang/String;I[B)V
SMS_MMS com.android.mms.util.NullItemLoadedFuture.setIsDone(Z)V
SMS_MMS com.android.mms.util.Recycler$MmsRecycler.setMessageLimit(Landroid/content/Context;I)V
SMS_MMS com.android.mms.util.Recycler$SmsRecycler.setMessageLimit(Landroid/content/Context;I)V
SMS_MMS com.android.mms.util.SendingProgressTokenManager.put(Ljava/lang/Object;J)V
SMS_MMS com.android.mms.util.SimpleCache.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
SMS_MMS com.android.providers.telephony.MmsProvider.insert(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;
SMS_MMS com.android.providers.telephony.MmsProvider.update(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
SMS_MMS com.android.providers.telephony.MmsSmsProvider.update(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
SMS_MMS com.android.providers.telephony.SmsProvider.insert(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri; android.permission.READ_SMS android.permission.READ_SYNC_SETTINGS android.permission.READ_SOCIAL_STREAM android.permission.WRITE_SOCIAL_STREAM android.permission.READ_CONTACTS android.permission.WRITE_CONTACTS 
SMS_MMS com.android.providers.telephony.SmsProvider.update(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
SMS_MMS com.google.android.mms.pdu.AcknowledgeInd.setReportAllowed(I)V
SMS_MMS com.google.android.mms.pdu.AcknowledgeInd.setTransactionId([B)V
SMS_MMS com.google.android.mms.pdu.DeliveryInd.setDate(J)V
SMS_MMS com.google.android.mms.pdu.DeliveryInd.setMessageId([B)V
SMS_MMS com.google.android.mms.pdu.DeliveryInd.setStatus(I)V
SMS_MMS com.google.android.mms.pdu.DeliveryInd.setTo([Lcom/google/android/mms/pdu/EncodedStringValue;)V
SMS_MMS com.google.android.mms.pdu.EncodedStringValue.appendTextString([B)V
SMS_MMS com.google.android.mms.pdu.EncodedStringValue.setTextString([B)V
SMS_MMS com.google.android.mms.pdu.GenericPdu.setFrom(Lcom/google/android/mms/pdu/EncodedStringValue;)V
SMS_MMS com.google.android.mms.pdu.GenericPdu.setMessageType(I)V
SMS_MMS com.google.android.mms.pdu.GenericPdu.setMmsVersion(I)V
SMS_MMS com.google.android.mms.pdu.MultimediaMessagePdu.setDate(J)V
SMS_MMS com.google.android.mms.pdu.MultimediaMessagePdu.setPriority(I)V
SMS_MMS com.google.android.mms.pdu.MultimediaMessagePdu.setSubject(Lcom/google/android/mms/pdu/EncodedStringValue;)V
SMS_MMS com.google.android.mms.pdu.NotificationInd.setContentClass(I)V
SMS_MMS com.google.android.mms.pdu.NotificationInd.setContentLocation([B)V
SMS_MMS com.google.android.mms.pdu.NotificationInd.setDeliveryReport(I)V
SMS_MMS com.google.android.mms.pdu.NotificationInd.setExpiry(J)V
SMS_MMS com.google.android.mms.pdu.NotificationInd.setFrom(Lcom/google/android/mms/pdu/EncodedStringValue;)V
SMS_MMS com.google.android.mms.pdu.NotificationInd.setMessageClass([B)V
SMS_MMS com.google.android.mms.pdu.NotificationInd.setMessageSize(J)V
SMS_MMS com.google.android.mms.pdu.NotificationInd.setSubject(Lcom/google/android/mms/pdu/EncodedStringValue;)V
SMS_MMS com.google.android.mms.pdu.NotificationInd.setTransactionId([B)V
SMS_MMS com.google.android.mms.pdu.NotifyRespInd.setReportAllowed(I)V
SMS_MMS com.google.android.mms.pdu.NotifyRespInd.setStatus(I)V
SMS_MMS com.google.android.mms.pdu.NotifyRespInd.setTransactionId([B)V
SMS_MMS com.google.android.mms.pdu.PduBody.addPart(ILcom/google/android/mms/pdu/PduPart;)V
SMS_MMS com.google.android.mms.pdu.PduBody.addPart(Lcom/google/android/mms/pdu/PduPart;)Z
SMS_MMS com.google.android.mms.pdu.PduComposer.append(I)V
SMS_MMS com.google.android.mms.pdu.PduComposer.arraycopy([BII)V
SMS_MMS com.google.android.mms.pdu.PduHeaders.appendEncodedStringValue(Lcom/google/android/mms/pdu/EncodedStringValue;I)V
SMS_MMS com.google.android.mms.pdu.PduHeaders.setEncodedStringValue(Lcom/google/android/mms/pdu/EncodedStringValue;I)V
SMS_MMS com.google.android.mms.pdu.PduHeaders.setEncodedStringValues([Lcom/google/android/mms/pdu/EncodedStringValue;I)V
SMS_MMS com.google.android.mms.pdu.PduHeaders.setLongInteger(JI)V
SMS_MMS com.google.android.mms.pdu.PduHeaders.setOctet(II)V
SMS_MMS com.google.android.mms.pdu.PduHeaders.setTextString([BI)V
SMS_MMS com.google.android.mms.pdu.PduParser.parseContentTypeParams(Ljava/io/ByteArrayInputStream;Ljava/util/HashMap;Ljava/lang/Integer;)V
SMS_MMS com.google.android.mms.pdu.PduPart.setCharset(I)V
SMS_MMS com.google.android.mms.pdu.PduPart.setContentDisposition([B)V
SMS_MMS com.google.android.mms.pdu.PduPart.setContentId([B)V
SMS_MMS com.google.android.mms.pdu.PduPart.setContentLocation([B)V
SMS_MMS com.google.android.mms.pdu.PduPart.setContentTransferEncoding([B)V
SMS_MMS com.google.android.mms.pdu.PduPart.setContentType([B)V
SMS_MMS com.google.android.mms.pdu.PduPart.setData([B)V
SMS_MMS com.google.android.mms.pdu.PduPart.setFilename([B)V
SMS_MMS com.google.android.mms.pdu.PduPart.setName([B)V
SMS_MMS com.google.android.mms.pdu.PduPersister.load(Landroid/net/Uri;)Lcom/google/android/mms/pdu/GenericPdu;
SMS_MMS com.google.android.mms.pdu.PduPersister.move(Landroid/net/Uri;Landroid/net/Uri;)Landroid/net/Uri;
SMS_MMS com.google.android.mms.pdu.PduPersister.persist(Lcom/google/android/mms/pdu/GenericPdu;Landroid/net/Uri;ZZLjava/util/HashMap;)Landroid/net/Uri;
SMS_MMS com.google.android.mms.pdu.PduPersister.persistPart(Lcom/google/android/mms/pdu/PduPart;JLjava/util/HashMap;)Landroid/net/Uri;
SMS_MMS com.google.android.mms.pdu.PduPersister.updateHeaders(Landroid/net/Uri;Lcom/google/android/mms/pdu/SendReq;)V android.permission.READ_SMS 
SMS_MMS com.google.android.mms.pdu.PduPersister.updateParts(Landroid/net/Uri;Lcom/google/android/mms/pdu/PduBody;Ljava/util/HashMap;)V
SMS_MMS com.google.android.mms.pdu.QuotedPrintable.decodeQuotedPrintable([B)[B
SMS_MMS com.google.android.mms.pdu.ReadOrigInd.setDate(J)V
SMS_MMS com.google.android.mms.pdu.ReadOrigInd.setFrom(Lcom/google/android/mms/pdu/EncodedStringValue;)V
SMS_MMS com.google.android.mms.pdu.ReadOrigInd.setMessageId([B)V
SMS_MMS com.google.android.mms.pdu.ReadOrigInd.setReadStatus(I)V
SMS_MMS com.google.android.mms.pdu.ReadOrigInd.setTo([Lcom/google/android/mms/pdu/EncodedStringValue;)V
SMS_MMS com.google.android.mms.pdu.ReadRecInd.setDate(J)V
SMS_MMS com.google.android.mms.pdu.ReadRecInd.setMessageId([B)V
SMS_MMS com.google.android.mms.pdu.ReadRecInd.setReadStatus(I)V
SMS_MMS com.google.android.mms.pdu.ReadRecInd.setTo([Lcom/google/android/mms/pdu/EncodedStringValue;)V
SMS_MMS com.google.android.mms.pdu.RetrieveConf.setContentType([B)V
SMS_MMS com.google.android.mms.pdu.RetrieveConf.setDeliveryReport(I)V
SMS_MMS com.google.android.mms.pdu.RetrieveConf.setFrom(Lcom/google/android/mms/pdu/EncodedStringValue;)V
SMS_MMS com.google.android.mms.pdu.RetrieveConf.setMessageClass([B)V
SMS_MMS com.google.android.mms.pdu.RetrieveConf.setMessageId([B)V
SMS_MMS com.google.android.mms.pdu.RetrieveConf.setReadReport(I)V
SMS_MMS com.google.android.mms.pdu.RetrieveConf.setRetrieveStatus(I)V
SMS_MMS com.google.android.mms.pdu.RetrieveConf.setRetrieveText(Lcom/google/android/mms/pdu/EncodedStringValue;)V
SMS_MMS com.google.android.mms.pdu.RetrieveConf.setTransactionId([B)V
SMS_MMS com.google.android.mms.pdu.SendConf.setMessageId([B)V
SMS_MMS com.google.android.mms.pdu.SendConf.setResponseStatus(I)V
SMS_MMS com.google.android.mms.pdu.SendConf.setTransactionId([B)V
SMS_MMS com.google.android.mms.pdu.SendReq.setBcc([Lcom/google/android/mms/pdu/EncodedStringValue;)V
SMS_MMS com.google.android.mms.pdu.SendReq.setCc([Lcom/google/android/mms/pdu/EncodedStringValue;)V
SMS_MMS com.google.android.mms.pdu.SendReq.setContentType([B)V
SMS_MMS com.google.android.mms.pdu.SendReq.setDeliveryReport(I)V
SMS_MMS com.google.android.mms.pdu.SendReq.setExpiry(J)V
SMS_MMS com.google.android.mms.pdu.SendReq.setMessageClass([B)V
SMS_MMS com.google.android.mms.pdu.SendReq.setMessageSize(J)V
SMS_MMS com.google.android.mms.pdu.SendReq.setReadReport(I)V
SMS_MMS com.google.android.mms.pdu.SendReq.setTo([Lcom/google/android/mms/pdu/EncodedStringValue;)V
SMS_MMS com.google.android.mms.pdu.SendReq.setTransactionId([B)V
SMS_MMS com.google.android.mms.util.AbstractCache.put(Ljava/lang/Object;Ljava/lang/Object;)Z
SMS_MMS com.google.android.mms.util.PduCache.put(Landroid/net/Uri;Lcom/google/android/mms/util/PduCacheEntry;)Z
SMS_MMS com.google.android.mms.util.PduCache.put(Ljava/lang/Object;Ljava/lang/Object;)Z
SYNCHRONIZATION_DATA android.app.ApplicationPackageManager.addPermissionAsync(Landroid/content/pm/PermissionInfo;)Z
SYNCHRONIZATION_DATA android.app.ContextImpl$ApplicationContentResolver.setMasterSyncAutomatically(Z)V android.permission.WRITE_SYNC_SETTINGS 
SYNCHRONIZATION_DATA android.app.Instrumentation.sendCharacterSync(I)V
SYNCHRONIZATION_DATA android.app.Instrumentation.sendKeyDownUpSync(I)V
SYNCHRONIZATION_DATA android.app.Instrumentation.sendStringSync(Ljava/lang/String;)V
SYNCHRONIZATION_DATA android.app.Instrumentation.startActivitySync(Landroid/content/Intent;)Landroid/app/Activity;
SYNCHRONIZATION_DATA android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl.startSync(Landroid/content/ISyncContext;Ljava/lang/String;Landroid/accounts/Account;Landroid/os/Bundle;)V
SYNCHRONIZATION_DATA android.content.ContentResolver.setIsSyncable(Landroid/accounts/Account;Ljava/lang/String;I)V
SYNCHRONIZATION_DATA android.content.ContentResolver.setSyncAutomatically(Landroid/accounts/Account;Ljava/lang/String;Z)V
SYNCHRONIZATION_DATA android.content.ContentService.setIsSyncable(Landroid/accounts/Account;Ljava/lang/String;I)V
SYNCHRONIZATION_DATA android.content.ContentService.setMasterSyncAutomatically(Z)V
SYNCHRONIZATION_DATA android.content.ContentService.setSyncAutomatically(Landroid/accounts/Account;Ljava/lang/String;Z)V android.permission.WRITE_SYNC_SETTINGS 
SYNCHRONIZATION_DATA android.content.IContentService$Stub$Proxy.addPeriodicSync(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;J)V
SYNCHRONIZATION_DATA android.content.IContentService$Stub$Proxy.cancelSync(Landroid/accounts/Account;Ljava/lang/String;)V
SYNCHRONIZATION_DATA android.content.IContentService$Stub$Proxy.isSyncActive(Landroid/accounts/Account;Ljava/lang/String;)Z
SYNCHRONIZATION_DATA android.content.IContentService$Stub$Proxy.isSyncPending(Landroid/accounts/Account;Ljava/lang/String;)Z
SYNCHRONIZATION_DATA android.content.IContentService$Stub$Proxy.removePeriodicSync(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)V
SYNCHRONIZATION_DATA android.content.IContentService$Stub$Proxy.requestSync(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)V
SYNCHRONIZATION_DATA android.content.IContentService$Stub$Proxy.setIsSyncable(Landroid/accounts/Account;Ljava/lang/String;I)V android.permission.WRITE_SYNC_SETTINGS 
SYNCHRONIZATION_DATA android.content.IContentService$Stub$Proxy.setMasterSyncAutomatically(Z)V
SYNCHRONIZATION_DATA android.content.IContentService$Stub$Proxy.setSyncAutomatically(Landroid/accounts/Account;Ljava/lang/String;Z)V
SYNCHRONIZATION_DATA android.content.ISyncAdapter$Stub$Proxy.cancelSync(Landroid/content/ISyncContext;)V
SYNCHRONIZATION_DATA android.content.ISyncAdapter$Stub$Proxy.startSync(Landroid/content/ISyncContext;Ljava/lang/String;Landroid/accounts/Account;Landroid/os/Bundle;)V
SYNCHRONIZATION_DATA android.content.SyncManager$ActiveSyncContext.bindToSyncAdapter(Landroid/content/pm/RegisteredServicesCache$ServiceInfo;I)Z
SYNCHRONIZATION_DATA android.content.SyncManager$ActiveSyncContext.onServiceConnected(Landroid/content/ComponentName;Landroid/os/IBinder;)V android.permission.WRITE_SYNC_SETTINGS android.permission.READ_SYNC_SETTINGS android.permission.VIBRATE android.permission.WAKE_LOCK android.permission.ACCESS_NETWORK_STATE 
SYNCHRONIZATION_DATA android.content.SyncManager.cancelActiveSync(Landroid/accounts/Account;ILjava/lang/String;)V
SYNCHRONIZATION_DATA android.content.SyncManager.dumpSyncHistory(Ljava/io/PrintWriter;)V
SYNCHRONIZATION_DATA android.content.SyncManager.dumpSyncState(Ljava/io/PrintWriter;)V
SYNCHRONIZATION_DATA android.content.SyncStatusInfo.setPeriodicSyncTime(IJ)V
SYNCHRONIZATION_DATA android.content.SyncStorageEngine.addPeriodicSync(Landroid/accounts/Account;ILjava/lang/String;Landroid/os/Bundle;J)V
SYNCHRONIZATION_DATA android.content.SyncStorageEngine.removePeriodicSync(Landroid/accounts/Account;ILjava/lang/String;Landroid/os/Bundle;)V
SYNCHRONIZATION_DATA android.content.SyncStorageEngine.setIsSyncable(Landroid/accounts/Account;ILjava/lang/String;I)V
SYNCHRONIZATION_DATA android.content.SyncStorageEngine.setMasterSyncAutomatically(ZI)V
SYNCHRONIZATION_DATA android.content.SyncStorageEngine.setSyncAutomatically(Landroid/accounts/Account;ILjava/lang/String;Z)V
SYNCHRONIZATION_DATA android.media.IRingtonePlayer$Stub$Proxy.playAsync(Landroid/net/Uri;Landroid/os/UserHandle;ZI)V
SYNCHRONIZATION_DATA android.os.CommonTimeConfig.setClientSyncInterval(I)I
SYNCHRONIZATION_DATA android.os.Message.setAsynchronous(Z)V
SYNCHRONIZATION_DATA android.test.mock.MockContentResolver.setMasterSyncAutomatically(Z)V android.permission.WRITE_SYNC_SETTINGS 
SYNCHRONIZATION_DATA com.android.camera.CameraManager$CameraProxy.setParametersAsync(Landroid/hardware/Camera$Parameters;)V
SYNCHRONIZATION_DATA com.android.camera.CameraManager$CameraProxy.setPreviewTextureAsync(Landroid/graphics/SurfaceTexture;)V
SYNCHRONIZATION_DATA com.android.camera.MosaicPreviewRenderer$EGLHandler.sendMessageSync(I)V
SYNCHRONIZATION_DATA com.android.exchange.adapter.AbstractSyncAdapter.setPimSyncOptions(Ljava/lang/Double;Ljava/lang/String;Lcom/android/exchange/adapter/Serializer;)V
SYNCHRONIZATION_DATA com.android.exchange.adapter.AccountSyncAdapter.sendSyncOptions(Ljava/lang/Double;Lcom/android/exchange/adapter/Serializer;Z)V
SYNCHRONIZATION_DATA com.android.exchange.adapter.CalendarSyncAdapter.sendSyncOptions(Ljava/lang/Double;Lcom/android/exchange/adapter/Serializer;Z)V
SYNCHRONIZATION_DATA com.android.exchange.adapter.ContactsSyncAdapter.sendSyncOptions(Ljava/lang/Double;Lcom/android/exchange/adapter/Serializer;Z)V
SYNCHRONIZATION_DATA com.android.exchange.adapter.EmailSyncAdapter.sendSyncOptions(Ljava/lang/Double;Lcom/android/exchange/adapter/Serializer;Z)V
SYNCHRONIZATION_DATA com.android.exchange.EasSyncService.sync(Lcom/android/exchange/adapter/AbstractSyncAdapter;)V
SYNCHRONIZATION_DATA com.android.exchange.ExchangeService.startManualSync(JILcom/android/exchange/Request;)V android.permission.READ_SYNC_SETTINGS android.permission.VIBRATE android.permission.WAKE_LOCK 
SYNCHRONIZATION_DATA com.android.internal.util.AsyncChannel.sendMessageSynchronously(III)Landroid/os/Message;
SYNCHRONIZATION_DATA com.android.internal.util.AsyncChannel.sendMessageSynchronously(IIILjava/lang/Object;)Landroid/os/Message;
SYNCHRONIZATION_DATA com.android.internal.util.AsyncChannel.sendMessageSynchronously(II)Landroid/os/Message;
SYNCHRONIZATION_DATA com.android.internal.util.AsyncChannel.sendMessageSynchronously(I)Landroid/os/Message;
SYNCHRONIZATION_DATA com.android.internal.util.AsyncChannel.sendMessageSynchronously(ILjava/lang/Object;)Landroid/os/Message;
SYNCHRONIZATION_DATA com.android.internal.util.AsyncChannel.sendMessageSynchronously(Landroid/os/Message;)Landroid/os/Message;
SYNCHRONIZATION_DATA com.android.providers.calendar.CalendarDatabaseHelper.scheduleSync(Landroid/accounts/Account;ZLjava/lang/String;)V
SYNCHRONIZATION_DATA com.android.providers.contacts.TransactionContext.syncStateUpdated(JLjava/lang/Object;)V
SYNCHRONIZATION_DATA com.android.server.display.DisplayManagerService$CallbackRecord.notifyDisplayEventAsync(II)V
SYNCHRONIZATION_DATA com.google.android.picasasync.MetadataSync$MetadataSyncTask.performSync(Landroid/content/SyncResult;)V
SYNCHRONIZATION_DATA com.google.android.picasasync.PhotoPrefetch$PrefetchAlbumCover.performSync(Landroid/content/SyncResult;)V
SYNCHRONIZATION_DATA com.google.android.picasasync.PhotoPrefetch$PrefetchFullImage.performSync(Landroid/content/SyncResult;)V
SYNCHRONIZATION_DATA com.google.android.picasasync.PhotoPrefetch$PrefetchScreenNail.performSync(Landroid/content/SyncResult;)V
SYNCHRONIZATION_DATA com.google.android.picasasync.PicasaFacade.requestImmediateSyncOnAlbum(J)Landroid/net/Uri;
SYNCHRONIZATION_DATA com.google.android.picasasync.PicasaFacade.requestImmediateSyncOnAlbumList(Ljava/lang/String;)Landroid/net/Uri;
SYNCHRONIZATION_DATA com.google.android.picasasync.PicasaSyncManager.performSync(Lcom/google/android/picasasync/PicasaSyncManager$SyncSession;)V
SYNCHRONIZATION_DATA com.google.android.picasasync.SyncState.onSyncRequested(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)Z
SYNCHRONIZATION_DATA com.google.android.picasasync.UploadsManager$UploadTask.performSync(Landroid/content/SyncResult;)V
SYSTEM_SETTINGS android.app.ActivityThread$ApplicationThread.scheduleConfigurationChanged(Landroid/content/res/Configuration;)V
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.hasGrantedPolicy(Landroid/content/ComponentName;II)Z
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.packageHasActiveAdmins(Ljava/lang/String;I)Z
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.removeActiveAdmin(Landroid/content/ComponentName;I)V
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.reportFailedPasswordAttempt(I)V
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.reportSuccessfulPasswordAttempt(I)V
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.resetPassword(Ljava/lang/String;II)Z
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.setActiveAdmin(Landroid/content/ComponentName;ZI)V
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.setActivePasswordState(IIIIIIIII)V
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.setCameraDisabled(Landroid/content/ComponentName;ZI)V
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.setGlobalProxy(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;I)Landroid/content/ComponentName;
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.setKeyguardDisabledFeatures(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.setMaximumFailedPasswordsForWipe(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.setMaximumTimeToLock(Landroid/content/ComponentName;JI)V
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.setPasswordExpirationTimeout(Landroid/content/ComponentName;JI)V
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.setPasswordHistoryLength(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.setPasswordMinimumLength(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.setPasswordMinimumLetters(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.setPasswordMinimumLowerCase(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.setPasswordMinimumNonLetter(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.setPasswordMinimumNumeric(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.setPasswordMinimumSymbols(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.setPasswordMinimumUpperCase(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.setPasswordQuality(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.setStorageEncryption(Landroid/content/ComponentName;ZI)I
SYSTEM_SETTINGS android.app.admin.IDevicePolicyManager$Stub$Proxy.wipeData(II)V
SYSTEM_SETTINGS android.app.FragmentManagerImpl.dispatchConfigurationChanged(Landroid/content/res/Configuration;)V
SYSTEM_SETTINGS android.content.res.Resources.updateConfiguration(Landroid/content/res/Configuration;Landroid/util/DisplayMetrics;)V
SYSTEM_SETTINGS android.telephony.CellSignalStrengthCdma.setDefaultValues()V
SYSTEM_SETTINGS android.telephony.ServiceState.setCssIndicator(I)V
SYSTEM_SETTINGS android.telephony.ServiceState.setStateOff()V
SYSTEM_SETTINGS android.telephony.ServiceState.setStateOutOfService()V
SYSTEM_SETTINGS android.view.IWindowManager$Stub$Proxy.setNewConfiguration(Landroid/content/res/Configuration;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS android.webkit.DeviceMotionAndOrientationManager.setMockOrientation(ZDZDZD)V
SYSTEM_SETTINGS android.webkit.DeviceMotionAndOrientationManager.setUseMock()V
SYSTEM_SETTINGS com.android.deskclock.HandleSetAlarm.onCreate(Landroid/os/Bundle;)V android.permission.WRITE_SETTINGS 
SYSTEM_SETTINGS com.android.internal.telephony.AdnRecordCache.handleMessage(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.AdnRecordCache.requestLoadAllAdnLike(IILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.AdnRecordCache.updateAdnByIndex(ILcom/android/internal/telephony/AdnRecord;ILjava/lang/String;Landroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.AdnRecordCache.updateAdnBySearch(ILcom/android/internal/telephony/AdnRecord;Lcom/android/internal/telephony/AdnRecord;Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.AdnRecordLoader.handleMessage(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.ApnContext.setApnSetting(Lcom/android/internal/telephony/ApnSetting;)V
SYSTEM_SETTINGS com.android.internal.telephony.ApnContext.setDependencyMet(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.ApnContext.setEnabled(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.ApnContext.setReason(Ljava/lang/String;)V
SYSTEM_SETTINGS com.android.internal.telephony.ApnContext.setRetryCount(I)V
SYSTEM_SETTINGS com.android.internal.telephony.ApnContext.setState(Lcom/android/internal/telephony/DctConstants$State;)V
SYSTEM_SETTINGS com.android.internal.telephony.ApnContext.setWaitingApns(Ljava/util/ArrayList;)V
SYSTEM_SETTINGS com.android.internal.telephony.BaseCommands.setEmergencyCallbackMode(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.BaseCommands.setOnCallRing(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.BaseCommands.setOnCatCallSetUp(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.BaseCommands.setOnCatEvent(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.BaseCommands.setOnCatProactiveCmd(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.BaseCommands.setOnCatSessionEnd(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.BaseCommands.setOnNewCdmaSms(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.BaseCommands.setOnNewGsmBroadcastSms(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.BaseCommands.setOnNewGsmSms(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.BaseCommands.setOnNITZTime(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.BaseCommands.setOnRestrictedStateChanged(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.BaseCommands.setOnSignalStrengthUpdate(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.BaseCommands.setOnSmsOnSim(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.BaseCommands.setOnSmsStatus(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.BaseCommands.setOnSuppServiceNotification(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.BaseCommands.setOnUnsolOemHookRaw(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.BaseCommands.setOnUSSD(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.CallerInfoAsyncQuery.addQueryListener(ILcom/android/internal/telephony/CallerInfoAsyncQuery$OnQueryCompleteListener;Ljava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.CallerInfoAsyncQuery$CallerInfoAsyncQueryHandler.onQueryComplete(ILjava/lang/Object;Landroid/database/Cursor;)V
SYSTEM_SETTINGS com.android.internal.telephony.CallerInfoAsyncQuery.startQuery(ILandroid/content/Context;Ljava/lang/String;Lcom/android/internal/telephony/CallerInfoAsyncQuery$OnQueryCompleteListener;Ljava/lang/Object;)Lcom/android/internal/telephony/CallerInfoAsyncQuery;
SYSTEM_SETTINGS com.android.internal.telephony.CallManager$1.handleMessage(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.CallManager.canConference(Lcom/android/internal/telephony/Call;)Z
SYSTEM_SETTINGS com.android.internal.telephony.CallManager.dial(Lcom/android/internal/telephony/Phone;Ljava/lang/String;)Lcom/android/internal/telephony/Connection;
SYSTEM_SETTINGS com.android.internal.telephony.CallManager.dial(Lcom/android/internal/telephony/Phone;Ljava/lang/String;Lcom/android/internal/telephony/UUSInfo;)Lcom/android/internal/telephony/Connection;
SYSTEM_SETTINGS com.android.internal.telephony.CallManager.sendUssdResponse(Lcom/android/internal/telephony/Phone;Ljava/lang/String;)Z
SYSTEM_SETTINGS com.android.internal.telephony.CallManager.setAudioMode()V
SYSTEM_SETTINGS com.android.internal.telephony.CallManager.setEchoSuppressionEnabled(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.CallManager.setMute(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.CallManager.startDtmf(C)Z
SYSTEM_SETTINGS com.android.internal.telephony.cat.CatService.handleMessage(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.cat.CommandParams.setIcon(Landroid/graphics/Bitmap;)Z
SYSTEM_SETTINGS com.android.internal.telephony.cat.GetInkeyInputResponseData.format(Ljava/io/ByteArrayOutputStream;)V
SYSTEM_SETTINGS com.android.internal.telephony.cat.Input.setIcon(Landroid/graphics/Bitmap;)Z
SYSTEM_SETTINGS com.android.internal.telephony.cat.Item.writeToParcel(Landroid/os/Parcel;I)V
SYSTEM_SETTINGS com.android.internal.telephony.cat.Menu.writeToParcel(Landroid/os/Parcel;I)V
SYSTEM_SETTINGS com.android.internal.telephony.cat.ResponseData.writeLength(Ljava/io/ByteArrayOutputStream;I)V
SYSTEM_SETTINGS com.android.internal.telephony.cat.RilMessageDecoder.sendMsgParamsDecoded(Lcom/android/internal/telephony/cat/ResultCode;Lcom/android/internal/telephony/cat/CommandParams;)V
SYSTEM_SETTINGS com.android.internal.telephony.cat.RilMessageDecoder.sendStartDecodingMessageParams(Lcom/android/internal/telephony/cat/RilMessage;)V
SYSTEM_SETTINGS com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady.processMessage(Landroid/os/Message;)Z
SYSTEM_SETTINGS com.android.internal.telephony.cat.RilMessageDecoder$StateStart.processMessage(Landroid/os/Message;)Z
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CdmaDataConnectionTracker.onDataSetupComplete(Landroid/os/AsyncResult;)V
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CdmaDataConnectionTracker.setDataOnRoamingEnabled(Z)V android.permission.WRITE_SETTINGS 
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMALTEPhone.enableEnhancedVoicePrivacy(ZLandroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMALTEPhone.setBandMode(ILandroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMALTEPhone.setCdmaSubscription(ILandroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMALTEPhone.setSmscAddress(Ljava/lang/String;Landroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CdmaLteServiceStateTracker.fixTimeZone(Ljava/lang/String;)V android.permission.BROADCAST_STICKY android.permission.SET_TIME_ZONE 
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CdmaLteServiceStateTracker.setCdmaTechnology(I)V
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMAPhone.dial(Ljava/lang/String;Lcom/android/internal/telephony/UUSInfo;)Lcom/android/internal/telephony/Connection;
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMAPhone.enableEnhancedVoicePrivacy(ZLandroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMAPhone.handlePinMmi(Ljava/lang/String;)Z
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMAPhone.notifyServiceStateChanged(Landroid/telephony/ServiceState;)V
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMAPhone.restoreSavedNetworkSelection(Landroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMAPhone.setCallForwardingOption(IILjava/lang/String;ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMAPhone.setCallWaiting(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMAPhone.setCdmaSubscription(ILandroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMAPhone.setCellBroadcastSmsConfig([ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMAPhone.setDataRoamingEnabled(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMAPhone.setLine1Number(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMAPhone.setMute(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMAPhone.setNetworkSelectionModeAutomatic(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMAPhone.setOnEcbModeExitResponse(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMAPhone.setOnPostDialCharacter(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMAPhone.setOutgoingCallerIdDisplay(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMAPhone.setRadioPower(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMAPhone.setSmscAddress(Ljava/lang/String;Landroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMAPhone.setSystemProperty(Ljava/lang/String;Ljava/lang/String;)V
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CDMAPhone.updateCurrentCarrierInProvider(Ljava/lang/String;)Z
SYSTEM_SETTINGS com.android.internal.telephony.cdma.CdmaServiceStateTracker.fixTimeZone(Ljava/lang/String;)V android.permission.BROADCAST_STICKY android.permission.SET_TIME_ZONE 
SYSTEM_SETTINGS com.android.internal.telephony.cdma.RuimRecords.setMsisdnNumber(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.cdma.RuimRecords.setVoiceMailNumber(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.DataCallState.setLinkProperties(Landroid/net/LinkProperties;Z)Lcom/android/internal/telephony/DataCallState$SetupResult;
SYSTEM_SETTINGS com.android.internal.telephony.DataConnectionAc.reqAddApnContext(Lcom/android/internal/telephony/ApnContext;)V
SYSTEM_SETTINGS com.android.internal.telephony.DataConnectionAc.reqRemomveApnContext(Lcom/android/internal/telephony/ApnContext;)V
SYSTEM_SETTINGS com.android.internal.telephony.DataConnectionAc.reqSetLinkPropertiesHttpProxy(Landroid/net/ProxyProperties;)V
SYSTEM_SETTINGS com.android.internal.telephony.DataConnectionAc.reqUpdateLinkPropertiesDataCallState(Lcom/android/internal/telephony/DataCallState;)V
SYSTEM_SETTINGS com.android.internal.telephony.DataConnection$DcActivatingState.processMessage(Landroid/os/Message;)Z
SYSTEM_SETTINGS com.android.internal.telephony.DataConnection$DcActiveState.processMessage(Landroid/os/Message;)Z
SYSTEM_SETTINGS com.android.internal.telephony.DataConnection$DcDefaultState.processMessage(Landroid/os/Message;)Z
SYSTEM_SETTINGS com.android.internal.telephony.DataConnection$DcDisconnectingState.processMessage(Landroid/os/Message;)Z
SYSTEM_SETTINGS com.android.internal.telephony.DataConnection$DcDisconnectionErrorCreatingConnection.processMessage(Landroid/os/Message;)Z
SYSTEM_SETTINGS com.android.internal.telephony.DataConnection$DcInactiveState.processMessage(Landroid/os/Message;)Z
SYSTEM_SETTINGS com.android.internal.telephony.DataConnection.setRetryCount(I)V
SYSTEM_SETTINGS com.android.internal.telephony.DataConnectionTracker.notifyOffApnsOfAvailability(Ljava/lang/String;)V
SYSTEM_SETTINGS com.android.internal.telephony.DataConnectionTracker.putRecoveryAction(I)V
SYSTEM_SETTINGS com.android.internal.telephony.DataConnectionTracker.setDataOnRoamingEnabled(Z)V android.permission.WRITE_SETTINGS 
SYSTEM_SETTINGS com.android.internal.telephony.DataConnectionTracker.setInternalDataEnabled(Z)Z
SYSTEM_SETTINGS com.android.internal.telephony.DefaultPhoneNotifier.notifyCallForwardingChanged(Lcom/android/internal/telephony/Phone;)V
SYSTEM_SETTINGS com.android.internal.telephony.DefaultPhoneNotifier.notifyCellInfo(Lcom/android/internal/telephony/Phone;Ljava/util/List;)V
SYSTEM_SETTINGS com.android.internal.telephony.DefaultPhoneNotifier.notifyDataActivity(Lcom/android/internal/telephony/Phone;)V
SYSTEM_SETTINGS com.android.internal.telephony.DefaultPhoneNotifier.notifyMessageWaitingChanged(Lcom/android/internal/telephony/Phone;)V
SYSTEM_SETTINGS com.android.internal.telephony.DefaultPhoneNotifier.notifyOtaspChanged(Lcom/android/internal/telephony/Phone;I)V
SYSTEM_SETTINGS com.android.internal.telephony.DefaultPhoneNotifier.notifyPhoneState(Lcom/android/internal/telephony/Phone;)V
SYSTEM_SETTINGS com.android.internal.telephony.DefaultPhoneNotifier.notifyServiceState(Lcom/android/internal/telephony/Phone;)V
SYSTEM_SETTINGS com.android.internal.telephony.DefaultPhoneNotifier.notifySignalStrength(Lcom/android/internal/telephony/Phone;)V
SYSTEM_SETTINGS com.android.internal.telephony.GsmAlphabet.gsm8BitUnpackedToString([BIILjava/lang/String;)Ljava/lang/String;
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GsmDataConnectionTracker.notifyOffApnsOfAvailability(Ljava/lang/String;)V
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GsmDataConnectionTracker.onDataSetupComplete(Landroid/os/AsyncResult;)V
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GsmDataConnectionTracker.setDataOnRoamingEnabled(Z)V android.permission.WRITE_SETTINGS 
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GsmDataConnectionTracker.setState(Lcom/android/internal/telephony/DctConstants$State;)V
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GSMPhone.dial(Ljava/lang/String;Lcom/android/internal/telephony/UUSInfo;)Lcom/android/internal/telephony/Connection;
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GSMPhone.handleMessage(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GSMPhone.handlePinMmi(Ljava/lang/String;)Z
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GSMPhone.notifyServiceStateChanged(Landroid/telephony/ServiceState;)V android.permission.BROADCAST_STICKY 
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GSMPhone.notifySuppServiceFailed(Lcom/android/internal/telephony/Phone$SuppService;)V
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GSMPhone.saveClirSetting(I)V
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GSMPhone.setCallForwardingOption(IILjava/lang/String;ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GSMPhone.setCallWaiting(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GSMPhone.setCdmaSubscription(ILandroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GSMPhone.setCellBroadcastSmsConfig([ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GSMPhone.setDataRoamingEnabled(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GSMPhone.setLine1Number(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GSMPhone.setMute(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GSMPhone.setOnPostDialCharacter(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GSMPhone.setOutgoingCallerIdDisplay(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GSMPhone.setRadioPower(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GSMPhone.setSmscAddress(Ljava/lang/String;Landroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.gsm.GSMPhone.setSystemProperty(Ljava/lang/String;Ljava/lang/String;)V
SYSTEM_SETTINGS com.android.internal.telephony.IccCardProxy.setVoiceRadioTech(I)V
SYSTEM_SETTINGS com.android.internal.telephony.IccCardStatus.setCardState(I)V
SYSTEM_SETTINGS com.android.internal.telephony.IccCardStatus.setUniversalPinState(I)V
SYSTEM_SETTINGS com.android.internal.telephony.IccFileHandler.handleMessage(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.IccFileHandler.updateEFLinearFixed(II[BLjava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.IccRecords.setMsisdnNumber(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.IccRecords.setVoiceCallForwardingFlag(IZ)V
SYSTEM_SETTINGS com.android.internal.telephony.ims.IsimUiccRecords.setVoiceMailNumber(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.ims.IsimUiccRecords.setVoiceMessageWaiting(II)V
SYSTEM_SETTINGS com.android.internal.telephony.IntRangeManager.disableRange(IILjava/lang/String;)Z
SYSTEM_SETTINGS com.android.internal.telephony.IntRangeManager.enableRange(IILjava/lang/String;)Z
SYSTEM_SETTINGS com.android.internal.telephony.IPhoneStateListener$Stub$Proxy.onCallStateChanged(ILjava/lang/String;)V
SYSTEM_SETTINGS com.android.internal.telephony.IPhoneStateListener$Stub$Proxy.onCellInfoChanged(Ljava/util/List;)V
SYSTEM_SETTINGS com.android.internal.telephony.IPhoneStateListener$Stub$Proxy.onDataActivity(I)V
SYSTEM_SETTINGS com.android.internal.telephony.IPhoneStateListener$Stub$Proxy.onOtaspChanged(I)V
SYSTEM_SETTINGS com.android.internal.telephony.IPhoneStateListener$Stub$Proxy.onSignalStrengthChanged(I)V
SYSTEM_SETTINGS com.android.internal.telephony.ITelephonyRegistry$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
SYSTEM_SETTINGS com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.listen(Ljava/lang/String;Lcom/android/internal/telephony/IPhoneStateListener;IZ)V
SYSTEM_SETTINGS com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifyCallForwardingChanged(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifyCallState(ILjava/lang/String;)V
SYSTEM_SETTINGS com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifyCellInfo(Ljava/util/List;)V
SYSTEM_SETTINGS com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifyCellLocation(Landroid/os/Bundle;)V
SYSTEM_SETTINGS com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifyDataActivity(I)V
SYSTEM_SETTINGS com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifyMessageWaitingChanged(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifyOtaspChanged(I)V
SYSTEM_SETTINGS com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifyServiceState(Landroid/telephony/ServiceState;)V
SYSTEM_SETTINGS com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifySignalStrength(Landroid/telephony/SignalStrength;)V
SYSTEM_SETTINGS com.android.internal.telephony.ITelephony$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
SYSTEM_SETTINGS com.android.internal.telephony.ITelephony$Stub$Proxy.call(Ljava/lang/String;)V
SYSTEM_SETTINGS com.android.internal.telephony.ITelephony$Stub$Proxy.dial(Ljava/lang/String;)V
SYSTEM_SETTINGS com.android.internal.telephony.ITelephony$Stub$Proxy.disableApnType(Ljava/lang/String;)I
SYSTEM_SETTINGS com.android.internal.telephony.ITelephony$Stub$Proxy.enableApnType(Ljava/lang/String;)I
SYSTEM_SETTINGS com.android.internal.telephony.ITelephony$Stub$Proxy.handlePinMmi(Ljava/lang/String;)Z
SYSTEM_SETTINGS com.android.internal.telephony.ITelephony$Stub$Proxy.setRadio(Z)Z
SYSTEM_SETTINGS com.android.internal.telephony.ITelephony$Stub$Proxy.supplyPin(Ljava/lang/String;)Z android.permission.MODIFY_PHONE_STATE android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.ITelephony$Stub$Proxy.supplyPuk(Ljava/lang/String;Ljava/lang/String;)Z
SYSTEM_SETTINGS com.android.internal.telephony.IWapPushManager$Stub.onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
SYSTEM_SETTINGS com.android.internal.telephony.IWapPushManager$Stub$Proxy.addPackage(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZZ)Z
SYSTEM_SETTINGS com.android.internal.telephony.IWapPushManager$Stub$Proxy.deletePackage(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
SYSTEM_SETTINGS com.android.internal.telephony.IWapPushManager$Stub$Proxy.processMessage(Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;)I
SYSTEM_SETTINGS com.android.internal.telephony.IWapPushManager$Stub$Proxy.updatePackage(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZZ)Z
SYSTEM_SETTINGS com.android.internal.telephony.MccTable.setSystemLocale(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V android.permission.WAKE_LOCK android.permission.CHANGE_CONFIGURATION 
SYSTEM_SETTINGS com.android.internal.telephony.MccTable.updateMccMncConfiguration(Landroid/content/Context;Ljava/lang/String;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneBase.disableDnsCheck(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneBase.enableApnType(Ljava/lang/String;)I
SYSTEM_SETTINGS com.android.internal.telephony.PhoneBase.invokeOemRilRequestStrings([Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneBase.notifyCellInfo(Ljava/util/List;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneBase.notifyOtaspChanged(I)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneBase.notifyServiceStateChangedP(Landroid/telephony/ServiceState;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneBase.restoreSavedNetworkSelection(Landroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.PhoneBase.sendBurstDtmf(Ljava/lang/String;IILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneBase.setBandMode(ILandroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.PhoneBase.setCdmaRoamingPreference(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneBase.setCdmaSubscription(ILandroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.PhoneBase.setEchoSuppressionEnabled(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneBase.setOnEcbModeExitResponse(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneBase.setPreferredNetworkType(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneBase.setSmscAddress(Ljava/lang/String;Landroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.PhoneBase.setSystemProperty(Ljava/lang/String;Ljava/lang/String;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneBase.setTTYMode(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneBase.setVoiceMessageWaiting(II)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.dial(Ljava/lang/String;)Lcom/android/internal/telephony/Connection;
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.dial(Ljava/lang/String;Lcom/android/internal/telephony/UUSInfo;)Lcom/android/internal/telephony/Connection;
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.enableApnType(Ljava/lang/String;)I
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.enableEnhancedVoicePrivacy(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.handleMessage(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setBandMode(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setCallForwardingOption(IILjava/lang/String;ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setCallWaiting(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setCdmaRoamingPreference(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setCdmaSubscription(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setCellBroadcastSmsConfig([ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setDataRoamingEnabled(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setEchoSuppressionEnabled(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setLine1Number(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setMute(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setNetworkSelectionModeAutomatic(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setOnEcbModeExitResponse(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setOnPostDialCharacter(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setOutgoingCallerIdDisplay(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setPreferredNetworkType(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setRadioPower(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setSmscAddress(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setTTYMode(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setUnitTestMode(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setVoiceMailNumber(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.setVoiceMessageWaiting(II)V
SYSTEM_SETTINGS com.android.internal.telephony.PhoneProxy.startDtmf(C)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.acceptCall(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.acknowledgeIncomingGsmSmsWithPdu(ZLjava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.acknowledgeLastIncomingCdmaSms(ZILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.acknowledgeLastIncomingGsmSms(ZILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.cancelPendingUssd(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.changeBarringPassword(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.conference(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.deactivateDataCall(IILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.deleteSmsOnRuim(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.deleteSmsOnSim(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.dial(Ljava/lang/String;ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.dial(Ljava/lang/String;ILcom/android/internal/telephony/UUSInfo;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.exitEmergencyCallbackMode(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.explicitCallTransfer(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.getIMSIForApp(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.handleCallSetupRequestFromSim(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.hangupForegroundResumeBackground(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.invokeOemRilRequestRaw([BLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.invokeOemRilRequestStrings([Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.queryCallForwardStatus(IILjava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.queryCallWaiting(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.queryFacilityLockForApp(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.rejectCall(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.reportSmsMemoryStatus(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.reportStkServiceIsRunning(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.requestIsimAuthentication(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.resetRadio(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL$RILSender.handleMessage(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.sendCDMAFeatureCode(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.sendCdmaSms([BLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.sendEnvelope(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.sendEnvelopeWithStatus(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.sendSMS(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.sendTerminalResponse(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.sendUSSD(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setBandMode(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setCallForward(IIILjava/lang/String;ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setCallWaiting(ZILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setCdmaBroadcastActivation(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setCdmaBroadcastConfig([ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setCdmaRoamingPreference(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setCdmaSubscriptionSource(ILandroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setCLIR(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setCurrentPreferredNetworkType()V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setFacilityLockForApp(Ljava/lang/String;ZLjava/lang/String;ILjava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setFacilityLock(Ljava/lang/String;ZLjava/lang/String;ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setGsmBroadcastActivation(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setGsmBroadcastConfig([Lcom/android/internal/telephony/gsm/SmsBroadcastConfigInfo;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setLocationUpdates(ZLandroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setMute(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setNetworkSelectionModeAutomatic(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setNetworkSelectionModeManual(Ljava/lang/String;Landroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setOnNITZTime(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setPreferredNetworkType(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setPreferredVoicePrivacy(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setRadioPower(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setSmscAddress(Ljava/lang/String;Landroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setSuppServiceNotifications(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setTTYMode(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.setupDataCall(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.startDtmf(CLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.stopDtmf(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.supplyNetworkDepersonalization(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.switchWaitingOrHoldingAndActive(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.writeSmsToRuim(ILjava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.RIL.writeSmsToSim(ILjava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.sendBurstDtmf(Ljava/lang/String;IILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.sendCDMAFeatureCode(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.sendCdmaSms([BLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.sendDtmf(CLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.sendEnvelope(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.sendEnvelopeWithStatus(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.sendSMS(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.sendTerminalResponse(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.sendUSSD(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setBandMode(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setCallForward(IIILjava/lang/String;ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setCallWaiting(ZILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setCdmaBroadcastActivation(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setCdmaBroadcastConfig([ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setCdmaRoamingPreference(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setCdmaSubscriptionSource(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setCLIR(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setFacilityLockForApp(Ljava/lang/String;ZLjava/lang/String;ILjava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setFacilityLock(Ljava/lang/String;ZLjava/lang/String;ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setGsmBroadcastActivation(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setGsmBroadcastConfig([Lcom/android/internal/telephony/gsm/SmsBroadcastConfigInfo;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setLocationUpdates(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setMute(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setNetworkSelectionModeAutomatic(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setNetworkSelectionModeManual(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setOnNITZTime(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setPhoneType(I)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setPreferredNetworkType(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setPreferredVoicePrivacy(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setRadioPower(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setSmscAddress(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setSuppServiceNotifications(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setTTYMode(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipCommandInterface.setupDataCall(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipConnectionBase.setState(Lcom/android/internal/telephony/Call$State;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhoneBase.notifyServiceStateChanged(Landroid/telephony/ServiceState;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhoneBase.notifySuppServiceFailed(Lcom/android/internal/telephony/Phone$SuppService;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhoneBase.restoreSavedNetworkSelection(Landroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhoneBase.sendUssdResponse(Ljava/lang/String;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhoneBase.setBandMode(ILandroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhoneBase.setCallForwardingOption(IILjava/lang/String;ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhoneBase.setCallWaiting(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhoneBase.setCdmaSubscription(ILandroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhoneBase.setCellBroadcastSmsConfig([ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhoneBase.setDataRoamingEnabled(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhoneBase.setLine1Number(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V android.permission.STOP_APP_SWITCHES 
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhoneBase.setNetworkSelectionModeAutomatic(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhoneBase.setOutgoingCallerIdDisplay(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhoneBase.setRadioPower(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhoneBase.setSmscAddress(Ljava/lang/String;Landroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhoneBase.setVoiceMailNumber(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhone.saveClirSetting(I)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhone.setCallForwardingOption(IILjava/lang/String;ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhone.setCallWaiting(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhone.setCdmaSubscription(ILandroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhone.setCellBroadcastSmsConfig([ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhone.setDataRoamingEnabled(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhone.setEchoSuppressionEnabled(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhone.setLine1Number(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhone.setMute(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhone.setNetworkSelectionModeAutomatic(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhone.setOutgoingCallerIdDisplay(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhone.setRadioPower(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhone.setSmscAddress(Ljava/lang/String;Landroid/os/Message;)V android.permission.WAKE_LOCK 
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhone.setVoiceMailNumber(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhone$SipCall.setMute(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.sip.SipPhone$SipConnection.setMute(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.test.ModelInterpreter.print(Ljava/lang/String;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.ModelInterpreter.println(Ljava/lang/String;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.ModelInterpreter.sendUnsolicited(Ljava/lang/String;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.ModelInterpreter.setAutoProgressConnectingCall(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.test.ModelInterpreter.setNextCallFailCause(I)V
SYSTEM_SETTINGS com.android.internal.telephony.test.ModelInterpreter.setNextDialFailImmediately(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.sendBurstDtmf(Ljava/lang/String;IILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.sendCDMAFeatureCode(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.sendCdmaSms([BLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.sendDtmf(CLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.sendEnvelope(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.sendEnvelopeWithStatus(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.sendSMS(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.sendTerminalResponse(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.sendUSSD(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setAutoProgressConnectingCall(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setBandMode(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setCallForward(IIILjava/lang/String;ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setCallWaiting(ZILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setCdmaBroadcastActivation(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setCdmaBroadcastConfig([ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setCdmaRoamingPreference(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setCdmaSubscriptionSource(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setCLIR(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setFacilityLock(Ljava/lang/String;ZLjava/lang/String;ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setGsmBroadcastActivation(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setGsmBroadcastConfig([Lcom/android/internal/telephony/gsm/SmsBroadcastConfigInfo;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setLocationUpdates(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setMute(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setNetworkSelectionModeAutomatic(Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setNetworkSelectionModeManual(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setNextDialFailImmediately(Z)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setPhoneType(I)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setPreferredVoicePrivacy(ZLandroid/os/Message;)V android.permission.STOP_APP_SWITCHES 
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setRadioPower(ZLandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setSmscAddress(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setTTYMode(ILandroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.test.SimulatedCommands.setupDataCall(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.UiccCardApplication.registerForLocked(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.UiccCardApplication.registerForNetworkLocked(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.UiccCardApplication.registerForReady(Landroid/os/Handler;ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.internal.telephony.UiccCardApplication.supplyNetworkDepersonalization(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.UiccCardApplication.supplyPin2(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.UiccCardApplication.supplyPin(Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.UiccCardApplication.supplyPuk2(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.UiccCardApplication.supplyPuk(Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V
SYSTEM_SETTINGS com.android.internal.telephony.UiccCard.update(Landroid/content/Context;Lcom/android/internal/telephony/CommandsInterface;Lcom/android/internal/telephony/IccCardStatus;)V
SYSTEM_SETTINGS com.android.server.AlarmManagerService.setTimeZone(Ljava/lang/String;)V android.permission.SET_TIME_ZONE 
SYSTEM_SETTINGS com.android.server.am.ActivityManagerService.appNotResponding(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;)V
SYSTEM_SETTINGS com.android.server.am.ActivityManagerService.closeSystemDialogsLocked(Ljava/lang/String;)V
SYSTEM_SETTINGS com.android.server.am.ActivityManagerService.dispatchUserSwitch(Lcom/android/server/am/UserStartedState;II)V
SYSTEM_SETTINGS com.android.server.am.ActivityManagerService.sendPendingBroadcastsLocked(Lcom/android/server/am/ProcessRecord;)Z
SYSTEM_SETTINGS com.android.server.am.ActivityManagerService.setAlwaysFinish(Z)V android.permission.WRITE_SETTINGS 
SYSTEM_SETTINGS com.android.server.am.ActivityManagerService.signalPersistentProcesses(I)V
SYSTEM_SETTINGS com.android.server.am.ActivityManagerService.startActivityIntentSender(Landroid/app/IApplicationThread;Landroid/content/IntentSender;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I
SYSTEM_SETTINGS com.android.server.am.ActivityManagerService.switchUser(I)Z
SYSTEM_SETTINGS com.android.server.am.ActivityManagerService.updateConfiguration(Landroid/content/res/Configuration;)V
SYSTEM_SETTINGS com.android.server.am.ActivityManagerService.updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z
SYSTEM_SETTINGS com.android.server.am.ActivityManagerService.updatePersistentConfiguration(Landroid/content/res/Configuration;)V
SYSTEM_SETTINGS com.android.server.am.ActivityStack.startActivityMayWait(Landroid/app/IApplicationThread;ILandroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILjava/lang/String;Landroid/os/ParcelFileDescriptor;Landroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;Landroid/os/Bundle;I)I
SYSTEM_SETTINGS com.android.server.AttributeCache.updateConfiguration(Landroid/content/res/Configuration;)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.hasGrantedPolicy(Landroid/content/ComponentName;II)Z
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.reportFailedPasswordAttempt(I)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.reportSuccessfulPasswordAttempt(I)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.resetPassword(Ljava/lang/String;II)Z
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.sendAdminCommandLocked(Lcom/android/server/DevicePolicyManagerService$ActiveAdmin;Ljava/lang/String;Landroid/content/BroadcastReceiver;)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.sendAdminCommandLocked(Lcom/android/server/DevicePolicyManagerService$ActiveAdmin;Ljava/lang/String;)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.sendAdminCommandLocked(Ljava/lang/String;II)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.setActiveAdmin(Landroid/content/ComponentName;ZI)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.setActivePasswordState(IIIIIIIII)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.setCameraDisabled(Landroid/content/ComponentName;ZI)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.setExpirationAlarmCheckLocked(Landroid/content/Context;Lcom/android/server/DevicePolicyManagerService$DevicePolicyData;)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.setGlobalProxy(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;I)Landroid/content/ComponentName;
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.setKeyguardDisabledFeatures(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.setMaximumFailedPasswordsForWipe(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.setMaximumTimeToLock(Landroid/content/ComponentName;JI)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.setPasswordExpirationTimeout(Landroid/content/ComponentName;JI)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.setPasswordHistoryLength(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.setPasswordMinimumLength(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.setPasswordMinimumLetters(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.setPasswordMinimumLowerCase(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.setPasswordMinimumNonLetter(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.setPasswordMinimumNumeric(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.setPasswordMinimumSymbols(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.setPasswordMinimumUpperCase(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.setPasswordQuality(Landroid/content/ComponentName;II)V
SYSTEM_SETTINGS com.android.server.DevicePolicyManagerService.setStorageEncryption(Landroid/content/ComponentName;ZI)I android.permission.STOP_APP_SWITCHES 
SYSTEM_SETTINGS com.android.server.DeviceStorageMonitorService$CacheFileDeletedObserver.onEvent(ILjava/lang/String;)V
SYSTEM_SETTINGS com.android.server.input.InputManagerService$InputDevicesChangedListenerRecord.notifyInputDevicesChanged([I)V
SYSTEM_SETTINGS com.android.server.usb.UsbDeviceManager.openAccessory(Landroid/hardware/usb/UsbAccessory;)Landroid/os/ParcelFileDescriptor;
SYSTEM_SETTINGS com.android.server.usb.UsbDeviceManager.setCurrentFunctions(Ljava/lang/String;Z)V
SYSTEM_SETTINGS com.android.server.usb.UsbDeviceManager.setMassStorageBackingFile(Ljava/lang/String;)V
SYSTEM_SETTINGS com.android.server.usb.UsbDeviceManager$UsbHandler.sendMessage(ILjava/lang/Object;)V
SYSTEM_SETTINGS com.android.server.usb.UsbDeviceManager$UsbHandler.sendMessage(ILjava/lang/Object;Z)V
SYSTEM_SETTINGS com.android.server.usb.UsbDeviceManager$UsbHandler.sendMessage(IZ)V
SYSTEM_SETTINGS com.android.server.wm.WindowManagerService.setNewConfiguration(Landroid/content/res/Configuration;)V
SYSTEM_SETTINGS com.android.server.wm.WindowManagerService.updateOrientationFromAppTokens(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;
SYSTEM_SETTINGS com.android.uiautomator.core.UiDevice.pressKeyCode(II)Z
SYSTEM_SETTINGS com.android.uiautomator.core.UiDevice.pressKeyCode(I)Z
VOIP android.net.sip.ISipService$Stub$Proxy.isOpened(Ljava/lang/String;)Z
VOIP android.net.sip.ISipService$Stub$Proxy.open3(Landroid/net/sip/SipProfile;Landroid/app/PendingIntent;Landroid/net/sip/ISipSessionListener;)V android.permission.USE_SIP android.permission.WAKE_LOCK 
VOIP android.net.sip.ISipService$Stub$Proxy.setRegistrationListener(Ljava/lang/String;Landroid/net/sip/ISipSessionListener;)V
VOIP android.net.sip.ISipSessionListener$Stub$Proxy.onCallBusy(Landroid/net/sip/ISipSession;)V
VOIP android.net.sip.ISipSessionListener$Stub$Proxy.onCallChangeFailed(Landroid/net/sip/ISipSession;ILjava/lang/String;)V
VOIP android.net.sip.ISipSessionListener$Stub$Proxy.onCallEnded(Landroid/net/sip/ISipSession;)V
VOIP android.net.sip.ISipSessionListener$Stub$Proxy.onCallEstablished(Landroid/net/sip/ISipSession;Ljava/lang/String;)V
VOIP android.net.sip.ISipSessionListener$Stub$Proxy.onCalling(Landroid/net/sip/ISipSession;)V
VOIP android.net.sip.ISipSessionListener$Stub$Proxy.onCallTransferring(Landroid/net/sip/ISipSession;Ljava/lang/String;)V
VOIP android.net.sip.ISipSessionListener$Stub$Proxy.onError(Landroid/net/sip/ISipSession;ILjava/lang/String;)V
VOIP android.net.sip.ISipSessionListener$Stub$Proxy.onRegistering(Landroid/net/sip/ISipSession;)V
VOIP android.net.sip.ISipSessionListener$Stub$Proxy.onRegistrationDone(Landroid/net/sip/ISipSession;I)V
VOIP android.net.sip.ISipSessionListener$Stub$Proxy.onRegistrationFailed(Landroid/net/sip/ISipSession;ILjava/lang/String;)V
VOIP android.net.sip.ISipSessionListener$Stub$Proxy.onRegistrationTimeout(Landroid/net/sip/ISipSession;)V
VOIP android.net.sip.ISipSessionListener$Stub$Proxy.onRingingBack(Landroid/net/sip/ISipSession;)V
VOIP android.net.sip.ISipSessionListener$Stub$Proxy.onRinging(Landroid/net/sip/ISipSession;Landroid/net/sip/SipProfile;Ljava/lang/String;)V
VOIP android.net.sip.ISipSession$Stub$Proxy.makeCall(Landroid/net/sip/SipProfile;Ljava/lang/String;I)V
VOIP android.net.sip.ISipSession$Stub$Proxy.setListener(Landroid/net/sip/ISipSessionListener;)V
VOIP android.net.sip.SimpleSessionDescription$Fields.access$200(Landroid/net/sip/SimpleSessionDescription$Fields;Ljava/lang/StringBuilder;)V
VOIP android.net.sip.SipAudioCall.setListener(Landroid/net/sip/SipAudioCall$Listener;)V
VOIP android.net.sip.SipManager.open(Landroid/net/sip/SipProfile;Landroid/app/PendingIntent;Landroid/net/sip/SipRegistrationListener;)V
VOIP android.net.sip.SipManager.open(Landroid/net/sip/SipProfile;)V
VOIP android.net.sip.SipManager.setRegistrationListener(Ljava/lang/String;Landroid/net/sip/SipRegistrationListener;)V
VOIP com.android.internal.telephony.cdma.CDMALTEPhone.dial(Ljava/lang/String;)Lcom/android/internal/telephony/Connection; android.permission.WAKE_LOCK 
VOIP com.android.internal.telephony.cdma.CDMAPhone.dial(Ljava/lang/String;)Lcom/android/internal/telephony/Connection; android.permission.WAKE_LOCK 
VOIP com.android.internal.telephony.gsm.GSMPhone.dial(Ljava/lang/String;)Lcom/android/internal/telephony/Connection;
VOIP com.android.internal.telephony.sip.SipPhoneBase.dial(Ljava/lang/String;Lcom/android/internal/telephony/UUSInfo;)Lcom/android/internal/telephony/Connection; android.permission.USE_SIP 
VOIP com.android.internal.telephony.sip.SipPhoneBase.setOnPostDialCharacter(Landroid/os/Handler;ILjava/lang/Object;)V
VOIP com.android.internal.telephony.sip.SipPhone.dial(Ljava/lang/String;)Lcom/android/internal/telephony/Connection;
VOIP com.android.internal.telephony.sip.SipPhone.dial(Ljava/lang/String;Lcom/android/internal/telephony/UUSInfo;)Lcom/android/internal/telephony/Connection; android.permission.USE_SIP 
VOIP com.android.internal.telephony.sip.SipPhone.setOnPostDialCharacter(Landroid/os/Handler;ILjava/lang/Object;)V
VOIP com.android.phone.sip.SipProfileDb.saveProfile(Landroid/net/sip/SipProfile;)V
VOIP com.android.server.sip.SipService.open3(Landroid/net/sip/SipProfile;Landroid/app/PendingIntent;Landroid/net/sip/ISipSessionListener;)V
VOIP com.android.server.sip.SipService.open(Landroid/net/sip/SipProfile;)V
VOIP gov.nist.javax.sip.stack.SIPClientTransaction.setDialog(Lgov/nist/javax/sip/stack/SIPDialog;Ljava/lang/String;)V
VOIP gov.nist.javax.sip.stack.SIPTransactionStack.createDialog(Lgov/nist/javax/sip/stack/SIPTransaction;)Lgov/nist/javax/sip/stack/SIPDialog;
VOIP gov.nist.javax.sip.stack.SIPTransactionStack.putDialog(Lgov/nist/javax/sip/stack/SIPDialog;)V


# Ljava/net/SocketOutputStream
NETWORK java.net.SocketOutputStream.socketWrite0(Ljava/io/FileDescriptor;[BII)V
NETWORK java.net.SocketOutputStream.socketWrite([BII)V
NETWORK java.net.SocketOutputStream.write(I)V
NETWORK java.net.SocketOutputStream.write([B)V
NETWORK java.net.SocketOutputStream.write([BII)V

# Ljavax/imageio/stream/FileCacheImageOutputStream
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.write(I)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.write([BII)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.write([B)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.writeBoolean(Z)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.writeByte(I)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.writeShort(I)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.writeChar(I)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.writeInt(I)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.writeLong(J)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.writeFloat(F)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.writeDouble(D)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.writeBytes(Ljava/lang/String;)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.writeChars(Ljava/lang/String;)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.writeUTF(Ljava/lang/String;)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.writeShorts([SII)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.writeChars([CII)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.writeInts([III)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.writeLongs([JII)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.writeFloats([FII)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.writeDoubles([DII)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.writeBit(I)V
NO_CATEGORY javax.imageio.stream.FileCacheImageOutputStream.writeBits(JI)V

# Ljava/io/FileOutputStream
FILE java.io.FileOutputStream.write([BII)V
FILE java.io.FileOutputStream.write(I)V
FILE java.io.FileOutputStream.write([B)V

# Ljava/util/jar/JarOutputStream
NO_CATEGORY java.util.jar.JarOutputStream.write([BII)V
NO_CATEGORY java.util.jar.JarOutputStream.write(I)V
NO_CATEGORY java.util.jar.JarOutputStream.write([B)V

# Lorg/omg/CORBA/portable/OutputStream
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_boolean(Z)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_char(C)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_wchar(C)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_octet(B)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_short(S)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_ushort(S)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_long(I)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_ulong(I)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_longlong(J)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_ulonglong(J)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_float(F)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_double(D)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_string(Ljava/lang/String;)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_wstring(Ljava/lang/String;)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_boolean_array([ZII)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_char_array([CII)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_wchar_array([CII)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_octet_array([BII)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_short_array([SII)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_ushort_array([SII)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_long_array([III)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_ulong_array([III)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_longlong_array([JII)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_ulonglong_array([JII)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_float_array([FII)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_double_array([DII)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_Object(Lorg/omg/CORBA/Object;)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_TypeCode(Lorg/omg/CORBA/TypeCode;)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_any(Lorg/omg/CORBA/Any;)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_Principal(Lorg/omg/CORBA/Principal;)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write(I)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_fixed(Ljava/math/BigDecimal;)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write_Context(Lorg/omg/CORBA/Context;Lorg/omg/CORBA/ContextList;)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write([B)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write([BII)V
NO_CATEGORY org.omg.CORBA.portable.OutputStream.write(I)V

# Ljava/security/DigestOutputStream
NO_CATEGORY java.security.DigestOutputStream.write(I)V
NO_CATEGORY java.security.DigestOutputStream.write([BII)V
NO_CATEGORY java.security.DigestOutputStream.write([B)V

# Ljavax/imageio/stream/ImageOutputStreamImpl
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.write(I)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.write([B)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.write([BII)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.writeBoolean(Z)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.writeByte(I)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.writeShort(I)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.writeChar(I)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.writeInt(I)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.writeLong(J)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.writeFloat(F)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.writeDouble(D)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.writeBytes(Ljava/lang/String;)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.writeChars(Ljava/lang/String;)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.writeUTF(Ljava/lang/String;)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.writeShorts([SII)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.writeChars([CII)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.writeInts([III)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.writeLongs([JII)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.writeFloats([FII)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.writeDoubles([DII)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.writeBit(I)V
NO_CATEGORY javax.imageio.stream.ImageOutputStreamImpl.writeBits(JI)V

# Ljava/io/ByteArrayOutputStream
NO_CATEGORY java.io.ByteArrayOutputStream.write([BII)V
NO_CATEGORY java.io.ByteArrayOutputStream.write(I)V
NO_CATEGORY java.io.ByteArrayOutputStream.write([B)V

# Landroid/util/Base64OutputStream
NO_CATEGORY android.util.Base64OutputStream.write(I)V
NO_CATEGORY android.util.Base64OutputStream.write([BII)V
NO_CATEGORY android.util.Base64OutputStream.write([B)V

# Ljava/io/DataOutputStream
NO_CATEGORY java.io.DataOutputStream.write([BII)V
NO_CATEGORY java.io.DataOutputStream.write(I)V
NO_CATEGORY java.io.DataOutputStream.writeBoolean(Z)V
NO_CATEGORY java.io.DataOutputStream.writeByte(I)V
NO_CATEGORY java.io.DataOutputStream.writeBytes(Ljava/lang/String;)V
NO_CATEGORY java.io.DataOutputStream.writeChar(I)V
NO_CATEGORY java.io.DataOutputStream.writeChars(Ljava/lang/String;)V
NO_CATEGORY java.io.DataOutputStream.writeDouble(D)V
NO_CATEGORY java.io.DataOutputStream.writeFloat(F)V
NO_CATEGORY java.io.DataOutputStream.writeInt(I)V
NO_CATEGORY java.io.DataOutputStream.writeLong(J)V
NO_CATEGORY java.io.DataOutputStream.writeShort(I)V
NO_CATEGORY java.io.DataOutputStream.writeUTF(Ljava/lang/String;)V
NO_CATEGORY java.io.DataOutputStream.write([B)V

# Lorg/jcp/xml/dsig/internal/SignerOutputStream
NO_CATEGORY org.jcp.xml.dsig.internal.SignerOutputStream.write([B)V
NO_CATEGORY org.jcp.xml.dsig.internal.SignerOutputStream.write(I)V
NO_CATEGORY org.jcp.xml.dsig.internal.SignerOutputStream.write([BII)V

# Lorg/apache/http/impl/io/ChunkedOutputStream
NO_CATEGORY org.apache.http.impl.io.ChunkedOutputStream.write(I)V
NO_CATEGORY org.apache.http.impl.io.ChunkedOutputStream.write([B)V
NO_CATEGORY org.apache.http.impl.io.ChunkedOutputStream.write([BII)V

# Ljava/lang/ProcessBuilder$NullOutputStream
NO_CATEGORY java.lang.ProcessBuilder$NullOutputStream.write(I)V
NO_CATEGORY java.lang.ProcessBuilder$NullOutputStream.write([B)V
NO_CATEGORY java.lang.ProcessBuilder$NullOutputStream.write([BII)V

# Ljavax/imageio/stream/MemoryCacheImageOutputStream
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.write(I)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.write([BII)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.write([B)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.writeBoolean(Z)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.writeByte(I)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.writeShort(I)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.writeChar(I)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.writeInt(I)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.writeLong(J)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.writeFloat(F)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.writeDouble(D)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.writeBytes(Ljava/lang/String;)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.writeChars(Ljava/lang/String;)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.writeUTF(Ljava/lang/String;)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.writeShorts([SII)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.writeChars([CII)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.writeInts([III)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.writeLongs([JII)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.writeFloats([FII)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.writeDoubles([DII)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.writeBit(I)V
NO_CATEGORY javax.imageio.stream.MemoryCacheImageOutputStream.writeBits(JI)V

# Ljava/util/zip/CheckedOutputStream
NO_CATEGORY java.util.zip.CheckedOutputStream.write(I)V
NO_CATEGORY java.util.zip.CheckedOutputStream.write([BII)V
NO_CATEGORY java.util.zip.CheckedOutputStream.write([B)V

# Ljavax/crypto/CipherOutputStream
NO_CATEGORY javax.crypto.CipherOutputStream.write(I)V
NO_CATEGORY javax.crypto.CipherOutputStream.write([BII)V
NO_CATEGORY javax.crypto.CipherOutputStream.write([B)V

# Landroid/os/ParcelFileDescriptor$AutoCloseOutputStream
NO_CATEGORY android.os.ParcelFileDescriptor$AutoCloseOutputStream.write([BII)V
NO_CATEGORY android.os.ParcelFileDescriptor$AutoCloseOutputStream.write(I)V
NO_CATEGORY android.os.ParcelFileDescriptor$AutoCloseOutputStream.write([B)V

# Ljava/io/PipedOutputStream
NO_CATEGORY java.io.PipedOutputStream.write([BII)V
NO_CATEGORY java.io.PipedOutputStream.write(I)V
NO_CATEGORY java.io.PipedOutputStream.write([B)V

# Lorg/apache/http/impl/io/IdentityOutputStream
NO_CATEGORY org.apache.http.impl.io.IdentityOutputStream.write([BII)V
NO_CATEGORY org.apache.http.impl.io.IdentityOutputStream.write([B)V
NO_CATEGORY org.apache.http.impl.io.IdentityOutputStream.write(I)V

# Ljava/io/ObjectOutputStream$BlockDataOutputStream
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.write(I)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.write([B)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.write([BII)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.write([BIIZ)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeBlockHeader(I)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeBoolean(Z)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeByte(I)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeChar(I)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeShort(I)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeInt(I)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeFloat(F)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeLong(J)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeDouble(D)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeBytes(Ljava/lang/String;)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeChars(Ljava/lang/String;)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeUTF(Ljava/lang/String;)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeBooleans([ZII)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeChars([CII)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeShorts([SII)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeInts([III)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeFloats([FII)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeLongs([JII)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeDoubles([DII)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeUTF(Ljava/lang/String;J)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeLongUTF(Ljava/lang/String;)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeLongUTF(Ljava/lang/String;J)V
NO_CATEGORY java.io.ObjectOutputStream$BlockDataOutputStream.writeUTFBody(Ljava/lang/String;)V

# Ljava/io/FilterOutputStream
NO_CATEGORY java.io.FilterOutputStream.write([BII)V
NO_CATEGORY java.io.FilterOutputStream.write(I)V
NO_CATEGORY java.io.FilterOutputStream.write([B)V

# Ljava/util/zip/ZipOutputStream
NO_CATEGORY java.util.zip.ZipOutputStream.write([BII)V
NO_CATEGORY java.util.zip.ZipOutputStream.write(I)V
NO_CATEGORY java.util.zip.ZipOutputStream.write([B)V

# Lorg/jcp/xml/dsig/internal/DigesterOutputStream
NO_CATEGORY org.jcp.xml.dsig.internal.DigesterOutputStream.write([B)V
NO_CATEGORY org.jcp.xml.dsig.internal.DigesterOutputStream.write(I)V
NO_CATEGORY org.jcp.xml.dsig.internal.DigesterOutputStream.write([BII)V

# Ljava/io/BufferedOutputStream
NO_CATEGORY java.io.BufferedOutputStream.write([BII)V
NO_CATEGORY java.io.BufferedOutputStream.write(I)V
NO_CATEGORY java.io.BufferedOutputStream.write([B)V

# Ljava/util/zip/GZIPOutputStream
NO_CATEGORY java.util.zip.GZIPOutputStream.write([BII)V
NO_CATEGORY java.util.zip.GZIPOutputStream.write(I)V
NO_CATEGORY java.util.zip.GZIPOutputStream.write([B)V

# Ljava/util/zip/InflaterOutputStream
NO_CATEGORY java.util.zip.InflaterOutputStream.write(I)V
NO_CATEGORY java.util.zip.InflaterOutputStream.write([BII)V
NO_CATEGORY java.util.zip.InflaterOutputStream.write([B)V

# Ljavax/imageio/stream/FileImageOutputStream
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.write(I)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.write([BII)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.write([B)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.writeBoolean(Z)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.writeByte(I)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.writeShort(I)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.writeChar(I)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.writeInt(I)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.writeLong(J)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.writeFloat(F)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.writeDouble(D)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.writeBytes(Ljava/lang/String;)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.writeChars(Ljava/lang/String;)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.writeUTF(Ljava/lang/String;)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.writeShorts([SII)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.writeChars([CII)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.writeInts([III)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.writeLongs([JII)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.writeFloats([FII)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.writeDoubles([DII)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.writeBit(I)V
NO_CATEGORY javax.imageio.stream.FileImageOutputStream.writeBits(JI)V

# Ljava/io/ObjectOutputStream$PutField
NO_CATEGORY java.io.ObjectOutputStream$PutField.write(Ljava/io/ObjectOutput;)V

# Ljava/util/zip/DeflaterOutputStream
NO_CATEGORY java.util.zip.DeflaterOutputStream.write(I)V
NO_CATEGORY java.util.zip.DeflaterOutputStream.write([BII)V
NO_CATEGORY java.util.zip.DeflaterOutputStream.write([B)V

# Ljava/io/ObjectOutputStream$PutFieldImpl
NO_CATEGORY java.io.ObjectOutputStream$PutFieldImpl.write(Ljava/io/ObjectOutput;)V
NO_CATEGORY java.io.ObjectOutputStream$PutFieldImpl.writeFields()V

# Ljava/lang/UNIXProcess$ProcessPipeOutputStream
NO_CATEGORY java.lang.UNIXProcess$ProcessPipeOutputStream.write([BII)V
NO_CATEGORY java.lang.UNIXProcess$ProcessPipeOutputStream.write(I)V
NO_CATEGORY java.lang.UNIXProcess$ProcessPipeOutputStream.write([B)V

# Ljava/io/OutputStreamWriter
NO_CATEGORY java.io.OutputStreamWriter.write([CII)V
NO_CATEGORY java.io.OutputStreamWriter.write(I)V
NO_CATEGORY java.io.OutputStreamWriter.write(Ljava/lang/String;II)V
NO_CATEGORY java.io.OutputStreamWriter.write([C)V
NO_CATEGORY java.io.OutputStreamWriter.write(Ljava/lang/String;)V
NO_CATEGORY java.io.OutputStreamWriter.append(C)Ljava/io/Writer;
NO_CATEGORY java.io.OutputStreamWriter.append(Ljava/lang/CharSequence;)Ljava/io/Writer;
NO_CATEGORY java.io.OutputStreamWriter.append(Ljava/lang/CharSequence;II)Ljava/io/Writer;
NO_CATEGORY java.io.OutputStreamWriter.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
NO_CATEGORY java.io.OutputStreamWriter.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
NO_CATEGORY java.io.OutputStreamWriter.append(C)Ljava/lang/Appendable;

# Lorg/apache/http/impl/io/ContentLengthOutputStream
NO_CATEGORY org.apache.http.impl.io.ContentLengthOutputStream.write([BII)V
NO_CATEGORY org.apache.http.impl.io.ContentLengthOutputStream.write([B)V
NO_CATEGORY org.apache.http.impl.io.ContentLengthOutputStream.write(I)V

# Ljavax/imageio/stream/ImageOutputStream
NO_CATEGORY javax.imageio.stream.ImageOutputStream.write(I)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.write([B)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.write([BII)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.writeBoolean(Z)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.writeByte(I)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.writeShort(I)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.writeChar(I)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.writeInt(I)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.writeLong(J)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.writeFloat(F)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.writeDouble(D)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.writeBytes(Ljava/lang/String;)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.writeChars(Ljava/lang/String;)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.writeUTF(Ljava/lang/String;)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.writeShorts([SII)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.writeChars([CII)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.writeInts([III)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.writeLongs([JII)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.writeFloats([FII)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.writeDoubles([DII)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.writeBit(I)V
NO_CATEGORY javax.imageio.stream.ImageOutputStream.writeBits(JI)V

# Landroid/content/res/AssetFileDescriptor$AutoCloseOutputStream
NO_CATEGORY android.content.res.AssetFileDescriptor$AutoCloseOutputStream.write([BII)V
NO_CATEGORY android.content.res.AssetFileDescriptor$AutoCloseOutputStream.write([B)V
NO_CATEGORY android.content.res.AssetFileDescriptor$AutoCloseOutputStream.write(I)V

# Ljava/io/OutputStream
NO_CATEGORY java.io.OutputStream.write([B)V
NO_CATEGORY java.io.OutputStream.write([BII)V
NO_CATEGORY java.io.OutputStream.write(I)V

# Ljava/io/ObjectOutputStream
NO_CATEGORY java.io.ObjectOutputStream.write([BII)V
NO_CATEGORY java.io.ObjectOutputStream.write(I)V
NO_CATEGORY java.io.ObjectOutputStream.writeBoolean(Z)V
NO_CATEGORY java.io.ObjectOutputStream.writeByte(I)V
NO_CATEGORY java.io.ObjectOutputStream.writeBytes(Ljava/lang/String;)V
NO_CATEGORY java.io.ObjectOutputStream.writeChar(I)V
NO_CATEGORY java.io.ObjectOutputStream.writeChars(Ljava/lang/String;)V
NO_CATEGORY java.io.ObjectOutputStream.writeDouble(D)V
NO_CATEGORY java.io.ObjectOutputStream.writeFields()V
NO_CATEGORY java.io.ObjectOutputStream.writeFloat(F)V
NO_CATEGORY java.io.ObjectOutputStream.writeInt(I)V
NO_CATEGORY java.io.ObjectOutputStream.writeLong(J)V
NO_CATEGORY java.io.ObjectOutputStream.writeClassDescriptor(Ljava/io/ObjectStreamClass;)V
NO_CATEGORY java.io.ObjectOutputStream.writeObject(Ljava/lang/Object;)V
NO_CATEGORY java.io.ObjectOutputStream.writeUnshared(Ljava/lang/Object;)V
NO_CATEGORY java.io.ObjectOutputStream.writeObjectOverride(Ljava/lang/Object;)V
NO_CATEGORY java.io.ObjectOutputStream.writeShort(I)V
NO_CATEGORY java.io.ObjectOutputStream.writeStreamHeader()V
NO_CATEGORY java.io.ObjectOutputStream.writeUTF(Ljava/lang/String;)V
NO_CATEGORY java.io.ObjectOutputStream.write([B)V

# Ljava/rmi/MarshalledObject$MarshalledObjectOutputStream
NO_CATEGORY java.rmi.MarshalledObject$MarshalledObjectOutputStream.write([BII)V
NO_CATEGORY java.rmi.MarshalledObject$MarshalledObjectOutputStream.write(I)V
NO_CATEGORY java.rmi.MarshalledObject$MarshalledObjectOutputStream.writeBoolean(Z)V
NO_CATEGORY java.rmi.MarshalledObject$MarshalledObjectOutputStream.writeByte(I)V
NO_CATEGORY java.rmi.MarshalledObject$MarshalledObjectOutputStream.writeBytes(Ljava/lang/String;)V
NO_CATEGORY java.rmi.MarshalledObject$MarshalledObjectOutputStream.writeChar(I)V
NO_CATEGORY java.rmi.MarshalledObject$MarshalledObjectOutputStream.writeChars(Ljava/lang/String;)V
NO_CATEGORY java.rmi.MarshalledObject$MarshalledObjectOutputStream.writeDouble(D)V
NO_CATEGORY java.rmi.MarshalledObject$MarshalledObjectOutputStream.writeFields()V
NO_CATEGORY java.rmi.MarshalledObject$MarshalledObjectOutputStream.writeFloat(F)V
NO_CATEGORY java.rmi.MarshalledObject$MarshalledObjectOutputStream.writeInt(I)V
NO_CATEGORY java.rmi.MarshalledObject$MarshalledObjectOutputStream.writeLong(J)V
NO_CATEGORY java.rmi.MarshalledObject$MarshalledObjectOutputStream.writeClassDescriptor(Ljava/io/ObjectStreamClass;)V
NO_CATEGORY java.rmi.MarshalledObject$MarshalledObjectOutputStream.writeObject(Ljava/lang/Object;)V
NO_CATEGORY java.rmi.MarshalledObject$MarshalledObjectOutputStream.writeUnshared(Ljava/lang/Object;)V
NO_CATEGORY java.rmi.MarshalledObject$MarshalledObjectOutputStream.writeObjectOverride(Ljava/lang/Object;)V
NO_CATEGORY java.rmi.MarshalledObject$MarshalledObjectOutputStream.writeShort(I)V
NO_CATEGORY java.rmi.MarshalledObject$MarshalledObjectOutputStream.writeStreamHeader()V
NO_CATEGORY java.rmi.MarshalledObject$MarshalledObjectOutputStream.writeUTF(Ljava/lang/String;)V
NO_CATEGORY java.rmi.MarshalledObject$MarshalledObjectOutputStream.write([B)V

# Lorg/jcp/xml/dsig/internal/MacOutputStream
NO_CATEGORY org.jcp.xml.dsig.internal.MacOutputStream.write([B)V
NO_CATEGORY org.jcp.xml.dsig.internal.MacOutputStream.write(I)V
NO_CATEGORY org.jcp.xml.dsig.internal.MacOutputStream.write([BII)V

# Ljava/io/PrintWriter
NO_CATEGORY java.io.PrintWriter.printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;
NO_CATEGORY java.io.PrintWriter.printf(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;
NO_CATEGORY java.io.PrintWriter.print([C)V
NO_CATEGORY java.io.PrintWriter.print(C)V
NO_CATEGORY java.io.PrintWriter.print(D)V
NO_CATEGORY java.io.PrintWriter.print(F)V
NO_CATEGORY java.io.PrintWriter.print(I)V
NO_CATEGORY java.io.PrintWriter.print(J)V
NO_CATEGORY java.io.PrintWriter.print(Ljava/lang/Object;)V
NO_CATEGORY java.io.PrintWriter.print(Ljava/lang/String;)V
NO_CATEGORY java.io.PrintWriter.print(Z)V
NO_CATEGORY java.io.PrintWriter.println()V
NO_CATEGORY java.io.PrintWriter.println([C)V
NO_CATEGORY java.io.PrintWriter.println(C)V
NO_CATEGORY java.io.PrintWriter.println(D)V
NO_CATEGORY java.io.PrintWriter.println(F)V
NO_CATEGORY java.io.PrintWriter.println(I)V
NO_CATEGORY java.io.PrintWriter.println(J)V
NO_CATEGORY java.io.PrintWriter.println(Ljava/lang/Object;)V
NO_CATEGORY java.io.PrintWriter.println(Ljava/lang/String;)V
NO_CATEGORY java.io.PrintWriter.println(Z)V
NO_CATEGORY java.io.PrintWriter.write([C)V
NO_CATEGORY java.io.PrintWriter.write([CII)V
NO_CATEGORY java.io.PrintWriter.write(I)V
NO_CATEGORY java.io.PrintWriter.write(Ljava/lang/String;)V
NO_CATEGORY java.io.PrintWriter.write(Ljava/lang/String;II)V
NO_CATEGORY java.io.PrintWriter.append(C)Ljava/io/PrintWriter;
NO_CATEGORY java.io.PrintWriter.append(Ljava/lang/CharSequence;)Ljava/io/PrintWriter;
NO_CATEGORY java.io.PrintWriter.append(Ljava/lang/CharSequence;II)Ljava/io/PrintWriter;
NO_CATEGORY java.io.PrintWriter.append(Ljava/lang/CharSequence;II)Ljava/io/Writer;
NO_CATEGORY java.io.PrintWriter.append(Ljava/lang/CharSequence;)Ljava/io/Writer;
NO_CATEGORY java.io.PrintWriter.append(C)Ljava/io/Writer;
NO_CATEGORY java.io.PrintWriter.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
NO_CATEGORY java.io.PrintWriter.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
NO_CATEGORY java.io.PrintWriter.append(C)Ljava/lang/Appendable;

# Ljava/lang/Throwable$WrappedPrintWriter
NO_CATEGORY java.lang.Throwable$WrappedPrintWriter.println(Ljava/lang/Object;)V

# Ljavax/sound/sampled/spi/AudioFileWriter
NO_CATEGORY javax.sound.sampled.spi.AudioFileWriter.write(Ljavax/sound/sampled/AudioInputStream;Ljavax/sound/sampled/AudioFileFormat$Type;Ljava/io/OutputStream;)I
NO_CATEGORY javax.sound.sampled.spi.AudioFileWriter.write(Ljavax/sound/sampled/AudioInputStream;Ljavax/sound/sampled/AudioFileFormat$Type;Ljava/io/File;)I

# Ljavax/sql/rowset/spi/XmlWriter
NO_CATEGORY javax.sql.rowset.spi.XmlWriter.writeXML(Ljavax/sql/rowset/WebRowSet;Ljava/io/Writer;)V
NO_CATEGORY javax.sql.RowSetWriter.writeData(Ljavax/sql/RowSetInternal;)Z

# Ljava/io/BufferedWriter
NO_CATEGORY java.io.BufferedWriter.write([CII)V
NO_CATEGORY java.io.BufferedWriter.write(I)V
NO_CATEGORY java.io.BufferedWriter.write(Ljava/lang/String;II)V
NO_CATEGORY java.io.BufferedWriter.write([C)V
NO_CATEGORY java.io.BufferedWriter.write(Ljava/lang/String;)V
NO_CATEGORY java.io.BufferedWriter.append(C)Ljava/io/Writer;
NO_CATEGORY java.io.BufferedWriter.append(Ljava/lang/CharSequence;)Ljava/io/Writer;
NO_CATEGORY java.io.BufferedWriter.append(Ljava/lang/CharSequence;II)Ljava/io/Writer;
NO_CATEGORY java.io.BufferedWriter.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
NO_CATEGORY java.io.BufferedWriter.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
NO_CATEGORY java.io.BufferedWriter.append(C)Ljava/lang/Appendable;

# Lorg/apache/http/impl/io/HttpResponseWriter
NO_CATEGORY org.apache.http.impl.io.HttpResponseWriter.writeHeadLine(Lorg/apache/http/HttpMessage;)V
NO_CATEGORY org.apache.http.impl.io.HttpResponseWriter.write(Lorg/apache/http/HttpMessage;)V

# Landroid/util/JsonWriter
NO_CATEGORY android.util.JsonWriter.value(Ljava/lang/String;)Landroid/util/JsonWriter;
NO_CATEGORY android.util.JsonWriter.value(Z)Landroid/util/JsonWriter;
NO_CATEGORY android.util.JsonWriter.value(D)Landroid/util/JsonWriter;
NO_CATEGORY android.util.JsonWriter.value(J)Landroid/util/JsonWriter;
NO_CATEGORY android.util.JsonWriter.value(Ljava/lang/Number;)Landroid/util/JsonWriter;

# Ljavax/xml/stream/XMLStreamWriter
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeStartElement(Ljava/lang/String;)V
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeStartElement(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeStartElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeEmptyElement(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeEmptyElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeEmptyElement(Ljava/lang/String;)V
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeAttribute(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeAttribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeAttribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeDefaultNamespace(Ljava/lang/String;)V
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeComment(Ljava/lang/String;)V
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeProcessingInstruction(Ljava/lang/String;)V
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeProcessingInstruction(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeCData(Ljava/lang/String;)V
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeDTD(Ljava/lang/String;)V
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeEntityRef(Ljava/lang/String;)V
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeStartDocument()V
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeStartDocument(Ljava/lang/String;)V
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeStartDocument(Ljava/lang/String;Ljava/lang/String;)V
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeCharacters(Ljava/lang/String;)V
NO_CATEGORY javax.xml.stream.XMLStreamWriter.writeCharacters([CII)V

# Landroid/content/ContentProvider$PipeDataWriter
NO_CATEGORY android.content.ContentProvider$PipeDataWriter.writeDataToPipe(Landroid/os/ParcelFileDescriptor;Landroid/net/Uri;Ljava/lang/String;Landroid/os/Bundle;Ljava/lang/Object;)V

# Ljava/io/StringWriter
NO_CATEGORY java.io.StringWriter.write([CII)V
NO_CATEGORY java.io.StringWriter.write(I)V
NO_CATEGORY java.io.StringWriter.write(Ljava/lang/String;)V
NO_CATEGORY java.io.StringWriter.write(Ljava/lang/String;II)V
NO_CATEGORY java.io.StringWriter.append(C)Ljava/io/StringWriter;
NO_CATEGORY java.io.StringWriter.append(Ljava/lang/CharSequence;)Ljava/io/StringWriter;
NO_CATEGORY java.io.StringWriter.append(Ljava/lang/CharSequence;II)Ljava/io/StringWriter;
NO_CATEGORY java.io.StringWriter.append(Ljava/lang/CharSequence;II)Ljava/io/Writer;
NO_CATEGORY java.io.StringWriter.append(Ljava/lang/CharSequence;)Ljava/io/Writer;
NO_CATEGORY java.io.StringWriter.append(C)Ljava/io/Writer;
NO_CATEGORY java.io.StringWriter.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
NO_CATEGORY java.io.StringWriter.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
NO_CATEGORY java.io.StringWriter.append(C)Ljava/lang/Appendable;
NO_CATEGORY java.io.StringWriter.write([C)V

# Ljavax/sql/RowSetWriter
NO_CATEGORY javax.sql.RowSetWriter.writeData(Ljavax/sql/RowSetInternal;)Z

# Ljava/io/FileWriter
FILE java.io.FileWriter.write([CII)V
FILE java.io.FileWriter.write(I)V
FILE java.io.FileWriter.write(Ljava/lang/String;II)V
FILE java.io.FileWriter.write([C)V
FILE java.io.FileWriter.write(Ljava/lang/String;)V
FILE java.io.FileWriter.append(C)Ljava/io/Writer;
FILE java.io.FileWriter.append(Ljava/lang/CharSequence;)Ljava/io/FileWriter;
FILE java.io.FileWriter.append(Ljava/lang/CharSequence;II)Ljava/io/FileWriter;
FILE java.io.FileWriter.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
FILE java.io.FileWriter.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
FILE java.io.FileWriter.append(C)Ljava/lang/Appendable;

# Ljava/io/Writer
NO_CATEGORY java.io.Writer.write([C)V
NO_CATEGORY java.io.Writer.write([CII)V
NO_CATEGORY java.io.Writer.write(I)V
NO_CATEGORY java.io.Writer.write(Ljava/lang/String;)V
NO_CATEGORY java.io.Writer.write(Ljava/lang/String;II)V
NO_CATEGORY java.io.Writer.append(C)Ljava/io/Writer;
NO_CATEGORY java.io.Writer.append(Ljava/lang/CharSequence;)Ljava/io/Writer;
NO_CATEGORY java.io.Writer.append(Ljava/lang/CharSequence;II)Ljava/io/Writer;
NO_CATEGORY java.io.Writer.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
NO_CATEGORY java.io.Writer.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
NO_CATEGORY java.io.Writer.append(C)Ljava/lang/Appendable;

# Ljavax/sound/midi/spi/MidiFileWriter
NO_CATEGORY javax.sound.midi.spi.MidiFileWriter.write(Ljavax/sound/midi/Sequence;ILjava/io/OutputStream;)I
NO_CATEGORY javax.sound.midi.spi.MidiFileWriter.write(Ljavax/sound/midi/Sequence;ILjava/io/File;)I
# Lorg/apache/http/io/HttpMessageWriter
NO_CATEGORY org.apache.http.io.HttpMessageWriter.write(Lorg/apache/http/HttpMessage;)V

# Ljava/lang/Throwable$PrintStreamOrWriter
NO_CATEGORY java.lang.Throwable$PrintStreamOrWriter.println(Ljava/lang/Object;)V

# Ljavax/imageio/ImageWriter
NO_CATEGORY javax.imageio.ImageWriter.write(Ljavax/imageio/metadata/IIOMetadata;Ljavax/imageio/IIOImage;Ljavax/imageio/ImageWriteParam;)V
NO_CATEGORY javax.imageio.ImageWriter.write(Ljavax/imageio/IIOImage;)V
NO_CATEGORY javax.imageio.ImageWriter.write(Ljava/awt/image/RenderedImage;)V
NO_CATEGORY javax.imageio.ImageWriter.writeToSequence(Ljavax/imageio/IIOImage;Ljavax/imageio/ImageWriteParam;)V
NO_CATEGORY javax.imageio.ImageWriter.writeInsert(ILjavax/imageio/IIOImage;Ljavax/imageio/ImageWriteParam;)V

# Ljava/io/FilterWriter
NO_CATEGORY java.io.FilterWriter.write([CII)V
NO_CATEGORY java.io.FilterWriter.write(I)V
NO_CATEGORY java.io.FilterWriter.write(Ljava/lang/String;II)V
NO_CATEGORY java.io.FilterWriter.write([C)V
NO_CATEGORY java.io.FilterWriter.write(Ljava/lang/String;)V
NO_CATEGORY java.io.FilterWriter.append(C)Ljava/io/FilterWriter;
NO_CATEGORY java.io.FilterWriter.append(Ljava/lang/CharSequence;)Ljava/io/FilterWriter;
NO_CATEGORY java.io.FilterWriter.append(Ljava/lang/CharSequence;II)Ljava/io/FilterWriter;
NO_CATEGORY java.io.FilterWriter.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
NO_CATEGORY java.io.FilterWriter.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
NO_CATEGORY java.io.FilterWriter.append(C)Ljava/lang/Appendable;

# Ljava/io/CharArrayWriter
NO_CATEGORY java.io.CharArrayWriter.write([CII)V
NO_CATEGORY java.io.CharArrayWriter.write(I)V
NO_CATEGORY java.io.CharArrayWriter.write(Ljava/lang/String;II)V
NO_CATEGORY java.io.CharArrayWriter.writeTo(Ljava/io/Writer;)V
NO_CATEGORY java.io.CharArrayWriter.append(C)Ljava/io/CharArrayWriter;
NO_CATEGORY java.io.CharArrayWriter.append(Ljava/lang/CharSequence;)Ljava/io/CharArrayWriter;
NO_CATEGORY java.io.CharArrayWriter.append(Ljava/lang/CharSequence;II)Ljava/io/CharArrayWriter;
NO_CATEGORY java.io.CharArrayWriter.append(Ljava/lang/CharSequence;II)Ljava/io/Writer;
NO_CATEGORY java.io.CharArrayWriter.append(Ljava/lang/CharSequence;)Ljava/io/Writer;
NO_CATEGORY java.io.CharArrayWriter.append(C)Ljava/io/Writer;
NO_CATEGORY java.io.CharArrayWriter.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
NO_CATEGORY java.io.CharArrayWriter.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
NO_CATEGORY java.io.CharArrayWriter.append(C)Ljava/lang/Appendable;
NO_CATEGORY java.io.CharArrayWriter.write([C)V
NO_CATEGORY java.io.CharArrayWriter.write(Ljava/lang/String;)V
NO_CATEGORY java.io.CharArrayWriter.append(C)Ljava/io/CharArrayWriter;
NO_CATEGORY java.io.CharArrayWriter.append(Ljava/lang/CharSequence;)Ljava/io/CharArrayWriter;
NO_CATEGORY java.io.CharArrayWriter.append(Ljava/lang/CharSequence;II)Ljava/io/CharArrayWriter;
NO_CATEGORY java.io.CharArrayWriter.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
NO_CATEGORY java.io.CharArrayWriter.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
NO_CATEGORY java.io.CharArrayWriter.append(C)Ljava/lang/Appendable;

# Ljava/io/OutputStreamWriter
NO_CATEGORY java.io.OutputStreamWriter.write([CII)V
NO_CATEGORY java.io.OutputStreamWriter.write(I)V
NO_CATEGORY java.io.OutputStreamWriter.write(Ljava/lang/String;II)V
NO_CATEGORY java.io.OutputStreamWriter.write([C)V
NO_CATEGORY java.io.OutputStreamWriter.write(Ljava/lang/String;)V
NO_CATEGORY java.io.OutputStreamWriter.append(C)Ljava/io/OutputStreamWriter;
NO_CATEGORY java.io.OutputStreamWriter.append(Ljava/lang/CharSequence;)Ljava/io/OutputStreamWriter;
NO_CATEGORY java.io.OutputStreamWriter.append(Ljava/lang/CharSequence;II)Ljava/io/OutputStreamWriter;
NO_CATEGORY java.io.OutputStreamWriter.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
NO_CATEGORY java.io.OutputStreamWriter.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
NO_CATEGORY java.io.OutputStreamWriter.append(C)Ljava/lang/Appendable;

# Landroid/util/PrintWriterPrinter
NO_CATEGORY android.util.PrintWriterPrinter.println(Ljava/lang/String;)V

# Lorg/apache/http/impl/io/HttpRequestWriter
NETWORK org.apache.http.impl.io.HttpRequestWriter.writeHeadLine(Lorg/apache/http/HttpMessage;)V
NETWORK org.apache.http.impl.io.HttpRequestWriter.write(Lorg/apache/http/HttpMessage;)V

# Ljava/io/PipedWriter
NO_CATEGORY java.io.PipedWriter.write([CII)V
NO_CATEGORY java.io.PipedWriter.write(I)V
NO_CATEGORY java.io.PipedWriter.write([C)V
NO_CATEGORY java.io.PipedWriter.write(Ljava/lang/String;)V
NO_CATEGORY java.io.PipedWriter.write(Ljava/lang/String;II)V
NO_CATEGORY java.io.PipedWriter.append(C)Ljava/io/PipedWriter;
NO_CATEGORY java.io.PipedWriter.append(Ljava/lang/CharSequence;)Ljava/io/PipedWriter;
NO_CATEGORY java.io.PipedWriter.append(Ljava/lang/CharSequence;II)Ljava/io/PipedWriter;
NO_CATEGORY java.io.PipedWriter.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
NO_CATEGORY java.io.PipedWriter.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
NO_CATEGORY java.io.PipedWriter.append(C)Ljava/lang/Appendable;





##### These are data containers no sinks that transmit data!  ##########
#NO_CATEGORY org.json.JSONArray.put(ID)Lorg/json/JSONArray;
#NO_CATEGORY org.json.JSONArray.put(II)Lorg/json/JSONArray;
#NO_CATEGORY org.json.JSONArray.put(IJ)Lorg/json/JSONArray;
#NO_CATEGORY org.json.JSONArray.put(IZ)Lorg/json/JSONArray;
#NO_CATEGORY org.json.JSONArray.toJSONObject(Lorg/json/JSONArray;)Lorg/json/JSONObject;
#NO_CATEGORY org.json.JSONArray.toString(I)Ljava/lang/String;
#NO_CATEGORY org.json.JSONObject.accumulate(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
#NO_CATEGORY org.json.JSONObject.put(Ljava/lang/String;D)Lorg/json/JSONObject;
#NO_CATEGORY org.json.JSONObject.put(Ljava/lang/String;I)Lorg/json/JSONObject;
#NO_CATEGORY org.json.JSONObject.put(Ljava/lang/String;J)Lorg/json/JSONObject;
#NO_CATEGORY org.json.JSONObject.put(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
#NO_CATEGORY org.json.JSONObject.put(Ljava/lang/String;Z)Lorg/json/JSONObject;
#NO_CATEGORY org.json.JSONObject.putOpt(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
#NO_CATEGORY org.json.JSONObject.toString(I)Ljava/lang/String;

#NO_CATEGORY android.os.Bundle.forPair(Ljava/lang/String;Ljava/lang/String;)Landroid/os/Bundle;
#NO_CATEGORY android.os.Bundle.putAll(Landroid/os/Bundle;)V
#NO_CATEGORY android.os.Bundle.putBooleanArray(Ljava/lang/String;[Z)V
#NO_CATEGORY android.os.Bundle.putBoolean(Ljava/lang/String;Z)V
#NO_CATEGORY android.os.Bundle.putBundle(Ljava/lang/String;Landroid/os/Bundle;)V
#NO_CATEGORY android.os.Bundle.putByteArray(Ljava/lang/String;[B)V
#NO_CATEGORY android.os.Bundle.putByte(Ljava/lang/String;B)V
#NO_CATEGORY android.os.Bundle.putCharArray(Ljava/lang/String;[C)V
#NO_CATEGORY android.os.Bundle.putChar(Ljava/lang/String;C)V
#NO_CATEGORY android.os.Bundle.putCharSequenceArrayList(Ljava/lang/String;Ljava/util/ArrayList;)V
#NO_CATEGORY android.os.Bundle.putCharSequenceArray(Ljava/lang/String;[Ljava/lang/CharSequence;)V
#NO_CATEGORY android.os.Bundle.putCharSequence(Ljava/lang/String;Ljava/lang/CharSequence;)V
#NO_CATEGORY android.os.Bundle.putDoubleArray(Ljava/lang/String;[D)V
#NO_CATEGORY android.os.Bundle.putDouble(Ljava/lang/String;D)V
#NO_CATEGORY android.os.Bundle.putFloatArray(Ljava/lang/String;[F)V
#NO_CATEGORY android.os.Bundle.putFloat(Ljava/lang/String;F)V
#NO_CATEGORY android.os.Bundle.putIBinder(Ljava/lang/String;Landroid/os/IBinder;)V
#NO_CATEGORY android.os.Bundle.putIntArray(Ljava/lang/String;[I)V
#NO_CATEGORY android.os.Bundle.putIntegerArrayList(Ljava/lang/String;Ljava/util/ArrayList;)V
#NO_CATEGORY android.os.Bundle.putInt(Ljava/lang/String;I)V
#NO_CATEGORY android.os.Bundle.putLongArray(Ljava/lang/String;[J)V
#NO_CATEGORY android.os.Bundle.putLong(Ljava/lang/String;J)V
#NO_CATEGORY android.os.Bundle.putParcelableArrayList(Ljava/lang/String;Ljava/util/ArrayList;)V
#NO_CATEGORY android.os.Bundle.putParcelableArray(Ljava/lang/String;[Landroid/os/Parcelable;)V
#NO_CATEGORY android.os.Bundle.putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V
#NO_CATEGORY android.os.Bundle.putSerializable(Ljava/lang/String;Ljava/io/Serializable;)V
#NO_CATEGORY android.os.Bundle.putShortArray(Ljava/lang/String;[S)V
#NO_CATEGORY android.os.Bundle.putShort(Ljava/lang/String;S)V
#NO_CATEGORY android.os.Bundle.putSparseParcelableArray(Ljava/lang/String;Landroid/util/SparseArray;)V
#NO_CATEGORY android.os.Bundle.putStringArrayList(Ljava/lang/String;Ljava/util/ArrayList;)V
#NO_CATEGORY android.os.Bundle.putStringArray(Ljava/lang/String;[Ljava/lang/String;)V
#NO_CATEGORY android.os.Bundle.putString(Ljava/lang/String;Ljava/lang/String;)V

#NO_CATEGORY android.content.Intent.createChooser(Landroid/content/Intent;Ljava/lang/CharSequence;)Landroid/content/Intent;
#NO_CATEGORY android.content.IntentFilter.writeToParcel(Landroid/os/Parcel;I)V
#NO_CATEGORY android.content.Intent.parseUri(Ljava/lang/String;I)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putCharSequenceArrayListExtra(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;B)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;[B)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;C)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;[C)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;D)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;[D)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;F)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;[F)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;I)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;[I)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;J)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;[J)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;Landroid/os/Bundle;)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;Landroid/os/IBinder;)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;[Landroid/os/Parcelable;)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;Ljava/io/Serializable;)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;Ljava/lang/CharSequence;)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;[Ljava/lang/CharSequence;)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;[Ljava/lang/String;)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;S)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;[S)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;[Z)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtra(Ljava/lang/String;Z)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtras(Landroid/content/Intent;)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putExtras(Landroid/os/Bundle;)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putIntegerArrayListExtra(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putParcelableArrayListExtra(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.putStringArrayListExtra(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;
#NO_CATEGORY android.content.IntentSender.sendIntent(Landroid/content/Context;ILandroid/content/Intent;Landroid/content/IntentSender$OnFinished;Landroid/os/Handler;Ljava/lang/String;)V
#NO_CATEGORY android.content.IntentSender.sendIntent(Landroid/content/Context;ILandroid/content/Intent;Landroid/content/IntentSender$OnFinished;Landroid/os/Handler;)V
#NO_CATEGORY android.content.IntentSender.writeIntentSenderOrNullToParcel(Landroid/content/IntentSender;Landroid/os/Parcel;)V
#NO_CATEGORY android.content.Intent.setAction(Ljava/lang/String;)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.setAllowFds(Z)V
#NO_CATEGORY android.content.Intent.setClassName(Landroid/content/Context;Ljava/lang/String;)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.setClassName(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.setDataAndNormalize(Landroid/net/Uri;)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.setDataAndTypeAndNormalize(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.setExtrasClassLoader(Ljava/lang/ClassLoader;)V
#NO_CATEGORY android.content.Intent.setSourceBounds(Landroid/graphics/Rect;)V
#NO_CATEGORY android.content.Intent.setTypeAndNormalize(Ljava/lang/String;)Landroid/content/Intent;
#NO_CATEGORY android.content.Intent.writeToParcel(Landroid/os/Parcel;I)V

